syntax = "proto3";

package proto;
import "storageclass.proto";
import "service.proto";
import "general.proto";
import "volume.proto";
service PersistentVolume {
    rpc CreatePersistentVolume (PersistentVolumeService) returns (ServiceResponse) {}
    rpc GetPersistentVolume (PersistentVolumeService) returns (ServiceResponse) {}
    rpc DeletePersistentVolume (PersistentVolumeService) returns (ServiceResponse) {}
    rpc PatchPersistentVolume (PersistentVolumeService) returns (ServiceResponse) {}
    rpc PutPersistentVolume (PersistentVolumeService) returns (ServiceResponse) {}
}

message PersistentVolumeService {
    string project_id = 1;
    string service_id = 2;
    string name = 3;
    string version = 4;
    string service_type = 5;
    string service_sub_type = 6;
    string token = 7;
    string company_id = 8;
    PersistentVolumeAttributes service_attributes = 9;
}

message PersistentVolumeAttributes{
    map<string,string>  labels    =1;
    ReclaimPolicy reclaim_policy =2;
    repeated AccessMode access_mode =3;
    string capacity =4;
    PersistentVolumeSource persistent_volume_source=5;
   string storage_class_name =6;
    repeated string mount_options=7;
    string volume_mode=8;
    VolumeNodeAffinity node_affinity=9;
}

message PersistentVolumeSource {
    GCPPD  gcp_pd=1;
    AWSEBS  aws_ebs=2;
    AzureDisk azure_disk=3;
    AzureFile azure_file=4;
}
message GCPPD {
string pd_name=1;
string file_system=2;
int64 partation=3;
bool readonly=4;
}

message AWSEBS {
    string volume_id=1;
    string file_system=2;
    int64 partation=3;
    bool readonly=4;
}

message AzureDisk {
    AzureDataDiskCachingMode cachingMode=1;
    AzureDataDiskKind kind=6;
    string fileSystem=2;
    string diskName=3;
    bool readOnly=4;
    string diskURI =5;
}


message AzureFile {
    string secretName=1;
    string shareName=2;
    bool readOnly=3;
    string secretNamespace=4;
}

enum AccessMode{
    ReadWriteOnce=0;
    ReadOnlyMany=1;
    ReadWriteMany=2;
}

//enum AzureDataDiskCachingMode {
//    None=0;
//    ReadOnly=1;
//    ReadWrite=2;
//}

//enum AzureDataDiskKind {
//    Shared=0;
//    Dedicated=1;
//    Managed=2;
//}
message VolumeNodeAffinity  {
    NodeSelector required=1;
}


