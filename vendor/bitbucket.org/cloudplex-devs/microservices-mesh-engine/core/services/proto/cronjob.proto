syntax = "proto3";
package proto;

import "service.proto";

import "job.proto";

service CronJob {
    rpc CreateCronJob (CronJobService) returns (ServiceResponse) {}
    rpc DeleteCronJob (CronJobService) returns (ServiceResponse) {}
    rpc GetCronJob (CronJobService) returns (ServiceResponse) {}
    rpc PatchCronJob (CronJobService) returns (ServiceResponse) {}
    rpc PutCronJob (CronJobService) returns (ServiceResponse) {}
}

message CronJobService {
    string project_id = 1;
    string service_id = 2;
    string name = 3;
    string version = 4;
    string service_type = 5;
    string service_sub_type = 6;
    string namespace = 7;
    string token = 8;
    string company_id = 9;
    CronJobServiceAttribute CronJobServiceAttribute = 10;
}

message CronJobServiceAttribute {

    string schedule = 1;
    StartingDeadlineSeconds startingDeadlineSeconds = 2;
    ConcurrencyPolicy concurrencyPolicy = 3;
    Suspend suspend = 4;
    FailedJobsHistoryLimit failedJobsHistoryLimit = 5;
    SuccessfulJobsHistoryLimit successfulJobsHistoryLimit = 6;
    map<string, string> labels = 16;
    map<string, string> annotations = 17;
    JobServiceAttribute jobTemplate = 18;
}

message StartingDeadlineSeconds{
    int64 value = 1;
}

message Suspend{
    bool value = 1;
}
message SuccessfulJobsHistoryLimit{
    int32 value = 1;
}

message FailedJobsHistoryLimit{
    int32 value = 1;
}

enum ConcurrencyPolicy{
    Allow = 0;
    Forbid = 1;
    Replace = 2;
}

