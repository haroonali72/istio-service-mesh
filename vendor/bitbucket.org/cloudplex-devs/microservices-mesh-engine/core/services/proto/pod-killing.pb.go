// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pod-killing.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PodRequest struct {
	ApplicationId        string   `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	CompanyId            string   `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Namespace            string   `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	InfraId              string   `protobuf:"bytes,7,opt,name=infra_id,json=infraId,proto3" json:"infra_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodRequest) Reset()         { *m = PodRequest{} }
func (m *PodRequest) String() string { return proto.CompactTextString(m) }
func (*PodRequest) ProtoMessage()    {}
func (*PodRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_84a1eea3bcd1d0c7, []int{0}
}

func (m *PodRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodRequest.Unmarshal(m, b)
}
func (m *PodRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodRequest.Marshal(b, m, deterministic)
}
func (m *PodRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodRequest.Merge(m, src)
}
func (m *PodRequest) XXX_Size() int {
	return xxx_messageInfo_PodRequest.Size(m)
}
func (m *PodRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PodRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PodRequest proto.InternalMessageInfo

func (m *PodRequest) GetApplicationId() string {
	if m != nil {
		return m.ApplicationId
	}
	return ""
}

func (m *PodRequest) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *PodRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *PodRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *PodRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PodRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PodRequest) GetInfraId() string {
	if m != nil {
		return m.InfraId
	}
	return ""
}

type PodResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodResponse) Reset()         { *m = PodResponse{} }
func (m *PodResponse) String() string { return proto.CompactTextString(m) }
func (*PodResponse) ProtoMessage()    {}
func (*PodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84a1eea3bcd1d0c7, []int{1}
}

func (m *PodResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodResponse.Unmarshal(m, b)
}
func (m *PodResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodResponse.Marshal(b, m, deterministic)
}
func (m *PodResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodResponse.Merge(m, src)
}
func (m *PodResponse) XXX_Size() int {
	return xxx_messageInfo_PodResponse.Size(m)
}
func (m *PodResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PodResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PodResponse proto.InternalMessageInfo

func (m *PodResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *PodResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*PodRequest)(nil), "proto.PodRequest")
	proto.RegisterType((*PodResponse)(nil), "proto.PodResponse")
}

func init() {
	proto.RegisterFile("pod-killing.proto", fileDescriptor_84a1eea3bcd1d0c7)
}

var fileDescriptor_84a1eea3bcd1d0c7 = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0xad, 0x76, 0xbb, 0xee, 0x88, 0x85, 0x0e, 0x1e, 0xa2, 0x28, 0xc8, 0x82, 0xe0, 0xc5,
	0x1e, 0xea, 0xd9, 0x9b, 0x97, 0xe2, 0x45, 0xea, 0x03, 0x48, 0xdc, 0x8c, 0x25, 0x74, 0x9b, 0xc4,
	0x24, 0x0a, 0x7d, 0x44, 0xdf, 0xca, 0x64, 0xb2, 0x6a, 0x4f, 0x99, 0xff, 0x9b, 0x99, 0xcc, 0xcc,
	0x0f, 0x33, 0x67, 0xd5, 0xdd, 0x46, 0xf7, 0xbd, 0x36, 0xeb, 0xb9, 0xf3, 0x36, 0x5a, 0xac, 0xf8,
	0x69, 0xbf, 0x47, 0x00, 0xcf, 0x56, 0xad, 0xe8, 0xe3, 0x93, 0x42, 0xc4, 0x1b, 0x98, 0x4a, 0xe7,
	0x7a, 0xdd, 0xc9, 0xa8, 0xad, 0x79, 0xd5, 0x4a, 0x8c, 0xae, 0x47, 0xb7, 0xcd, 0xea, 0x74, 0x8f,
	0x2e, 0x15, 0x5e, 0x01, 0x74, 0x76, 0xeb, 0xa4, 0xd9, 0xe5, 0x92, 0x43, 0x2e, 0x69, 0x06, 0x92,
	0xd2, 0x67, 0x50, 0x45, 0xbb, 0x21, 0x23, 0x8e, 0x38, 0x53, 0x04, 0x5e, 0x42, 0x63, 0xe4, 0x96,
	0x82, 0x93, 0x1d, 0x89, 0x71, 0xe9, 0xf9, 0x03, 0x88, 0x30, 0xce, 0x42, 0x54, 0x9c, 0xe0, 0x38,
	0xb3, 0xb8, 0x73, 0x24, 0x26, 0x85, 0xe5, 0x18, 0xcf, 0xe1, 0x58, 0x9b, 0x77, 0x2f, 0xf3, 0xe0,
	0x9a, 0x79, 0xcd, 0x7a, 0xa9, 0xda, 0x07, 0x38, 0xe1, 0x53, 0x82, 0xb3, 0x26, 0x10, 0x0a, 0xa8,
	0xd3, 0xe7, 0x41, 0xae, 0x69, 0x38, 0xe2, 0x57, 0xe6, 0xfd, 0xc8, 0x7b, 0xeb, 0x87, 0xcd, 0x8b,
	0x58, 0x3c, 0xc2, 0x34, 0xb5, 0x3f, 0x25, 0x97, 0x5e, 0xc8, 0x7f, 0xe9, 0xb4, 0xd3, 0x02, 0xea,
	0x2c, 0x13, 0xc5, 0x59, 0xb1, 0x6d, 0xfe, 0xef, 0xd5, 0x05, 0xee, 0xa3, 0x32, 0xb3, 0x3d, 0x78,
	0x9b, 0x30, 0xbc, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0x65, 0x70, 0x1d, 0x2e, 0x73, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PodKillServiceClient is the client API for PodKillService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PodKillServiceClient interface {
	KillPod(ctx context.Context, in *PodRequest, opts ...grpc.CallOption) (*PodResponse, error)
}

type podKillServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPodKillServiceClient(cc grpc.ClientConnInterface) PodKillServiceClient {
	return &podKillServiceClient{cc}
}

func (c *podKillServiceClient) KillPod(ctx context.Context, in *PodRequest, opts ...grpc.CallOption) (*PodResponse, error) {
	out := new(PodResponse)
	err := c.cc.Invoke(ctx, "/proto.PodKillService/KillPod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PodKillServiceServer is the server API for PodKillService service.
type PodKillServiceServer interface {
	KillPod(context.Context, *PodRequest) (*PodResponse, error)
}

// UnimplementedPodKillServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPodKillServiceServer struct {
}

func (*UnimplementedPodKillServiceServer) KillPod(ctx context.Context, req *PodRequest) (*PodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KillPod not implemented")
}

func RegisterPodKillServiceServer(s *grpc.Server, srv PodKillServiceServer) {
	s.RegisterService(&_PodKillService_serviceDesc, srv)
}

func _PodKillService_KillPod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PodKillServiceServer).KillPod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.PodKillService/KillPod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PodKillServiceServer).KillPod(ctx, req.(*PodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PodKillService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.PodKillService",
	HandlerType: (*PodKillServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "KillPod",
			Handler:    _PodKillService_KillPod_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pod-killing.proto",
}
