// Code generated by protoc-gen-go. DO NOT EDIT.
// source: annotateNamespace.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Namespacerequest struct {
	ApplicationId        string   `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	CompanyId            string   `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Namespace            string   `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	InfraId              string   `protobuf:"bytes,5,opt,name=infra_id,json=infraId,proto3" json:"infra_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Namespacerequest) Reset()         { *m = Namespacerequest{} }
func (m *Namespacerequest) String() string { return proto.CompactTextString(m) }
func (*Namespacerequest) ProtoMessage()    {}
func (*Namespacerequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a309dda261f6d9c7, []int{0}
}

func (m *Namespacerequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Namespacerequest.Unmarshal(m, b)
}
func (m *Namespacerequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Namespacerequest.Marshal(b, m, deterministic)
}
func (m *Namespacerequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Namespacerequest.Merge(m, src)
}
func (m *Namespacerequest) XXX_Size() int {
	return xxx_messageInfo_Namespacerequest.Size(m)
}
func (m *Namespacerequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Namespacerequest.DiscardUnknown(m)
}

var xxx_messageInfo_Namespacerequest proto.InternalMessageInfo

func (m *Namespacerequest) GetApplicationId() string {
	if m != nil {
		return m.ApplicationId
	}
	return ""
}

func (m *Namespacerequest) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *Namespacerequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Namespacerequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Namespacerequest) GetInfraId() string {
	if m != nil {
		return m.InfraId
	}
	return ""
}

type Namespaceresponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Namespaceresponse) Reset()         { *m = Namespaceresponse{} }
func (m *Namespaceresponse) String() string { return proto.CompactTextString(m) }
func (*Namespaceresponse) ProtoMessage()    {}
func (*Namespaceresponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a309dda261f6d9c7, []int{1}
}

func (m *Namespaceresponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Namespaceresponse.Unmarshal(m, b)
}
func (m *Namespaceresponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Namespaceresponse.Marshal(b, m, deterministic)
}
func (m *Namespaceresponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Namespaceresponse.Merge(m, src)
}
func (m *Namespaceresponse) XXX_Size() int {
	return xxx_messageInfo_Namespaceresponse.Size(m)
}
func (m *Namespaceresponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Namespaceresponse.DiscardUnknown(m)
}

var xxx_messageInfo_Namespaceresponse proto.InternalMessageInfo

func (m *Namespaceresponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Namespacerequest)(nil), "proto.Namespacerequest")
	proto.RegisterType((*Namespaceresponse)(nil), "proto.Namespaceresponse")
}

func init() {
	proto.RegisterFile("annotateNamespace.proto", fileDescriptor_a309dda261f6d9c7)
}

var fileDescriptor_a309dda261f6d9c7 = []byte{
	// 220 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x4f, 0xcc, 0xcb, 0xcb,
	0x2f, 0x49, 0x2c, 0x49, 0xf5, 0x4b, 0xcc, 0x4d, 0x2d, 0x2e, 0x48, 0x4c, 0x4e, 0xd5, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xcb, 0x19, 0xb9, 0x04, 0xe0, 0x52, 0x45, 0xa9,
	0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0xaa, 0x5c, 0x7c, 0x89, 0x05, 0x05, 0x39, 0x99, 0xc9, 0x89,
	0x25, 0x99, 0xf9, 0x79, 0xf1, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0xbc, 0x48,
	0xa2, 0x9e, 0x29, 0x42, 0xb2, 0x5c, 0x5c, 0xc9, 0xf9, 0xb9, 0x05, 0x89, 0x79, 0x95, 0x20, 0x25,
	0x4c, 0x60, 0x25, 0x9c, 0x50, 0x11, 0xa0, 0xb4, 0x08, 0x17, 0x6b, 0x49, 0x7e, 0x76, 0x6a, 0x9e,
	0x04, 0x33, 0x58, 0x06, 0xc2, 0x11, 0x92, 0xe1, 0xe2, 0xcc, 0x83, 0xd9, 0x27, 0xc1, 0x02, 0xd1,
	0x03, 0x17, 0x10, 0x92, 0xe4, 0xe2, 0xc8, 0xcc, 0x4b, 0x2b, 0x4a, 0x04, 0x19, 0xc8, 0x0a, 0x96,
	0x64, 0x07, 0xf3, 0x3d, 0x53, 0x94, 0x74, 0xb9, 0x04, 0x91, 0x1c, 0x5a, 0x5c, 0x90, 0x9f, 0x57,
	0x9c, 0x2a, 0x24, 0xc1, 0xc5, 0x0e, 0x14, 0x2a, 0x4e, 0x4c, 0x4f, 0x85, 0x3a, 0x11, 0xc6, 0x35,
	0x8a, 0xe5, 0x12, 0x74, 0x44, 0xf7, 0xba, 0x90, 0x07, 0x36, 0x41, 0x71, 0x48, 0x88, 0xe8, 0xa1,
	0x07, 0x83, 0x94, 0x04, 0xa6, 0x04, 0xc4, 0x5a, 0x25, 0x86, 0x24, 0x36, 0xb0, 0x94, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0x80, 0xd9, 0xbb, 0x44, 0x60, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AnnotateNamespaceClient is the client API for AnnotateNamespace service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnnotateNamespaceClient interface {
	AnnotateNamespace(ctx context.Context, in *Namespacerequest, opts ...grpc.CallOption) (*Namespaceresponse, error)
}

type annotateNamespaceClient struct {
	cc grpc.ClientConnInterface
}

func NewAnnotateNamespaceClient(cc grpc.ClientConnInterface) AnnotateNamespaceClient {
	return &annotateNamespaceClient{cc}
}

func (c *annotateNamespaceClient) AnnotateNamespace(ctx context.Context, in *Namespacerequest, opts ...grpc.CallOption) (*Namespaceresponse, error) {
	out := new(Namespaceresponse)
	err := c.cc.Invoke(ctx, "/proto.AnnotateNamespace/AnnotateNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnnotateNamespaceServer is the server API for AnnotateNamespace service.
type AnnotateNamespaceServer interface {
	AnnotateNamespace(context.Context, *Namespacerequest) (*Namespaceresponse, error)
}

// UnimplementedAnnotateNamespaceServer can be embedded to have forward compatible implementations.
type UnimplementedAnnotateNamespaceServer struct {
}

func (*UnimplementedAnnotateNamespaceServer) AnnotateNamespace(ctx context.Context, req *Namespacerequest) (*Namespaceresponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AnnotateNamespace not implemented")
}

func RegisterAnnotateNamespaceServer(s *grpc.Server, srv AnnotateNamespaceServer) {
	s.RegisterService(&_AnnotateNamespace_serviceDesc, srv)
}

func _AnnotateNamespace_AnnotateNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Namespacerequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnnotateNamespaceServer).AnnotateNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AnnotateNamespace/AnnotateNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnnotateNamespaceServer).AnnotateNamespace(ctx, req.(*Namespacerequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AnnotateNamespace_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AnnotateNamespace",
	HandlerType: (*AnnotateNamespaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AnnotateNamespace",
			Handler:    _AnnotateNamespace_AnnotateNamespace_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "annotateNamespace.proto",
}
