// Code generated by protoc-gen-go. DO NOT EDIT.
// source: volume.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HostPathType int32

const (
	HostPathType_Unset             HostPathType = 0
	HostPathType_DirectoryOrCreate HostPathType = 1
	HostPathType_Directory         HostPathType = 2
	HostPathType_FileOrCreate      HostPathType = 3
	HostPathType_File              HostPathType = 4
	HostPathType_Socket            HostPathType = 5
	HostPathType_CharDevice        HostPathType = 6
	HostPathType_BlockDevice       HostPathType = 7
)

var HostPathType_name = map[int32]string{
	0: "Unset",
	1: "DirectoryOrCreate",
	2: "Directory",
	3: "FileOrCreate",
	4: "File",
	5: "Socket",
	6: "CharDevice",
	7: "BlockDevice",
}

var HostPathType_value = map[string]int32{
	"Unset":             0,
	"DirectoryOrCreate": 1,
	"Directory":         2,
	"FileOrCreate":      3,
	"File":              4,
	"Socket":            5,
	"CharDevice":        6,
	"BlockDevice":       7,
}

func (x HostPathType) String() string {
	return proto.EnumName(HostPathType_name, int32(x))
}

func (HostPathType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{0}
}

type StorageMedium int32

const (
	StorageMedium_StorageMediumDefault StorageMedium = 0
	StorageMedium_Memory               StorageMedium = 1
	StorageMedium_HugePages            StorageMedium = 2
)

var StorageMedium_name = map[int32]string{
	0: "StorageMediumDefault",
	1: "Memory",
	2: "HugePages",
}

var StorageMedium_value = map[string]int32{
	"StorageMediumDefault": 0,
	"Memory":               1,
	"HugePages":            2,
}

func (x StorageMedium) String() string {
	return proto.EnumName(StorageMedium_name, int32(x))
}

func (StorageMedium) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{1}
}

type AzureDataDiskCachingMode int32

const (
	AzureDataDiskCachingMode_ModeNone  AzureDataDiskCachingMode = 0
	AzureDataDiskCachingMode_ReadOnly  AzureDataDiskCachingMode = 1
	AzureDataDiskCachingMode_ReadWrite AzureDataDiskCachingMode = 2
)

var AzureDataDiskCachingMode_name = map[int32]string{
	0: "ModeNone",
	1: "ReadOnly",
	2: "ReadWrite",
}

var AzureDataDiskCachingMode_value = map[string]int32{
	"ModeNone":  0,
	"ReadOnly":  1,
	"ReadWrite": 2,
}

func (x AzureDataDiskCachingMode) String() string {
	return proto.EnumName(AzureDataDiskCachingMode_name, int32(x))
}

func (AzureDataDiskCachingMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{2}
}

type AzureDataDiskKind int32

const (
	AzureDataDiskKind_Shared    AzureDataDiskKind = 0
	AzureDataDiskKind_Dedicated AzureDataDiskKind = 1
	AzureDataDiskKind_Managed   AzureDataDiskKind = 2
)

var AzureDataDiskKind_name = map[int32]string{
	0: "Shared",
	1: "Dedicated",
	2: "Managed",
}

var AzureDataDiskKind_value = map[string]int32{
	"Shared":    0,
	"Dedicated": 1,
	"Managed":   2,
}

func (x AzureDataDiskKind) String() string {
	return proto.EnumName(AzureDataDiskKind_name, int32(x))
}

func (AzureDataDiskKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{3}
}

type Volume struct {
	Name                 string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	VolumeSource         *VolumeSource `protobuf:"bytes,2,opt,name=volumeSource,proto3" json:"volumeSource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Volume) Reset()         { *m = Volume{} }
func (m *Volume) String() string { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()    {}
func (*Volume) Descriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{0}
}

func (m *Volume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume.Unmarshal(m, b)
}
func (m *Volume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume.Marshal(b, m, deterministic)
}
func (m *Volume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume.Merge(m, src)
}
func (m *Volume) XXX_Size() int {
	return xxx_messageInfo_Volume.Size(m)
}
func (m *Volume) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume.DiscardUnknown(m)
}

var xxx_messageInfo_Volume proto.InternalMessageInfo

func (m *Volume) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Volume) GetVolumeSource() *VolumeSource {
	if m != nil {
		return m.VolumeSource
	}
	return nil
}

type VolumeSource struct {
	HostPath              *HostPathVolumeSource              `protobuf:"bytes,1,opt,name=hostPath,proto3" json:"hostPath,omitempty"`
	EmptyDir              *EmptyDirVolumeSource              `protobuf:"bytes,2,opt,name=empty_dir,json=emptyDir,proto3" json:"empty_dir,omitempty"`
	GcePersistentDisk     *GCEPersistentDiskVolumeSource     `protobuf:"bytes,3,opt,name=gce_persistent_disk,json=gcePersistentDisk,proto3" json:"gce_persistent_disk,omitempty"`
	Secret                *SecretVolumeSource                `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
	PersistentVolumeClaim *PersistentVolumeClaimVolumeSource `protobuf:"bytes,5,opt,name=persistent_volume_claim,json=persistentVolumeClaim,proto3" json:"persistent_volume_claim,omitempty"`
	AzureFile             *AzureFileVolumeSource             `protobuf:"bytes,6,opt,name=azure_file,json=azureFile,proto3" json:"azure_file,omitempty"`
	ConfigMap             *ConfigMapVolumeSource             `protobuf:"bytes,7,opt,name=config_map,json=configMap,proto3" json:"config_map,omitempty"`
	AzureDisk             *AzureDiskVolumeSource             `protobuf:"bytes,8,opt,name=azure_disk,json=azureDisk,proto3" json:"azure_disk,omitempty"`
	AwsElasticBlockStore  *AWSElasticBlockStoreVolumeSource  `protobuf:"bytes,9,opt,name=aws_elastic_block_store,json=awsElasticBlockStore,proto3" json:"aws_elastic_block_store,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                           `json:"-"`
	XXX_unrecognized      []byte                             `json:"-"`
	XXX_sizecache         int32                              `json:"-"`
}

func (m *VolumeSource) Reset()         { *m = VolumeSource{} }
func (m *VolumeSource) String() string { return proto.CompactTextString(m) }
func (*VolumeSource) ProtoMessage()    {}
func (*VolumeSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{1}
}

func (m *VolumeSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSource.Unmarshal(m, b)
}
func (m *VolumeSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSource.Marshal(b, m, deterministic)
}
func (m *VolumeSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSource.Merge(m, src)
}
func (m *VolumeSource) XXX_Size() int {
	return xxx_messageInfo_VolumeSource.Size(m)
}
func (m *VolumeSource) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSource.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSource proto.InternalMessageInfo

func (m *VolumeSource) GetHostPath() *HostPathVolumeSource {
	if m != nil {
		return m.HostPath
	}
	return nil
}

func (m *VolumeSource) GetEmptyDir() *EmptyDirVolumeSource {
	if m != nil {
		return m.EmptyDir
	}
	return nil
}

func (m *VolumeSource) GetGcePersistentDisk() *GCEPersistentDiskVolumeSource {
	if m != nil {
		return m.GcePersistentDisk
	}
	return nil
}

func (m *VolumeSource) GetSecret() *SecretVolumeSource {
	if m != nil {
		return m.Secret
	}
	return nil
}

func (m *VolumeSource) GetPersistentVolumeClaim() *PersistentVolumeClaimVolumeSource {
	if m != nil {
		return m.PersistentVolumeClaim
	}
	return nil
}

func (m *VolumeSource) GetAzureFile() *AzureFileVolumeSource {
	if m != nil {
		return m.AzureFile
	}
	return nil
}

func (m *VolumeSource) GetConfigMap() *ConfigMapVolumeSource {
	if m != nil {
		return m.ConfigMap
	}
	return nil
}

func (m *VolumeSource) GetAzureDisk() *AzureDiskVolumeSource {
	if m != nil {
		return m.AzureDisk
	}
	return nil
}

func (m *VolumeSource) GetAwsElasticBlockStore() *AWSElasticBlockStoreVolumeSource {
	if m != nil {
		return m.AwsElasticBlockStore
	}
	return nil
}

type HostPathVolumeSource struct {
	Path                 string       `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Type                 HostPathType `protobuf:"varint,2,opt,name=type,proto3,enum=proto.HostPathType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *HostPathVolumeSource) Reset()         { *m = HostPathVolumeSource{} }
func (m *HostPathVolumeSource) String() string { return proto.CompactTextString(m) }
func (*HostPathVolumeSource) ProtoMessage()    {}
func (*HostPathVolumeSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{2}
}

func (m *HostPathVolumeSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostPathVolumeSource.Unmarshal(m, b)
}
func (m *HostPathVolumeSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostPathVolumeSource.Marshal(b, m, deterministic)
}
func (m *HostPathVolumeSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostPathVolumeSource.Merge(m, src)
}
func (m *HostPathVolumeSource) XXX_Size() int {
	return xxx_messageInfo_HostPathVolumeSource.Size(m)
}
func (m *HostPathVolumeSource) XXX_DiscardUnknown() {
	xxx_messageInfo_HostPathVolumeSource.DiscardUnknown(m)
}

var xxx_messageInfo_HostPathVolumeSource proto.InternalMessageInfo

func (m *HostPathVolumeSource) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *HostPathVolumeSource) GetType() HostPathType {
	if m != nil {
		return m.Type
	}
	return HostPathType_Unset
}

type EmptyDirVolumeSource struct {
	Medium               StorageMedium `protobuf:"varint,1,opt,name=medium,proto3,enum=proto.StorageMedium" json:"medium,omitempty"`
	SizeLimit            string        `protobuf:"bytes,2,opt,name=sizeLimit,proto3" json:"sizeLimit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *EmptyDirVolumeSource) Reset()         { *m = EmptyDirVolumeSource{} }
func (m *EmptyDirVolumeSource) String() string { return proto.CompactTextString(m) }
func (*EmptyDirVolumeSource) ProtoMessage()    {}
func (*EmptyDirVolumeSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{3}
}

func (m *EmptyDirVolumeSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyDirVolumeSource.Unmarshal(m, b)
}
func (m *EmptyDirVolumeSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyDirVolumeSource.Marshal(b, m, deterministic)
}
func (m *EmptyDirVolumeSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyDirVolumeSource.Merge(m, src)
}
func (m *EmptyDirVolumeSource) XXX_Size() int {
	return xxx_messageInfo_EmptyDirVolumeSource.Size(m)
}
func (m *EmptyDirVolumeSource) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyDirVolumeSource.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyDirVolumeSource proto.InternalMessageInfo

func (m *EmptyDirVolumeSource) GetMedium() StorageMedium {
	if m != nil {
		return m.Medium
	}
	return StorageMedium_StorageMediumDefault
}

func (m *EmptyDirVolumeSource) GetSizeLimit() string {
	if m != nil {
		return m.SizeLimit
	}
	return ""
}

type GCEPersistentDiskVolumeSource struct {
	PdName               string   `protobuf:"bytes,1,opt,name=pd_name,json=pdName,proto3" json:"pd_name,omitempty"`
	FsType               string   `protobuf:"bytes,2,opt,name=fs_type,json=fsType,proto3" json:"fs_type,omitempty"`
	Partition            int32    `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	Readonly             bool     `protobuf:"varint,4,opt,name=readonly,proto3" json:"readonly,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GCEPersistentDiskVolumeSource) Reset()         { *m = GCEPersistentDiskVolumeSource{} }
func (m *GCEPersistentDiskVolumeSource) String() string { return proto.CompactTextString(m) }
func (*GCEPersistentDiskVolumeSource) ProtoMessage()    {}
func (*GCEPersistentDiskVolumeSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{4}
}

func (m *GCEPersistentDiskVolumeSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCEPersistentDiskVolumeSource.Unmarshal(m, b)
}
func (m *GCEPersistentDiskVolumeSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCEPersistentDiskVolumeSource.Marshal(b, m, deterministic)
}
func (m *GCEPersistentDiskVolumeSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCEPersistentDiskVolumeSource.Merge(m, src)
}
func (m *GCEPersistentDiskVolumeSource) XXX_Size() int {
	return xxx_messageInfo_GCEPersistentDiskVolumeSource.Size(m)
}
func (m *GCEPersistentDiskVolumeSource) XXX_DiscardUnknown() {
	xxx_messageInfo_GCEPersistentDiskVolumeSource.DiscardUnknown(m)
}

var xxx_messageInfo_GCEPersistentDiskVolumeSource proto.InternalMessageInfo

func (m *GCEPersistentDiskVolumeSource) GetPdName() string {
	if m != nil {
		return m.PdName
	}
	return ""
}

func (m *GCEPersistentDiskVolumeSource) GetFsType() string {
	if m != nil {
		return m.FsType
	}
	return ""
}

func (m *GCEPersistentDiskVolumeSource) GetPartition() int32 {
	if m != nil {
		return m.Partition
	}
	return 0
}

func (m *GCEPersistentDiskVolumeSource) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

type SecretVolumeSource struct {
	SecretName           string       `protobuf:"bytes,1,opt,name=secret_name,json=secretName,proto3" json:"secret_name,omitempty"`
	DefaultMode          int32        `protobuf:"varint,2,opt,name=default_mode,json=defaultMode,proto3" json:"default_mode,omitempty"`
	Items                []*KeyToPath `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Optional             bool         `protobuf:"varint,4,opt,name=optional,proto3" json:"optional,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SecretVolumeSource) Reset()         { *m = SecretVolumeSource{} }
func (m *SecretVolumeSource) String() string { return proto.CompactTextString(m) }
func (*SecretVolumeSource) ProtoMessage()    {}
func (*SecretVolumeSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{5}
}

func (m *SecretVolumeSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecretVolumeSource.Unmarshal(m, b)
}
func (m *SecretVolumeSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecretVolumeSource.Marshal(b, m, deterministic)
}
func (m *SecretVolumeSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecretVolumeSource.Merge(m, src)
}
func (m *SecretVolumeSource) XXX_Size() int {
	return xxx_messageInfo_SecretVolumeSource.Size(m)
}
func (m *SecretVolumeSource) XXX_DiscardUnknown() {
	xxx_messageInfo_SecretVolumeSource.DiscardUnknown(m)
}

var xxx_messageInfo_SecretVolumeSource proto.InternalMessageInfo

func (m *SecretVolumeSource) GetSecretName() string {
	if m != nil {
		return m.SecretName
	}
	return ""
}

func (m *SecretVolumeSource) GetDefaultMode() int32 {
	if m != nil {
		return m.DefaultMode
	}
	return 0
}

func (m *SecretVolumeSource) GetItems() []*KeyToPath {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *SecretVolumeSource) GetOptional() bool {
	if m != nil {
		return m.Optional
	}
	return false
}

type KeyToPath struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Mode                 int32    `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyToPath) Reset()         { *m = KeyToPath{} }
func (m *KeyToPath) String() string { return proto.CompactTextString(m) }
func (*KeyToPath) ProtoMessage()    {}
func (*KeyToPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{6}
}

func (m *KeyToPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyToPath.Unmarshal(m, b)
}
func (m *KeyToPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyToPath.Marshal(b, m, deterministic)
}
func (m *KeyToPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyToPath.Merge(m, src)
}
func (m *KeyToPath) XXX_Size() int {
	return xxx_messageInfo_KeyToPath.Size(m)
}
func (m *KeyToPath) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyToPath.DiscardUnknown(m)
}

var xxx_messageInfo_KeyToPath proto.InternalMessageInfo

func (m *KeyToPath) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyToPath) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *KeyToPath) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

type PersistentVolumeClaimVolumeSource struct {
	ClaimName            string   `protobuf:"bytes,1,opt,name=claim_name,json=claimName,proto3" json:"claim_name,omitempty"`
	Readonly             bool     `protobuf:"varint,2,opt,name=readonly,proto3" json:"readonly,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersistentVolumeClaimVolumeSource) Reset()         { *m = PersistentVolumeClaimVolumeSource{} }
func (m *PersistentVolumeClaimVolumeSource) String() string { return proto.CompactTextString(m) }
func (*PersistentVolumeClaimVolumeSource) ProtoMessage()    {}
func (*PersistentVolumeClaimVolumeSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{7}
}

func (m *PersistentVolumeClaimVolumeSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersistentVolumeClaimVolumeSource.Unmarshal(m, b)
}
func (m *PersistentVolumeClaimVolumeSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersistentVolumeClaimVolumeSource.Marshal(b, m, deterministic)
}
func (m *PersistentVolumeClaimVolumeSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersistentVolumeClaimVolumeSource.Merge(m, src)
}
func (m *PersistentVolumeClaimVolumeSource) XXX_Size() int {
	return xxx_messageInfo_PersistentVolumeClaimVolumeSource.Size(m)
}
func (m *PersistentVolumeClaimVolumeSource) XXX_DiscardUnknown() {
	xxx_messageInfo_PersistentVolumeClaimVolumeSource.DiscardUnknown(m)
}

var xxx_messageInfo_PersistentVolumeClaimVolumeSource proto.InternalMessageInfo

func (m *PersistentVolumeClaimVolumeSource) GetClaimName() string {
	if m != nil {
		return m.ClaimName
	}
	return ""
}

func (m *PersistentVolumeClaimVolumeSource) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

type AzureFileVolumeSource struct {
	SecretName           string   `protobuf:"bytes,1,opt,name=secret_name,json=secretName,proto3" json:"secret_name,omitempty"`
	ShareName            string   `protobuf:"bytes,2,opt,name=share_name,json=shareName,proto3" json:"share_name,omitempty"`
	Readonly             bool     `protobuf:"varint,3,opt,name=readonly,proto3" json:"readonly,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AzureFileVolumeSource) Reset()         { *m = AzureFileVolumeSource{} }
func (m *AzureFileVolumeSource) String() string { return proto.CompactTextString(m) }
func (*AzureFileVolumeSource) ProtoMessage()    {}
func (*AzureFileVolumeSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{8}
}

func (m *AzureFileVolumeSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AzureFileVolumeSource.Unmarshal(m, b)
}
func (m *AzureFileVolumeSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AzureFileVolumeSource.Marshal(b, m, deterministic)
}
func (m *AzureFileVolumeSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AzureFileVolumeSource.Merge(m, src)
}
func (m *AzureFileVolumeSource) XXX_Size() int {
	return xxx_messageInfo_AzureFileVolumeSource.Size(m)
}
func (m *AzureFileVolumeSource) XXX_DiscardUnknown() {
	xxx_messageInfo_AzureFileVolumeSource.DiscardUnknown(m)
}

var xxx_messageInfo_AzureFileVolumeSource proto.InternalMessageInfo

func (m *AzureFileVolumeSource) GetSecretName() string {
	if m != nil {
		return m.SecretName
	}
	return ""
}

func (m *AzureFileVolumeSource) GetShareName() string {
	if m != nil {
		return m.ShareName
	}
	return ""
}

func (m *AzureFileVolumeSource) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

type ConfigMapVolumeSource struct {
	Name                 string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Items                []*KeyToPath `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	DefaultMode          int32        `protobuf:"varint,3,opt,name=default_mode,json=defaultMode,proto3" json:"default_mode,omitempty"`
	Optional             bool         `protobuf:"varint,4,opt,name=optional,proto3" json:"optional,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ConfigMapVolumeSource) Reset()         { *m = ConfigMapVolumeSource{} }
func (m *ConfigMapVolumeSource) String() string { return proto.CompactTextString(m) }
func (*ConfigMapVolumeSource) ProtoMessage()    {}
func (*ConfigMapVolumeSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{9}
}

func (m *ConfigMapVolumeSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigMapVolumeSource.Unmarshal(m, b)
}
func (m *ConfigMapVolumeSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigMapVolumeSource.Marshal(b, m, deterministic)
}
func (m *ConfigMapVolumeSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigMapVolumeSource.Merge(m, src)
}
func (m *ConfigMapVolumeSource) XXX_Size() int {
	return xxx_messageInfo_ConfigMapVolumeSource.Size(m)
}
func (m *ConfigMapVolumeSource) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigMapVolumeSource.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigMapVolumeSource proto.InternalMessageInfo

func (m *ConfigMapVolumeSource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfigMapVolumeSource) GetItems() []*KeyToPath {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ConfigMapVolumeSource) GetDefaultMode() int32 {
	if m != nil {
		return m.DefaultMode
	}
	return 0
}

func (m *ConfigMapVolumeSource) GetOptional() bool {
	if m != nil {
		return m.Optional
	}
	return false
}

type AzureDiskVolumeSource struct {
	DiskName             string                   `protobuf:"bytes,1,opt,name=disk_name,json=diskName,proto3" json:"disk_name,omitempty"`
	DiskUri              string                   `protobuf:"bytes,2,opt,name=disk_uri,json=diskUri,proto3" json:"disk_uri,omitempty"`
	FsType               string                   `protobuf:"bytes,3,opt,name=fs_type,json=fsType,proto3" json:"fs_type,omitempty"`
	Readonly             bool                     `protobuf:"varint,4,opt,name=readonly,proto3" json:"readonly,omitempty"`
	CachingMode          AzureDataDiskCachingMode `protobuf:"varint,5,opt,name=caching_mode,json=cachingMode,proto3,enum=proto.AzureDataDiskCachingMode" json:"caching_mode,omitempty"`
	Kind                 AzureDataDiskKind        `protobuf:"varint,6,opt,name=kind,proto3,enum=proto.AzureDataDiskKind" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *AzureDiskVolumeSource) Reset()         { *m = AzureDiskVolumeSource{} }
func (m *AzureDiskVolumeSource) String() string { return proto.CompactTextString(m) }
func (*AzureDiskVolumeSource) ProtoMessage()    {}
func (*AzureDiskVolumeSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{10}
}

func (m *AzureDiskVolumeSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AzureDiskVolumeSource.Unmarshal(m, b)
}
func (m *AzureDiskVolumeSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AzureDiskVolumeSource.Marshal(b, m, deterministic)
}
func (m *AzureDiskVolumeSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AzureDiskVolumeSource.Merge(m, src)
}
func (m *AzureDiskVolumeSource) XXX_Size() int {
	return xxx_messageInfo_AzureDiskVolumeSource.Size(m)
}
func (m *AzureDiskVolumeSource) XXX_DiscardUnknown() {
	xxx_messageInfo_AzureDiskVolumeSource.DiscardUnknown(m)
}

var xxx_messageInfo_AzureDiskVolumeSource proto.InternalMessageInfo

func (m *AzureDiskVolumeSource) GetDiskName() string {
	if m != nil {
		return m.DiskName
	}
	return ""
}

func (m *AzureDiskVolumeSource) GetDiskUri() string {
	if m != nil {
		return m.DiskUri
	}
	return ""
}

func (m *AzureDiskVolumeSource) GetFsType() string {
	if m != nil {
		return m.FsType
	}
	return ""
}

func (m *AzureDiskVolumeSource) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

func (m *AzureDiskVolumeSource) GetCachingMode() AzureDataDiskCachingMode {
	if m != nil {
		return m.CachingMode
	}
	return AzureDataDiskCachingMode_ModeNone
}

func (m *AzureDiskVolumeSource) GetKind() AzureDataDiskKind {
	if m != nil {
		return m.Kind
	}
	return AzureDataDiskKind_Shared
}

type AWSElasticBlockStoreVolumeSource struct {
	VolumeId             string   `protobuf:"bytes,1,opt,name=volume_id,json=volumeId,proto3" json:"volume_id,omitempty"`
	Fs_Type              string   `protobuf:"bytes,2,opt,name=fs_Type,json=fsType,proto3" json:"fs_Type,omitempty"`
	Partition            int32    `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	Readonly             bool     `protobuf:"varint,4,opt,name=readonly,proto3" json:"readonly,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AWSElasticBlockStoreVolumeSource) Reset()         { *m = AWSElasticBlockStoreVolumeSource{} }
func (m *AWSElasticBlockStoreVolumeSource) String() string { return proto.CompactTextString(m) }
func (*AWSElasticBlockStoreVolumeSource) ProtoMessage()    {}
func (*AWSElasticBlockStoreVolumeSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{11}
}

func (m *AWSElasticBlockStoreVolumeSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AWSElasticBlockStoreVolumeSource.Unmarshal(m, b)
}
func (m *AWSElasticBlockStoreVolumeSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AWSElasticBlockStoreVolumeSource.Marshal(b, m, deterministic)
}
func (m *AWSElasticBlockStoreVolumeSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AWSElasticBlockStoreVolumeSource.Merge(m, src)
}
func (m *AWSElasticBlockStoreVolumeSource) XXX_Size() int {
	return xxx_messageInfo_AWSElasticBlockStoreVolumeSource.Size(m)
}
func (m *AWSElasticBlockStoreVolumeSource) XXX_DiscardUnknown() {
	xxx_messageInfo_AWSElasticBlockStoreVolumeSource.DiscardUnknown(m)
}

var xxx_messageInfo_AWSElasticBlockStoreVolumeSource proto.InternalMessageInfo

func (m *AWSElasticBlockStoreVolumeSource) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *AWSElasticBlockStoreVolumeSource) GetFs_Type() string {
	if m != nil {
		return m.Fs_Type
	}
	return ""
}

func (m *AWSElasticBlockStoreVolumeSource) GetPartition() int32 {
	if m != nil {
		return m.Partition
	}
	return 0
}

func (m *AWSElasticBlockStoreVolumeSource) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

type LocalObjectReference struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocalObjectReference) Reset()         { *m = LocalObjectReference{} }
func (m *LocalObjectReference) String() string { return proto.CompactTextString(m) }
func (*LocalObjectReference) ProtoMessage()    {}
func (*LocalObjectReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{12}
}

func (m *LocalObjectReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocalObjectReference.Unmarshal(m, b)
}
func (m *LocalObjectReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocalObjectReference.Marshal(b, m, deterministic)
}
func (m *LocalObjectReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalObjectReference.Merge(m, src)
}
func (m *LocalObjectReference) XXX_Size() int {
	return xxx_messageInfo_LocalObjectReference.Size(m)
}
func (m *LocalObjectReference) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalObjectReference.DiscardUnknown(m)
}

var xxx_messageInfo_LocalObjectReference proto.InternalMessageInfo

func (m *LocalObjectReference) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterEnum("proto.HostPathType", HostPathType_name, HostPathType_value)
	proto.RegisterEnum("proto.StorageMedium", StorageMedium_name, StorageMedium_value)
	proto.RegisterEnum("proto.AzureDataDiskCachingMode", AzureDataDiskCachingMode_name, AzureDataDiskCachingMode_value)
	proto.RegisterEnum("proto.AzureDataDiskKind", AzureDataDiskKind_name, AzureDataDiskKind_value)
	proto.RegisterType((*Volume)(nil), "proto.Volume")
	proto.RegisterType((*VolumeSource)(nil), "proto.VolumeSource")
	proto.RegisterType((*HostPathVolumeSource)(nil), "proto.HostPathVolumeSource")
	proto.RegisterType((*EmptyDirVolumeSource)(nil), "proto.EmptyDirVolumeSource")
	proto.RegisterType((*GCEPersistentDiskVolumeSource)(nil), "proto.GCEPersistentDiskVolumeSource")
	proto.RegisterType((*SecretVolumeSource)(nil), "proto.SecretVolumeSource")
	proto.RegisterType((*KeyToPath)(nil), "proto.KeyToPath")
	proto.RegisterType((*PersistentVolumeClaimVolumeSource)(nil), "proto.PersistentVolumeClaimVolumeSource")
	proto.RegisterType((*AzureFileVolumeSource)(nil), "proto.AzureFileVolumeSource")
	proto.RegisterType((*ConfigMapVolumeSource)(nil), "proto.ConfigMapVolumeSource")
	proto.RegisterType((*AzureDiskVolumeSource)(nil), "proto.AzureDiskVolumeSource")
	proto.RegisterType((*AWSElasticBlockStoreVolumeSource)(nil), "proto.AWSElasticBlockStoreVolumeSource")
	proto.RegisterType((*LocalObjectReference)(nil), "proto.LocalObjectReference")
}

func init() {
	proto.RegisterFile("volume.proto", fileDescriptor_498b213ad3bcd5ad)
}

var fileDescriptor_498b213ad3bcd5ad = []byte{
	// 999 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x55, 0x4d, 0x6f, 0xdb, 0x46,
	0x10, 0xad, 0x3e, 0x28, 0x8b, 0x23, 0xc5, 0xa5, 0x37, 0x32, 0xcc, 0x34, 0x09, 0x92, 0x08, 0x45,
	0x13, 0x18, 0x45, 0x80, 0xba, 0x87, 0x16, 0xc8, 0xa9, 0x91, 0xd4, 0xa6, 0x48, 0x14, 0x1b, 0x94,
	0x9d, 0xdc, 0xc2, 0xae, 0xc9, 0x95, 0xb4, 0x35, 0xbf, 0x40, 0xae, 0x52, 0x28, 0xe7, 0x1e, 0x0a,
	0xf4, 0xd6, 0x73, 0x7f, 0x67, 0xcf, 0x9d, 0x5d, 0x2e, 0x29, 0xd2, 0x52, 0xed, 0x4b, 0x4f, 0xe2,
	0xbe, 0x99, 0x79, 0x33, 0x3b, 0xf3, 0x66, 0x05, 0xfd, 0x8f, 0x71, 0xb0, 0x0a, 0xd9, 0xf3, 0x24,
	0x8d, 0x45, 0x4c, 0x0c, 0xf5, 0x33, 0xbc, 0x80, 0xce, 0x3b, 0x05, 0x13, 0x02, 0xed, 0x88, 0x86,
	0xcc, 0x6e, 0x3c, 0x6e, 0x3c, 0x33, 0x1d, 0xf5, 0x4d, 0xbe, 0x2b, 0x82, 0x66, 0xf1, 0x2a, 0xf5,
	0x98, 0xdd, 0x44, 0x5b, 0xef, 0xe4, 0x6e, 0x4e, 0xf1, 0xfc, 0x5d, 0xc5, 0xe4, 0xd4, 0x1c, 0x87,
	0xbf, 0x1b, 0xd0, 0xaf, 0x9a, 0xc9, 0xf7, 0x60, 0x2e, 0xe3, 0x4c, 0xb8, 0x09, 0x15, 0x4b, 0x95,
	0xa2, 0x77, 0x72, 0x5f, 0xd3, 0xbc, 0x42, 0xfc, 0x0c, 0xe1, 0x1a, 0x5d, 0x77, 0xa9, 0x51, 0x19,
	0xc9, 0xc2, 0x44, 0xac, 0x5d, 0x9f, 0xa7, 0xba, 0x80, 0x22, 0x72, 0x22, 0xf1, 0x31, 0x4f, 0xeb,
	0x91, 0x4c, 0xa3, 0xe4, 0x1c, 0xee, 0x2e, 0x3c, 0xe6, 0x26, 0x2c, 0xcd, 0x78, 0x26, 0x58, 0x24,
	0x90, 0x22, 0xbb, 0xb2, 0x5b, 0x8a, 0xe3, 0x4b, 0xcd, 0xf1, 0xd3, 0x68, 0x72, 0x56, 0x3a, 0x8c,
	0xd1, 0x5e, 0x23, 0x3b, 0x40, 0x82, 0xba, 0x99, 0x7c, 0x03, 0x9d, 0x8c, 0x79, 0x29, 0x13, 0x76,
	0x5b, 0x11, 0xdd, 0xd3, 0x44, 0x33, 0x05, 0xd6, 0xa2, 0xb5, 0x23, 0xf9, 0x05, 0x8e, 0x2a, 0x45,
	0xe4, 0x8d, 0x72, 0xbd, 0x80, 0xf2, 0xd0, 0x36, 0x14, 0xc7, 0x33, 0xcd, 0xb1, 0x49, 0x95, 0xf3,
	0x8c, 0xa4, 0x4f, 0x8d, 0xf2, 0x30, 0xd9, 0xe5, 0x42, 0x5e, 0x00, 0xd0, 0x4f, 0xab, 0x94, 0xb9,
	0x73, 0x1e, 0x30, 0xbb, 0xa3, 0x48, 0x1f, 0x68, 0xd2, 0x1f, 0xa4, 0xe1, 0x47, 0xc4, 0x6b, 0x44,
	0x26, 0x2d, 0x60, 0x19, 0xec, 0xc5, 0xd1, 0x9c, 0x2f, 0xdc, 0x90, 0x26, 0xf6, 0x5e, 0x2d, 0x78,
	0xa4, 0x0c, 0x53, 0x9a, 0xd4, 0x83, 0xbd, 0x02, 0xde, 0x64, 0x56, 0xbd, 0xed, 0x6e, 0x67, 0xde,
	0xea, 0x69, 0x9e, 0x59, 0xf5, 0xf2, 0x03, 0x1c, 0xd1, 0xdf, 0x32, 0x97, 0x05, 0x34, 0x13, 0xdc,
	0x73, 0x2f, 0x83, 0xd8, 0xbb, 0x72, 0x33, 0x11, 0xa7, 0xcc, 0x36, 0x15, 0xd3, 0xd3, 0x82, 0xe9,
	0xfd, 0x6c, 0x92, 0x3b, 0xbd, 0x94, 0x3e, 0x33, 0xe9, 0x52, 0x23, 0x1d, 0x20, 0xcf, 0x96, 0xc7,
	0x70, 0x06, 0x83, 0x5d, 0xea, 0x92, 0x5a, 0x2f, 0x85, 0x88, 0x5a, 0x97, 0xdf, 0xe4, 0x29, 0xb4,
	0xc5, 0x3a, 0xc9, 0x35, 0xbe, 0x5f, 0x6a, 0xbc, 0x08, 0x3f, 0x47, 0x93, 0xa3, 0x1c, 0x86, 0x97,
	0x30, 0xd8, 0x25, 0x3c, 0xf2, 0x35, 0x74, 0x42, 0xe6, 0xf3, 0x55, 0xa8, 0x68, 0xf7, 0x4f, 0x06,
	0x85, 0x30, 0xb0, 0x14, 0xba, 0x60, 0x53, 0x65, 0x73, 0xb4, 0x0f, 0x79, 0x00, 0x66, 0xc6, 0x3f,
	0xb1, 0x37, 0x3c, 0xe4, 0x42, 0xe5, 0x34, 0x9d, 0x0d, 0x30, 0xfc, 0xb3, 0x01, 0x0f, 0x6f, 0x54,
	0x26, 0x39, 0x82, 0xbd, 0xc4, 0x77, 0x2b, 0x1b, 0xdb, 0x49, 0xfc, 0xb7, 0x72, 0x67, 0xd1, 0x30,
	0xcf, 0xdc, 0xf2, 0x2a, 0x68, 0x98, 0x67, 0xb2, 0x7a, 0x99, 0x31, 0xa1, 0xa9, 0xe0, 0x82, 0xc7,
	0x91, 0x5a, 0x02, 0xc3, 0xd9, 0x00, 0xe4, 0x0b, 0xe8, 0xa6, 0x8c, 0xfa, 0x71, 0x14, 0xac, 0x95,
	0xb0, 0xbb, 0x4e, 0x79, 0x1e, 0xfe, 0xdd, 0x00, 0xb2, 0x2d, 0x6f, 0xf2, 0x08, 0x7a, 0xb9, 0xc0,
	0xab, 0x65, 0x40, 0x0e, 0xa9, 0x52, 0x9e, 0x40, 0xdf, 0x67, 0x73, 0xba, 0x0a, 0x84, 0x1b, 0xc6,
	0x7e, 0x5e, 0x8f, 0xe1, 0xf4, 0x34, 0x36, 0x45, 0x88, 0x7c, 0x05, 0x06, 0x17, 0x2c, 0xcc, 0xb0,
	0xa0, 0x16, 0xce, 0xdb, 0xd2, 0x3d, 0x7b, 0xcd, 0xd6, 0xe7, 0xb1, 0xec, 0xbb, 0x93, 0x9b, 0x65,
	0x79, 0x71, 0x22, 0x0b, 0xa5, 0x41, 0x51, 0x5e, 0x71, 0x1e, 0x4e, 0xc0, 0x2c, 0xfd, 0x89, 0x05,
	0xad, 0x2b, 0xb6, 0xd6, 0xc5, 0xc8, 0xcf, 0x72, 0xd8, 0xcd, 0xca, 0xb0, 0x11, 0x53, 0x15, 0xe5,
	0x6d, 0x50, 0xdf, 0xc3, 0x0f, 0xf0, 0xe4, 0xd6, 0xfd, 0x23, 0x0f, 0x71, 0x57, 0x24, 0x58, 0xbd,
	0xb2, 0xa9, 0x10, 0x75, 0xe3, 0x6a, 0x17, 0x9b, 0xd7, 0xba, 0x98, 0xc1, 0xe1, 0xce, 0x55, 0xbc,
	0xbd, 0x8f, 0x98, 0x34, 0x5b, 0x52, 0xdc, 0x31, 0x65, 0x2f, 0xc4, 0x22, 0x91, 0xad, 0xa4, 0xad,
	0x6b, 0x49, 0xff, 0x6a, 0xc0, 0xe1, 0xce, 0x1d, 0xde, 0xf9, 0xde, 0x97, 0xd3, 0x68, 0xde, 0x3c,
	0x8d, 0xeb, 0x83, 0x6d, 0x6d, 0x0f, 0xf6, 0xa6, 0x81, 0xfd, 0xd3, 0xd0, 0xad, 0xd8, 0x52, 0xf5,
	0x7d, 0x30, 0xe5, 0x3b, 0x52, 0x6d, 0x44, 0x57, 0x02, 0xea, 0x9e, 0xf7, 0x40, 0x7d, 0xbb, 0xab,
	0x94, 0xeb, 0x26, 0xec, 0xc9, 0xf3, 0x45, 0xca, 0xab, 0xa2, 0x6f, 0xd5, 0x44, 0x7f, 0x83, 0xac,
	0xc9, 0x4b, 0xe8, 0x7b, 0xd4, 0x5b, 0xf2, 0x68, 0x91, 0xdf, 0xc2, 0x50, 0x6b, 0xfb, 0xa8, 0xf6,
	0x78, 0x51, 0x41, 0x65, 0x91, 0xa3, 0xdc, 0x4f, 0xde, 0xcc, 0xe9, 0x79, 0x9b, 0x03, 0x2e, 0x7d,
	0xfb, 0x8a, 0x47, 0xbe, 0x7a, 0x72, 0xf7, 0x4f, 0xec, 0x5d, 0xb1, 0xaf, 0xd1, 0xee, 0x28, 0x2f,
	0x39, 0x8d, 0xc7, 0xb7, 0x3d, 0x65, 0xb2, 0x07, 0xfa, 0x2f, 0x82, 0xfb, 0x45, 0x0f, 0x72, 0xe0,
	0x67, 0x5f, 0x5f, 0xf4, 0xfc, 0xff, 0xdc, 0xee, 0x63, 0x18, 0xbc, 0x89, 0x3d, 0x1a, 0x9c, 0x5e,
	0xfe, 0xca, 0x3c, 0xe1, 0xb0, 0x39, 0x4b, 0x59, 0xb4, 0x5b, 0x20, 0xc7, 0x7f, 0x34, 0xa0, 0x5f,
	0x7d, 0x12, 0x89, 0x09, 0xc6, 0x45, 0x94, 0x31, 0x61, 0x7d, 0x46, 0x0e, 0xe1, 0x00, 0x9f, 0x44,
	0xa4, 0x88, 0xd3, 0xf5, 0x69, 0x3a, 0x42, 0x7e, 0xc1, 0xac, 0x06, 0xb9, 0x03, 0x66, 0x09, 0x5b,
	0x4d, 0xdc, 0xcf, 0xbe, 0x5c, 0x80, 0xd2, 0xa1, 0x45, 0xba, 0xd0, 0x96, 0x88, 0xd5, 0x26, 0x00,
	0x9d, 0x19, 0xb6, 0x04, 0xd9, 0x0c, 0xb2, 0x0f, 0x30, 0x42, 0x85, 0x8f, 0xd9, 0x47, 0xee, 0x31,
	0xab, 0x43, 0x3e, 0x87, 0x9e, 0xea, 0x97, 0x06, 0xf6, 0x8e, 0xc7, 0x70, 0xa7, 0xf6, 0xb2, 0x12,
	0x1b, 0x06, 0x35, 0x60, 0x9c, 0xab, 0x11, 0x2b, 0x43, 0xde, 0x29, 0x0b, 0x65, 0x7e, 0x55, 0xce,
	0xab, 0xd5, 0x82, 0x9d, 0xa1, 0x5b, 0x66, 0x35, 0x8f, 0x27, 0x60, 0xff, 0xd7, 0xa0, 0x49, 0x1f,
	0xba, 0xf2, 0xf7, 0x6d, 0x1c, 0x31, 0x24, 0xc1, 0x93, 0x83, 0x2d, 0x3b, 0xc5, 0x96, 0xe5, 0x34,
	0xf2, 0xf4, 0x3e, 0xc5, 0x85, 0x40, 0x9a, 0x17, 0x70, 0xb0, 0x35, 0x73, 0x75, 0x1d, 0xb9, 0xa4,
	0x3e, 0x46, 0xcb, 0x2e, 0x60, 0x55, 0x1e, 0x5e, 0xd9, 0xc7, 0xf0, 0x1e, 0xec, 0x4d, 0x69, 0x84,
	0x35, 0xf8, 0x56, 0xf3, 0xb2, 0xa3, 0x44, 0xf3, 0xed, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc0,
	0x60, 0xcb, 0xa8, 0xa1, 0x09, 0x00, 0x00,
}
