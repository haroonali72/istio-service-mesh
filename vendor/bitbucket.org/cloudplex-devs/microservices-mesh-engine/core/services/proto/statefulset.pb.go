// Code generated by protoc-gen-go. DO NOT EDIT.
// source: statefulset.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PodManagementPolicyType int32

const (
	PodManagementPolicyType_OrderedReady PodManagementPolicyType = 0
	PodManagementPolicyType_Parallel     PodManagementPolicyType = 1
)

var PodManagementPolicyType_name = map[int32]string{
	0: "OrderedReady",
	1: "Parallel",
}

var PodManagementPolicyType_value = map[string]int32{
	"OrderedReady": 0,
	"Parallel":     1,
}

func (x PodManagementPolicyType) String() string {
	return proto.EnumName(PodManagementPolicyType_name, int32(x))
}

func (PodManagementPolicyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4f0a4b9f0c7482c8, []int{0}
}

type StatefulSetService struct {
	ProjectId            string                        `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ServiceId            string                        `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Name                 string                        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Version              string                        `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	ServiceType          string                        `protobuf:"bytes,5,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	ServiceSubType       string                        `protobuf:"bytes,6,opt,name=service_sub_type,json=serviceSubType,proto3" json:"service_sub_type,omitempty"`
	Namespace            string                        `protobuf:"bytes,7,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Token                string                        `protobuf:"bytes,8,opt,name=token,proto3" json:"token,omitempty"`
	CompanyId            string                        `protobuf:"bytes,9,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	IsDiscovered         bool                          `protobuf:"varint,10,opt,name=is_discovered,json=isDiscovered,proto3" json:"is_discovered,omitempty"`
	ServiceAttributes    *StatefulSetServiceAttributes `protobuf:"bytes,11,opt,name=service_attributes,json=serviceAttributes,proto3" json:"service_attributes,omitempty"`
	HookConfiguration    *HookConfiguration            `protobuf:"bytes,12,opt,name=hook_configuration,json=hookConfiguration,proto3" json:"hook_configuration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *StatefulSetService) Reset()         { *m = StatefulSetService{} }
func (m *StatefulSetService) String() string { return proto.CompactTextString(m) }
func (*StatefulSetService) ProtoMessage()    {}
func (*StatefulSetService) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f0a4b9f0c7482c8, []int{0}
}

func (m *StatefulSetService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatefulSetService.Unmarshal(m, b)
}
func (m *StatefulSetService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatefulSetService.Marshal(b, m, deterministic)
}
func (m *StatefulSetService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatefulSetService.Merge(m, src)
}
func (m *StatefulSetService) XXX_Size() int {
	return xxx_messageInfo_StatefulSetService.Size(m)
}
func (m *StatefulSetService) XXX_DiscardUnknown() {
	xxx_messageInfo_StatefulSetService.DiscardUnknown(m)
}

var xxx_messageInfo_StatefulSetService proto.InternalMessageInfo

func (m *StatefulSetService) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *StatefulSetService) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *StatefulSetService) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StatefulSetService) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *StatefulSetService) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *StatefulSetService) GetServiceSubType() string {
	if m != nil {
		return m.ServiceSubType
	}
	return ""
}

func (m *StatefulSetService) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *StatefulSetService) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *StatefulSetService) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *StatefulSetService) GetIsDiscovered() bool {
	if m != nil {
		return m.IsDiscovered
	}
	return false
}

func (m *StatefulSetService) GetServiceAttributes() *StatefulSetServiceAttributes {
	if m != nil {
		return m.ServiceAttributes
	}
	return nil
}

func (m *StatefulSetService) GetHookConfiguration() *HookConfiguration {
	if m != nil {
		return m.HookConfiguration
	}
	return nil
}

type StatefulSetServiceAttributes struct {
	Labels                        map[string]string               `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations                   map[string]string               `protobuf:"bytes,2,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LabelSelector                 *LabelSelectorObj               `protobuf:"bytes,3,opt,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty"`
	Replicas                      int32                           `protobuf:"varint,4,opt,name=replicas,proto3" json:"replicas,omitempty"`
	RevisionHistoryLimit          *RevisionHistoryLimit           `protobuf:"bytes,5,opt,name=revision_history_limit,json=revisionHistoryLimit,proto3" json:"revision_history_limit,omitempty"`
	UpdateStrategy                *StateFulSetUpdateStrategy      `protobuf:"bytes,6,opt,name=update_strategy,json=updateStrategy,proto3" json:"update_strategy,omitempty"`
	Containers                    []*ContainerAttributes          `protobuf:"bytes,7,rep,name=containers,proto3" json:"containers,omitempty"`
	InitContainers                []*ContainerAttributes          `protobuf:"bytes,8,rep,name=init_containers,json=initContainers,proto3" json:"init_containers,omitempty"`
	NodeSelector                  map[string]string               `protobuf:"bytes,9,rep,name=node_selector,json=nodeSelector,proto3" json:"node_selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IstioConfig                   *IstioConfig                    `protobuf:"bytes,10,opt,name=istio_config,json=istioConfig,proto3" json:"istio_config,omitempty"`
	IsRbacEnabled                 bool                            `protobuf:"varint,11,opt,name=is_rbac_enabled,json=isRbacEnabled,proto3" json:"is_rbac_enabled,omitempty"`
	Roles                         []*K8SRbacAttribute             `protobuf:"bytes,12,rep,name=roles,proto3" json:"roles,omitempty"`
	IstioRoles                    []*IstioRbacAttribute           `protobuf:"bytes,13,rep,name=istio_roles,json=istioRoles,proto3" json:"istio_roles,omitempty"`
	Volumes                       []*Volume                       `protobuf:"bytes,14,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Affinity                      *Affinity                       `protobuf:"bytes,15,opt,name=affinity,proto3" json:"affinity,omitempty"`
	ServiceName                   string                          `protobuf:"bytes,16,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	TerminationGracePeriodSeconds *TerminationGracePeriodSeconds  `protobuf:"bytes,17,opt,name=termination_grace_period_seconds,json=terminationGracePeriodSeconds,proto3" json:"termination_grace_period_seconds,omitempty"`
	VolumeClaimTemplates          []*PersistentVolumeClaimService `protobuf:"bytes,18,rep,name=volume_claim_templates,json=volumeClaimTemplates,proto3" json:"volume_claim_templates,omitempty"`
	PodManagementPolicy           PodManagementPolicyType         `protobuf:"varint,19,opt,name=pod_management_policy,json=podManagementPolicy,proto3,enum=proto.PodManagementPolicyType" json:"pod_management_policy,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}                        `json:"-"`
	XXX_unrecognized              []byte                          `json:"-"`
	XXX_sizecache                 int32                           `json:"-"`
}

func (m *StatefulSetServiceAttributes) Reset()         { *m = StatefulSetServiceAttributes{} }
func (m *StatefulSetServiceAttributes) String() string { return proto.CompactTextString(m) }
func (*StatefulSetServiceAttributes) ProtoMessage()    {}
func (*StatefulSetServiceAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f0a4b9f0c7482c8, []int{1}
}

func (m *StatefulSetServiceAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatefulSetServiceAttributes.Unmarshal(m, b)
}
func (m *StatefulSetServiceAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatefulSetServiceAttributes.Marshal(b, m, deterministic)
}
func (m *StatefulSetServiceAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatefulSetServiceAttributes.Merge(m, src)
}
func (m *StatefulSetServiceAttributes) XXX_Size() int {
	return xxx_messageInfo_StatefulSetServiceAttributes.Size(m)
}
func (m *StatefulSetServiceAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_StatefulSetServiceAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_StatefulSetServiceAttributes proto.InternalMessageInfo

func (m *StatefulSetServiceAttributes) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetLabelSelector() *LabelSelectorObj {
	if m != nil {
		return m.LabelSelector
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetReplicas() int32 {
	if m != nil {
		return m.Replicas
	}
	return 0
}

func (m *StatefulSetServiceAttributes) GetRevisionHistoryLimit() *RevisionHistoryLimit {
	if m != nil {
		return m.RevisionHistoryLimit
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetUpdateStrategy() *StateFulSetUpdateStrategy {
	if m != nil {
		return m.UpdateStrategy
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetContainers() []*ContainerAttributes {
	if m != nil {
		return m.Containers
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetInitContainers() []*ContainerAttributes {
	if m != nil {
		return m.InitContainers
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetNodeSelector() map[string]string {
	if m != nil {
		return m.NodeSelector
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetIstioConfig() *IstioConfig {
	if m != nil {
		return m.IstioConfig
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetIsRbacEnabled() bool {
	if m != nil {
		return m.IsRbacEnabled
	}
	return false
}

func (m *StatefulSetServiceAttributes) GetRoles() []*K8SRbacAttribute {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetIstioRoles() []*IstioRbacAttribute {
	if m != nil {
		return m.IstioRoles
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetVolumes() []*Volume {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetAffinity() *Affinity {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *StatefulSetServiceAttributes) GetTerminationGracePeriodSeconds() *TerminationGracePeriodSeconds {
	if m != nil {
		return m.TerminationGracePeriodSeconds
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetVolumeClaimTemplates() []*PersistentVolumeClaimService {
	if m != nil {
		return m.VolumeClaimTemplates
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetPodManagementPolicy() PodManagementPolicyType {
	if m != nil {
		return m.PodManagementPolicy
	}
	return PodManagementPolicyType_OrderedReady
}

func init() {
	proto.RegisterEnum("proto.PodManagementPolicyType", PodManagementPolicyType_name, PodManagementPolicyType_value)
	proto.RegisterType((*StatefulSetService)(nil), "proto.StatefulSetService")
	proto.RegisterType((*StatefulSetServiceAttributes)(nil), "proto.StatefulSetServiceAttributes")
	proto.RegisterMapType((map[string]string)(nil), "proto.StatefulSetServiceAttributes.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "proto.StatefulSetServiceAttributes.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "proto.StatefulSetServiceAttributes.NodeSelectorEntry")
}

func init() {
	proto.RegisterFile("statefulset.proto", fileDescriptor_4f0a4b9f0c7482c8)
}

var fileDescriptor_4f0a4b9f0c7482c8 = []byte{
	// 999 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x56, 0x5f, 0x6f, 0x13, 0x47,
	0x10, 0x27, 0x09, 0x09, 0xf6, 0x9e, 0xed, 0xd8, 0x4b, 0x1a, 0x0e, 0x03, 0x55, 0x1a, 0xaa, 0x16,
	0xb5, 0x6a, 0x2a, 0xb9, 0x45, 0x02, 0x1e, 0xa8, 0x22, 0x93, 0x26, 0x51, 0x29, 0xb8, 0xeb, 0x14,
	0xa9, 0x7d, 0x39, 0xad, 0xef, 0x36, 0xce, 0x92, 0xfb, 0xa7, 0xdb, 0x3d, 0x4b, 0xfe, 0x5c, 0xfd,
	0x46, 0xfd, 0x14, 0x7d, 0xec, 0xec, 0xec, 0x9e, 0x7d, 0x49, 0x0a, 0x0d, 0x82, 0xa7, 0x78, 0x7f,
	0xf3, 0x9b, 0xdf, 0xcc, 0xce, 0xce, 0xcc, 0x85, 0xf4, 0x94, 0xe6, 0x5a, 0x9c, 0x96, 0xb1, 0x12,
	0x7a, 0x2f, 0x2f, 0x32, 0x9d, 0xd1, 0x75, 0xfc, 0xd3, 0x6f, 0x4f, 0x45, 0x2a, 0x0a, 0x1e, 0xef,
	0xb9, 0xa3, 0x12, 0xc5, 0x4c, 0x86, 0xc2, 0x1d, 0x5b, 0xb3, 0x2c, 0x2e, 0x93, 0xea, 0x74, 0x2f,
	0x17, 0x85, 0x92, 0x4a, 0x8b, 0x54, 0x5b, 0x3c, 0x8c, 0xb9, 0x4c, 0xac, 0x71, 0xf7, 0xef, 0x35,
	0x42, 0xc7, 0x2e, 0xca, 0x58, 0xe8, 0xb1, 0xd5, 0xa1, 0x0f, 0x08, 0x01, 0xfb, 0x5b, 0x11, 0xea,
	0x40, 0x46, 0xfe, 0xca, 0xce, 0xca, 0xa3, 0x26, 0x6b, 0x3a, 0xe4, 0x38, 0x32, 0x66, 0x17, 0xd1,
	0x98, 0x57, 0xad, 0xd9, 0x21, 0x60, 0xa6, 0xe4, 0x66, 0xca, 0x13, 0xe1, 0xaf, 0xa1, 0x01, 0x7f,
	0x53, 0x9f, 0xdc, 0x9a, 0x99, 0x3c, 0xb2, 0xd4, 0xbf, 0x89, 0x70, 0x75, 0xa4, 0x5f, 0x90, 0x56,
	0x25, 0xa6, 0xe7, 0xb9, 0xf0, 0xd7, 0xd1, 0xec, 0x39, 0xec, 0x04, 0x20, 0xfa, 0x88, 0x74, 0x2b,
	0x8a, 0x2a, 0x27, 0x96, 0xb6, 0x81, 0xb4, 0x8e, 0xc3, 0xc7, 0xe5, 0x04, 0x99, 0xf7, 0x49, 0xd3,
	0x84, 0x53, 0x39, 0x0f, 0x85, 0x7f, 0xcb, 0x26, 0xb6, 0x00, 0xe8, 0x16, 0x59, 0xd7, 0xd9, 0xb9,
	0x48, 0xfd, 0x06, 0x5a, 0xec, 0xc1, 0xdc, 0x26, 0xcc, 0x92, 0x9c, 0xa7, 0x73, 0x73, 0x9b, 0xa6,
	0x75, 0x72, 0x08, 0xdc, 0xe6, 0x21, 0x69, 0x4b, 0x15, 0x44, 0x52, 0x85, 0x19, 0xa4, 0x2c, 0x22,
	0x9f, 0x00, 0xa3, 0xc1, 0x5a, 0x52, 0xbd, 0x58, 0x60, 0x94, 0x11, 0x5a, 0x65, 0xc8, 0xb5, 0x2e,
	0xe4, 0xa4, 0xd4, 0x42, 0xf9, 0x1e, 0x30, 0xbd, 0xc1, 0x43, 0x5b, 0xeb, 0xbd, 0xab, 0x75, 0xde,
	0x5f, 0x50, 0x59, 0x4f, 0x5d, 0x86, 0xe8, 0x21, 0xa1, 0x67, 0x59, 0x76, 0x1e, 0x84, 0x59, 0x7a,
	0x2a, 0xa7, 0x65, 0xc1, 0xb5, 0xa9, 0x5e, 0x0b, 0x35, 0x7d, 0xa7, 0x79, 0x04, 0x84, 0x61, 0xdd,
	0xce, 0x7a, 0x67, 0x97, 0xa1, 0xdd, 0xbf, 0x3c, 0x72, 0xff, 0x7d, 0xc1, 0x21, 0xd2, 0x46, 0xcc,
	0x27, 0x22, 0x56, 0xf0, 0xd4, 0x6b, 0xa0, 0xfe, 0xfd, 0x35, 0x32, 0xde, 0x7b, 0x89, 0x1e, 0x07,
	0xa9, 0x2e, 0xe6, 0xcc, 0xb9, 0xd3, 0x37, 0xc4, 0xe3, 0x69, 0x9a, 0x69, 0x8c, 0xab, 0xa0, 0x33,
	0x8c, 0xda, 0x8f, 0xd7, 0x51, 0xdb, 0x5f, 0xba, 0x59, 0xc9, 0xba, 0x10, 0x7d, 0x4e, 0x3a, 0x18,
	0x21, 0x50, 0x22, 0x86, 0x16, 0xcc, 0x0a, 0xec, 0x2d, 0x6f, 0x70, 0xc7, 0x49, 0x63, 0x2e, 0x63,
	0x67, 0x7b, 0x3d, 0x79, 0xcb, 0xda, 0x71, 0x1d, 0xa1, 0x7d, 0xd2, 0x28, 0x44, 0x1e, 0xcb, 0x90,
	0x2b, 0x6c, 0xbf, 0x75, 0xb6, 0x38, 0xd3, 0xdf, 0xc8, 0x76, 0x21, 0x66, 0xd2, 0xf4, 0x62, 0x70,
	0x06, 0x73, 0x92, 0x15, 0xf3, 0x20, 0x96, 0x89, 0xd4, 0xd8, 0x89, 0xde, 0xe0, 0x9e, 0x8b, 0xc1,
	0x1c, 0xe9, 0xc8, 0x72, 0x5e, 0x1a, 0x0a, 0xdb, 0x2a, 0xfe, 0x03, 0xa5, 0xc7, 0x64, 0xb3, 0xcc,
	0x23, 0xb8, 0x6d, 0xa0, 0x34, 0xbc, 0x81, 0x98, 0xce, 0xb1, 0x5d, 0xbd, 0xc1, 0x4e, 0xbd, 0x14,
	0x3f, 0x63, 0x29, 0x7e, 0x47, 0xe2, 0xd8, 0xf1, 0x58, 0xa7, 0xbc, 0x70, 0xa6, 0xcf, 0x4c, 0x73,
	0xa6, 0x9a, 0x4b, 0x98, 0x77, 0x05, 0x1d, 0x6d, 0x0a, 0xda, 0x77, 0x2a, 0xc3, 0xca, 0x50, 0xeb,
	0xa3, 0x1a, 0x9b, 0x0e, 0xc9, 0xa6, 0x4c, 0xa5, 0x0e, 0x6a, 0x02, 0x8d, 0xff, 0x15, 0xe8, 0x18,
	0x97, 0xe1, 0x52, 0xe4, 0x4f, 0xd2, 0x4e, 0xb3, 0x48, 0x2c, 0x2b, 0xdf, 0x44, 0x89, 0xc7, 0xd7,
	0x79, 0xd4, 0x57, 0xe0, 0x58, 0xbd, 0x81, 0x7d, 0xd5, 0x56, 0x5a, 0x83, 0xe8, 0x63, 0x02, 0x53,
	0x04, 0x2f, 0xec, 0x5a, 0x1c, 0x27, 0xcb, 0x1b, 0x50, 0x27, 0x7d, 0x6c, 0x4c, 0xb6, 0x93, 0x99,
	0x27, 0x97, 0x07, 0xfa, 0x15, 0xdc, 0x4b, 0x05, 0xc5, 0x84, 0x87, 0x81, 0x48, 0xf9, 0x24, 0x86,
	0x99, 0xf4, 0x70, 0x26, 0x61, 0x50, 0x19, 0xa0, 0x07, 0x16, 0xa4, 0xdf, 0x91, 0xf5, 0x22, 0x8b,
	0x61, 0x0e, 0x5b, 0x98, 0x72, 0xd5, 0x2c, 0xbf, 0x3c, 0x41, 0xd6, 0x22, 0x4f, 0x66, 0x59, 0x50,
	0x6a, 0x1b, 0x25, 0xb0, 0x4e, 0x6d, 0x74, 0xba, 0x5b, 0x4f, 0xe6, 0xa2, 0x1b, 0x41, 0x36, 0x43,
	0xdf, 0xaf, 0x61, 0xbd, 0xe1, 0x72, 0x55, 0x7e, 0x07, 0xfd, 0xda, 0xce, 0xef, 0x0d, 0xa2, 0xac,
	0xb2, 0xd2, 0x6f, 0x49, 0x83, 0x9f, 0x9e, 0x9a, 0x1a, 0xcf, 0xfd, 0x4d, 0xbc, 0xee, 0xa6, 0x63,
	0xee, 0x3b, 0x98, 0x2d, 0x08, 0xf5, 0xd5, 0x88, 0x0b, 0xb5, 0x7b, 0x61, 0x35, 0xbe, 0x32, 0x7b,
	0x35, 0x21, 0x3b, 0x5a, 0x14, 0x89, 0x4c, 0x71, 0x52, 0x82, 0x69, 0x01, 0x7b, 0x2e, 0x80, 0x8d,
	0x2f, 0xb3, 0x08, 0x9e, 0x0c, 0xea, 0x1a, 0x29, 0xbf, 0x87, 0x71, 0xbe, 0x74, 0x71, 0x4e, 0x96,
	0xf4, 0x43, 0xc3, 0x1e, 0x21, 0x79, 0x6c, 0xb9, 0xec, 0x81, 0x7e, 0x9f, 0x99, 0xfe, 0x41, 0xb6,
	0xed, 0x4d, 0x02, 0xfc, 0x8a, 0x04, 0x5a, 0x24, 0x79, 0xcc, 0xcd, 0xae, 0xa3, 0x78, 0xed, 0x6a,
	0xd7, 0x8d, 0x16, 0xdf, 0x1c, 0x5b, 0x80, 0xa1, 0x61, 0xbb, 0x06, 0x61, 0x5b, 0xb3, 0x25, 0x76,
	0x52, 0x09, 0xc0, 0x0a, 0xfd, 0x2c, 0x87, 0xa4, 0x13, 0x9e, 0xf2, 0xa9, 0x48, 0xc0, 0x33, 0xc8,
	0x33, 0x98, 0xd0, 0xb9, 0x7f, 0x1b, 0xd2, 0xef, 0x0c, 0x3e, 0xaf, 0x94, 0xb3, 0xe8, 0xd7, 0x05,
	0x65, 0x84, 0x0c, 0xb3, 0xf9, 0xd9, 0xed, 0xfc, 0xaa, 0xa1, 0xff, 0x94, 0x78, 0xb5, 0x35, 0x45,
	0xbb, 0x64, 0xed, 0x5c, 0xcc, 0xdd, 0xf7, 0xcc, 0xfc, 0x34, 0x5f, 0x84, 0x19, 0x8f, 0x4b, 0xe1,
	0x3e, 0x62, 0xf6, 0xf0, 0x6c, 0xf5, 0xc9, 0x4a, 0xff, 0x39, 0xe9, 0x5e, 0xde, 0x49, 0x1f, 0xe4,
	0xff, 0x13, 0xe9, 0x5d, 0x69, 0xff, 0x0f, 0x11, 0xf8, 0xe6, 0x29, 0xb9, 0xf3, 0x8e, 0xbb, 0x82,
	0x4c, 0xeb, 0x75, 0x11, 0x99, 0x0f, 0x0f, 0x13, 0x3c, 0x9a, 0x77, 0x6f, 0xd0, 0x16, 0x69, 0x8c,
	0x38, 0xfc, 0x43, 0x10, 0x8b, 0xb8, 0xbb, 0x32, 0xf8, 0x67, 0x95, 0x78, 0xb5, 0xc1, 0xa4, 0x47,
	0xa4, 0x37, 0x2c, 0x04, 0xae, 0x95, 0x25, 0x78, 0xf7, 0x9d, 0x13, 0xdc, 0xdf, 0xae, 0x4c, 0xee,
	0xc1, 0xe0, 0xf3, 0x09, 0x35, 0x10, 0xbb, 0x37, 0x8c, 0xd2, 0x0b, 0xb8, 0xd1, 0x27, 0x50, 0x3a,
	0x20, 0x9d, 0x43, 0xe0, 0x7d, 0xac, 0xcc, 0x21, 0xe9, 0x8e, 0xb8, 0x0e, 0xcf, 0x3e, 0x45, 0x3e,
	0xa3, 0xf2, 0xa3, 0xf3, 0x99, 0x6c, 0xa0, 0xe1, 0x87, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xae,
	0xf3, 0xa3, 0x9e, 0xbc, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StatefulSetClient is the client API for StatefulSet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StatefulSetClient interface {
	CreateStatefulSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error)
	DeleteStatefulSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error)
	GetStatefulSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error)
	PatchStatefulSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error)
	PutStatefulSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error)
}

type statefulSetClient struct {
	cc grpc.ClientConnInterface
}

func NewStatefulSetClient(cc grpc.ClientConnInterface) StatefulSetClient {
	return &statefulSetClient{cc}
}

func (c *statefulSetClient) CreateStatefulSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.StatefulSet/CreateStatefulSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statefulSetClient) DeleteStatefulSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.StatefulSet/DeleteStatefulSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statefulSetClient) GetStatefulSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.StatefulSet/GetStatefulSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statefulSetClient) PatchStatefulSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.StatefulSet/PatchStatefulSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statefulSetClient) PutStatefulSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.StatefulSet/PutStatefulSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StatefulSetServer is the server API for StatefulSet service.
type StatefulSetServer interface {
	CreateStatefulSet(context.Context, *StatefulSetService) (*ServiceResponse, error)
	DeleteStatefulSet(context.Context, *StatefulSetService) (*ServiceResponse, error)
	GetStatefulSet(context.Context, *StatefulSetService) (*ServiceResponse, error)
	PatchStatefulSet(context.Context, *StatefulSetService) (*ServiceResponse, error)
	PutStatefulSet(context.Context, *StatefulSetService) (*ServiceResponse, error)
}

// UnimplementedStatefulSetServer can be embedded to have forward compatible implementations.
type UnimplementedStatefulSetServer struct {
}

func (*UnimplementedStatefulSetServer) CreateStatefulSet(ctx context.Context, req *StatefulSetService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStatefulSet not implemented")
}
func (*UnimplementedStatefulSetServer) DeleteStatefulSet(ctx context.Context, req *StatefulSetService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStatefulSet not implemented")
}
func (*UnimplementedStatefulSetServer) GetStatefulSet(ctx context.Context, req *StatefulSetService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatefulSet not implemented")
}
func (*UnimplementedStatefulSetServer) PatchStatefulSet(ctx context.Context, req *StatefulSetService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PatchStatefulSet not implemented")
}
func (*UnimplementedStatefulSetServer) PutStatefulSet(ctx context.Context, req *StatefulSetService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutStatefulSet not implemented")
}

func RegisterStatefulSetServer(s *grpc.Server, srv StatefulSetServer) {
	s.RegisterService(&_StatefulSet_serviceDesc, srv)
}

func _StatefulSet_CreateStatefulSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatefulSetService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatefulSetServer).CreateStatefulSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StatefulSet/CreateStatefulSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatefulSetServer).CreateStatefulSet(ctx, req.(*StatefulSetService))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatefulSet_DeleteStatefulSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatefulSetService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatefulSetServer).DeleteStatefulSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StatefulSet/DeleteStatefulSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatefulSetServer).DeleteStatefulSet(ctx, req.(*StatefulSetService))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatefulSet_GetStatefulSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatefulSetService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatefulSetServer).GetStatefulSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StatefulSet/GetStatefulSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatefulSetServer).GetStatefulSet(ctx, req.(*StatefulSetService))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatefulSet_PatchStatefulSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatefulSetService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatefulSetServer).PatchStatefulSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StatefulSet/PatchStatefulSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatefulSetServer).PatchStatefulSet(ctx, req.(*StatefulSetService))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatefulSet_PutStatefulSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatefulSetService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatefulSetServer).PutStatefulSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StatefulSet/PutStatefulSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatefulSetServer).PutStatefulSet(ctx, req.(*StatefulSetService))
	}
	return interceptor(ctx, in, info, handler)
}

var _StatefulSet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.StatefulSet",
	HandlerType: (*StatefulSetServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateStatefulSet",
			Handler:    _StatefulSet_CreateStatefulSet_Handler,
		},
		{
			MethodName: "DeleteStatefulSet",
			Handler:    _StatefulSet_DeleteStatefulSet_Handler,
		},
		{
			MethodName: "GetStatefulSet",
			Handler:    _StatefulSet_GetStatefulSet_Handler,
		},
		{
			MethodName: "PatchStatefulSet",
			Handler:    _StatefulSet_PatchStatefulSet_Handler,
		},
		{
			MethodName: "PutStatefulSet",
			Handler:    _StatefulSet_PutStatefulSet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "statefulset.proto",
}
