// Code generated by protoc-gen-go. DO NOT EDIT.
// source: volume.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Volume struct {
	ProjectId             string      `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ServiceId             string      `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Name                  string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ServiceType           string      `protobuf:"bytes,4,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	ServiceSubType        string      `protobuf:"bytes,5,opt,name=service_sub_type,json=serviceSubType,proto3" json:"service_sub_type,omitempty"`
	Status                string      `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Token                 string      `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	ServiceDependencyInfo []string    `protobuf:"bytes,8,rep,name=service_dependency_info,json=serviceDependencyInfo,proto3" json:"service_dependency_info,omitempty"`
	ServiceAttributes     *VolumeAttr `protobuf:"bytes,9,opt,name=service_attributes,json=serviceAttributes,proto3" json:"service_attributes,omitempty"`
	CompanyId             string      `protobuf:"bytes,10,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Version               string      `protobuf:"bytes,12,opt,name=version,proto3" json:"version,omitempty"`
	Namespace             string      `protobuf:"bytes,13,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}    `json:"-"`
	XXX_unrecognized      []byte      `json:"-"`
	XXX_sizecache         int32       `json:"-"`
}

func (m *Volume) Reset()         { *m = Volume{} }
func (m *Volume) String() string { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()    {}
func (*Volume) Descriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{0}
}

func (m *Volume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume.Unmarshal(m, b)
}
func (m *Volume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume.Marshal(b, m, deterministic)
}
func (m *Volume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume.Merge(m, src)
}
func (m *Volume) XXX_Size() int {
	return xxx_messageInfo_Volume.Size(m)
}
func (m *Volume) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume.DiscardUnknown(m)
}

var xxx_messageInfo_Volume proto.InternalMessageInfo

func (m *Volume) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *Volume) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *Volume) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Volume) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *Volume) GetServiceSubType() string {
	if m != nil {
		return m.ServiceSubType
	}
	return ""
}

func (m *Volume) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Volume) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Volume) GetServiceDependencyInfo() []string {
	if m != nil {
		return m.ServiceDependencyInfo
	}
	return nil
}

func (m *Volume) GetServiceAttributes() *VolumeAttr {
	if m != nil {
		return m.ServiceAttributes
	}
	return nil
}

func (m *Volume) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *Volume) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Volume) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type VolumeAttr struct {
	Size                 string     `protobuf:"bytes,1,opt,name=size,proto3" json:"size,omitempty"`
	Cloud                string     `protobuf:"bytes,2,opt,name=cloud,proto3" json:"cloud,omitempty"`
	MountPath            string     `protobuf:"bytes,3,opt,name=mount_path,json=mountPath,proto3" json:"mount_path,omitempty"`
	Params               *Parameter `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *VolumeAttr) Reset()         { *m = VolumeAttr{} }
func (m *VolumeAttr) String() string { return proto.CompactTextString(m) }
func (*VolumeAttr) ProtoMessage()    {}
func (*VolumeAttr) Descriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{1}
}

func (m *VolumeAttr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeAttr.Unmarshal(m, b)
}
func (m *VolumeAttr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeAttr.Marshal(b, m, deterministic)
}
func (m *VolumeAttr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeAttr.Merge(m, src)
}
func (m *VolumeAttr) XXX_Size() int {
	return xxx_messageInfo_VolumeAttr.Size(m)
}
func (m *VolumeAttr) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeAttr.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeAttr proto.InternalMessageInfo

func (m *VolumeAttr) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *VolumeAttr) GetCloud() string {
	if m != nil {
		return m.Cloud
	}
	return ""
}

func (m *VolumeAttr) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

func (m *VolumeAttr) GetParams() *Parameter {
	if m != nil {
		return m.Params
	}
	return nil
}

type Parameter struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ReplicationType      string   `protobuf:"bytes,2,opt,name=replication_type,json=replicationType,proto3" json:"replication_type,omitempty"`
	Iops                 string   `protobuf:"bytes,3,opt,name=iops,proto3" json:"iops,omitempty"`
	Plugin               string   `protobuf:"bytes,4,opt,name=plugin,proto3" json:"plugin,omitempty"`
	SkuName              string   `protobuf:"bytes,5,opt,name=sku_name,json=skuName,proto3" json:"sku_name,omitempty"`
	Location             string   `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	StorageAccount       string   `protobuf:"bytes,7,opt,name=storage_account,json=storageAccount,proto3" json:"storage_account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Parameter) Reset()         { *m = Parameter{} }
func (m *Parameter) String() string { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()    {}
func (*Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_498b213ad3bcd5ad, []int{2}
}

func (m *Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parameter.Unmarshal(m, b)
}
func (m *Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parameter.Marshal(b, m, deterministic)
}
func (m *Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parameter.Merge(m, src)
}
func (m *Parameter) XXX_Size() int {
	return xxx_messageInfo_Parameter.Size(m)
}
func (m *Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_Parameter proto.InternalMessageInfo

func (m *Parameter) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Parameter) GetReplicationType() string {
	if m != nil {
		return m.ReplicationType
	}
	return ""
}

func (m *Parameter) GetIops() string {
	if m != nil {
		return m.Iops
	}
	return ""
}

func (m *Parameter) GetPlugin() string {
	if m != nil {
		return m.Plugin
	}
	return ""
}

func (m *Parameter) GetSkuName() string {
	if m != nil {
		return m.SkuName
	}
	return ""
}

func (m *Parameter) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Parameter) GetStorageAccount() string {
	if m != nil {
		return m.StorageAccount
	}
	return ""
}

func init() {
	proto.RegisterType((*Volume)(nil), "proto.Volume")
	proto.RegisterType((*VolumeAttr)(nil), "proto.VolumeAttr")
	proto.RegisterType((*Parameter)(nil), "proto.Parameter")
}

func init() { proto.RegisterFile("volume.proto", fileDescriptor_498b213ad3bcd5ad) }

var fileDescriptor_498b213ad3bcd5ad = []byte{
	// 524 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x53, 0xcd, 0x6e, 0x13, 0x4d,
	0x10, 0xfc, 0x1c, 0xc7, 0x6b, 0x6f, 0xdb, 0x49, 0x9c, 0xd1, 0x47, 0x58, 0x2c, 0x90, 0x82, 0x2f,
	0x84, 0x4b, 0x0e, 0x06, 0x85, 0x2b, 0x16, 0x91, 0x50, 0x2e, 0xc8, 0x72, 0x10, 0x57, 0x6b, 0xbc,
	0x6e, 0x92, 0x25, 0xeb, 0x99, 0xd1, 0xfc, 0x58, 0x32, 0x17, 0xde, 0x84, 0x23, 0x8f, 0xc4, 0xf3,
	0x30, 0x3f, 0xbd, 0x06, 0x8e, 0xe6, 0xb4, 0xd3, 0x55, 0xdd, 0xbd, 0x3d, 0x55, 0x3d, 0x30, 0xd8,
	0xc8, 0xda, 0xad, 0xf1, 0x52, 0x69, 0x69, 0x25, 0xeb, 0xc4, 0xcf, 0xe8, 0x91, 0x41, 0xbd, 0xa9,
	0x4a, 0xd4, 0x68, 0x94, 0x14, 0x86, 0xd8, 0xf1, 0x8f, 0x36, 0x64, 0x9f, 0x62, 0x3a, 0x7b, 0x06,
	0xe0, 0xb1, 0x2f, 0x58, 0xda, 0x45, 0xb5, 0x2a, 0x5a, 0xe7, 0xad, 0x8b, 0x7c, 0x9e, 0x13, 0x72,
	0xb3, 0x0a, 0x34, 0xb5, 0x08, 0xf4, 0x41, 0xa2, 0x09, 0xf1, 0x34, 0x83, 0x43, 0xc1, 0xd7, 0x58,
	0xb4, 0x23, 0x11, 0xcf, 0xec, 0x39, 0x0c, 0x9a, 0x12, 0xbb, 0x55, 0x58, 0x1c, 0x46, 0xae, 0x4f,
	0xd8, 0x47, 0x0f, 0xb1, 0x0b, 0x18, 0x36, 0x29, 0xc6, 0x2d, 0x53, 0x5a, 0x27, 0xa6, 0x1d, 0x13,
	0x7e, 0xeb, 0x96, 0x31, 0xf3, 0x0c, 0x32, 0x63, 0xb9, 0x75, 0xa6, 0xc8, 0x22, 0x4f, 0x11, 0xfb,
	0x1f, 0x3a, 0x56, 0x3e, 0xa0, 0x28, 0xba, 0x11, 0x4e, 0x01, 0xbb, 0x82, 0xc7, 0x4d, 0xdf, 0x15,
	0x2a, 0x14, 0x2b, 0x14, 0xe5, 0x76, 0x51, 0x89, 0xcf, 0xb2, 0xe8, 0x9d, 0xb7, 0x7d, 0x5e, 0xa3,
	0xc7, 0xf5, 0x8e, 0xbd, 0xf1, 0x24, 0x7b, 0x0b, 0xac, 0xa9, 0xe3, 0xd6, 0xea, 0x6a, 0xe9, 0x2c,
	0x9a, 0x22, 0xf7, 0xad, 0xfb, 0x93, 0xd3, 0xa4, 0xd9, 0x65, 0xd2, 0x6b, 0xea, 0xe9, 0xf9, 0x29,
	0x25, 0x4f, 0x77, 0xb9, 0x41, 0xa7, 0x52, 0xae, 0x15, 0x17, 0xdb, 0xa0, 0x13, 0x24, 0x9d, 0x08,
	0xf1, 0x3a, 0x15, 0xd0, 0xdd, 0xa0, 0x36, 0x95, 0x14, 0xc5, 0x20, 0x72, 0x4d, 0xc8, 0x9e, 0x42,
	0x1e, 0x54, 0x33, 0x8a, 0x97, 0x58, 0x1c, 0xa5, 0xba, 0x1d, 0x30, 0xfe, 0x06, 0xf0, 0xfb, 0xbf,
	0x41, 0x6d, 0x53, 0x7d, 0x45, 0x72, 0x29, 0x9e, 0x83, 0x10, 0x65, 0x2d, 0x5d, 0xe3, 0x4d, 0x0a,
	0xc2, 0x38, 0x6b, 0xe9, 0x84, 0x5d, 0x28, 0x6e, 0xef, 0xc9, 0x9d, 0x3c, 0x22, 0x33, 0x0f, 0x78,
	0xfd, 0x33, 0xc5, 0x35, 0x5f, 0x9b, 0x68, 0x4e, 0x7f, 0x32, 0xa4, 0x3b, 0xce, 0x02, 0x88, 0x16,
	0xf5, 0x9c, 0xf8, 0xf1, 0xcf, 0x16, 0xe4, 0x3b, 0x34, 0x0c, 0x10, 0xbd, 0xa2, 0x01, 0xc2, 0x99,
	0xbd, 0x84, 0xa1, 0x46, 0x55, 0x57, 0x25, 0xb7, 0xfe, 0x3e, 0xc9, 0xcb, 0x34, 0xcb, 0xc9, 0x1f,
	0x78, 0x34, 0xd3, 0x97, 0x57, 0x52, 0x99, 0x66, 0x5b, 0xc2, 0x39, 0x18, 0xac, 0x6a, 0x77, 0x57,
	0x09, 0xda, 0x13, 0x8a, 0xd8, 0x13, 0xe8, 0x99, 0x07, 0xb7, 0x88, 0xdb, 0x95, 0x56, 0xa3, 0xeb,
	0xe3, 0x0f, 0x61, 0xc1, 0x46, 0xd0, 0xab, 0x65, 0x6a, 0x4b, 0x5b, 0xb1, 0x8b, 0xd9, 0x0b, 0x38,
	0x31, 0x56, 0x6a, 0x7e, 0xe7, 0x9d, 0x2c, 0xcb, 0x70, 0x61, 0xda, 0x90, 0x63, 0x82, 0xa7, 0x09,
	0x9d, 0x7c, 0x3f, 0x80, 0x2c, 0xbd, 0x18, 0xf6, 0x06, 0x06, 0xef, 0x34, 0x72, 0x8b, 0xf4, 0x24,
	0x8e, 0xfe, 0x72, 0x7c, 0x74, 0x46, 0xe1, 0x6d, 0x32, 0x7d, 0x4e, 0x4f, 0x69, 0xfc, 0x1f, 0x7b,
	0x0d, 0xf9, 0x7b, 0xb4, 0xfb, 0x56, 0xf9, 0xdf, 0x5d, 0x63, 0x8d, 0xfb, 0xff, 0xee, 0x0a, 0xfa,
	0xde, 0xbd, 0xf2, 0xfe, 0x1f, 0xc6, 0x9c, 0xb9, 0x7d, 0xc7, 0x5c, 0x66, 0x91, 0x78, 0xf5, 0x2b,
	0x00, 0x00, 0xff, 0xff, 0xcd, 0x2e, 0xf1, 0x2f, 0x58, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VolumeClient is the client API for Volume service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VolumeClient interface {
	CreateVolume(ctx context.Context, in *Volume, opts ...grpc.CallOption) (*ServiceResponse, error)
	GetVolume(ctx context.Context, in *Volume, opts ...grpc.CallOption) (*ServiceResponse, error)
	DeleteVolume(ctx context.Context, in *Volume, opts ...grpc.CallOption) (*ServiceResponse, error)
	PatchVolume(ctx context.Context, in *Volume, opts ...grpc.CallOption) (*ServiceResponse, error)
	PutVolume(ctx context.Context, in *Volume, opts ...grpc.CallOption) (*ServiceResponse, error)
}

type volumeClient struct {
	cc *grpc.ClientConn
}

func NewVolumeClient(cc *grpc.ClientConn) VolumeClient {
	return &volumeClient{cc}
}

func (c *volumeClient) CreateVolume(ctx context.Context, in *Volume, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.volume/CreateVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeClient) GetVolume(ctx context.Context, in *Volume, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.volume/GetVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeClient) DeleteVolume(ctx context.Context, in *Volume, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.volume/DeleteVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeClient) PatchVolume(ctx context.Context, in *Volume, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.volume/PatchVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeClient) PutVolume(ctx context.Context, in *Volume, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.volume/PutVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VolumeServer is the server API for Volume service.
type VolumeServer interface {
	CreateVolume(context.Context, *Volume) (*ServiceResponse, error)
	GetVolume(context.Context, *Volume) (*ServiceResponse, error)
	DeleteVolume(context.Context, *Volume) (*ServiceResponse, error)
	PatchVolume(context.Context, *Volume) (*ServiceResponse, error)
	PutVolume(context.Context, *Volume) (*ServiceResponse, error)
}

// UnimplementedVolumeServer can be embedded to have forward compatible implementations.
type UnimplementedVolumeServer struct {
}

func (*UnimplementedVolumeServer) CreateVolume(ctx context.Context, req *Volume) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVolume not implemented")
}
func (*UnimplementedVolumeServer) GetVolume(ctx context.Context, req *Volume) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVolume not implemented")
}
func (*UnimplementedVolumeServer) DeleteVolume(ctx context.Context, req *Volume) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVolume not implemented")
}
func (*UnimplementedVolumeServer) PatchVolume(ctx context.Context, req *Volume) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PatchVolume not implemented")
}
func (*UnimplementedVolumeServer) PutVolume(ctx context.Context, req *Volume) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutVolume not implemented")
}

func RegisterVolumeServer(s *grpc.Server, srv VolumeServer) {
	s.RegisterService(&_Volume_serviceDesc, srv)
}

func _Volume_CreateVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Volume)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServer).CreateVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.volume/CreateVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServer).CreateVolume(ctx, req.(*Volume))
	}
	return interceptor(ctx, in, info, handler)
}

func _Volume_GetVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Volume)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServer).GetVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.volume/GetVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServer).GetVolume(ctx, req.(*Volume))
	}
	return interceptor(ctx, in, info, handler)
}

func _Volume_DeleteVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Volume)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServer).DeleteVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.volume/DeleteVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServer).DeleteVolume(ctx, req.(*Volume))
	}
	return interceptor(ctx, in, info, handler)
}

func _Volume_PatchVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Volume)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServer).PatchVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.volume/PatchVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServer).PatchVolume(ctx, req.(*Volume))
	}
	return interceptor(ctx, in, info, handler)
}

func _Volume_PutVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Volume)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServer).PutVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.volume/PutVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServer).PutVolume(ctx, req.(*Volume))
	}
	return interceptor(ctx, in, info, handler)
}

var _Volume_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.volume",
	HandlerType: (*VolumeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVolume",
			Handler:    _Volume_CreateVolume_Handler,
		},
		{
			MethodName: "GetVolume",
			Handler:    _Volume_GetVolume_Handler,
		},
		{
			MethodName: "DeleteVolume",
			Handler:    _Volume_DeleteVolume_Handler,
		},
		{
			MethodName: "PatchVolume",
			Handler:    _Volume_PatchVolume_Handler,
		},
		{
			MethodName: "PutVolume",
			Handler:    _Volume_PutVolume_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "volume.proto",
}
