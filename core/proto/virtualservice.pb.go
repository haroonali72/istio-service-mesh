// Code generated by protoc-gen-go. DO NOT EDIT.
// source: virtualservice.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VirtualService struct {
	ProjectId            string        `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ServiceId            string        `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Name                 string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Version              string        `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	ServiceType          string        `protobuf:"bytes,5,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	ServiceSubType       string        `protobuf:"bytes,6,opt,name=service_sub_type,json=serviceSubType,proto3" json:"service_sub_type,omitempty"`
	Namespace            string        `protobuf:"bytes,7,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Token                string        `protobuf:"bytes,8,opt,name=token,proto3" json:"token,omitempty"`
	CompanyId            string        `protobuf:"bytes,9,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	ServiceAttributes    *VSAttributes `protobuf:"bytes,10,opt,name=service_attributes,json=serviceAttributes,proto3" json:"service_attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *VirtualService) Reset()         { *m = VirtualService{} }
func (m *VirtualService) String() string { return proto.CompactTextString(m) }
func (*VirtualService) ProtoMessage()    {}
func (*VirtualService) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{0}
}

func (m *VirtualService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualService.Unmarshal(m, b)
}
func (m *VirtualService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualService.Marshal(b, m, deterministic)
}
func (m *VirtualService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualService.Merge(m, src)
}
func (m *VirtualService) XXX_Size() int {
	return xxx_messageInfo_VirtualService.Size(m)
}
func (m *VirtualService) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualService.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualService proto.InternalMessageInfo

func (m *VirtualService) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *VirtualService) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *VirtualService) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VirtualService) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *VirtualService) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *VirtualService) GetServiceSubType() string {
	if m != nil {
		return m.ServiceSubType
	}
	return ""
}

func (m *VirtualService) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *VirtualService) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *VirtualService) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *VirtualService) GetServiceAttributes() *VSAttributes {
	if m != nil {
		return m.ServiceAttributes
	}
	return nil
}

type VSAttributes struct {
	Hosts                []string `protobuf:"bytes,1,rep,name=Hosts,json=hosts,proto3" json:"Hosts,omitempty"`
	Gateways             []string `protobuf:"bytes,2,rep,name=Gateways,json=gateways,proto3" json:"Gateways,omitempty"`
	Http                 []*Http  `protobuf:"bytes,3,rep,name=Http,json=http,proto3" json:"Http,omitempty"`
	Tls                  []*Tls   `protobuf:"bytes,4,rep,name=Tls,json=tls,proto3" json:"Tls,omitempty"`
	Tcp                  []*Tcp   `protobuf:"bytes,5,rep,name=Tcp,json=tcp,proto3" json:"Tcp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VSAttributes) Reset()         { *m = VSAttributes{} }
func (m *VSAttributes) String() string { return proto.CompactTextString(m) }
func (*VSAttributes) ProtoMessage()    {}
func (*VSAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{1}
}

func (m *VSAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VSAttributes.Unmarshal(m, b)
}
func (m *VSAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VSAttributes.Marshal(b, m, deterministic)
}
func (m *VSAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VSAttributes.Merge(m, src)
}
func (m *VSAttributes) XXX_Size() int {
	return xxx_messageInfo_VSAttributes.Size(m)
}
func (m *VSAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_VSAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_VSAttributes proto.InternalMessageInfo

func (m *VSAttributes) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *VSAttributes) GetGateways() []string {
	if m != nil {
		return m.Gateways
	}
	return nil
}

func (m *VSAttributes) GetHttp() []*Http {
	if m != nil {
		return m.Http
	}
	return nil
}

func (m *VSAttributes) GetTls() []*Tls {
	if m != nil {
		return m.Tls
	}
	return nil
}

func (m *VSAttributes) GetTcp() []*Tcp {
	if m != nil {
		return m.Tcp
	}
	return nil
}

type Http struct {
	Name                 string              `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	MatchRequest         *HttpMatchRequest   `protobuf:"bytes,2,opt,name=MatchRequest,json=matchRequest,proto3" json:"MatchRequest,omitempty"`
	Route                *HttpRoute          `protobuf:"bytes,3,opt,name=Route,json=route,proto3" json:"Route,omitempty"`
	HttpRedirect         *HttpRedirect       `protobuf:"bytes,4,opt,name=HttpRedirect,json=httpRedirect,proto3" json:"HttpRedirect,omitempty"`
	HttpRewrite          *HttpRewrite        `protobuf:"bytes,5,opt,name=HttpRewrite,json=httpRewrite,proto3" json:"HttpRewrite,omitempty"`
	Timeout              string              `protobuf:"bytes,6,opt,name=Timeout,json=timeout,proto3" json:"Timeout,omitempty"`
	Retry                *HttpRetry          `protobuf:"bytes,7,opt,name=Retry,json=retry,proto3" json:"Retry,omitempty"`
	FaultInjection       *HttpFaultInjection `protobuf:"bytes,8,opt,name=FaultInjection,json=faultInjection,proto3" json:"FaultInjection,omitempty"`
	CorsPolicy           *HttpCorsPolicy     `protobuf:"bytes,9,opt,name=CorsPolicy,json=corsPolicy,proto3" json:"CorsPolicy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Http) Reset()         { *m = Http{} }
func (m *Http) String() string { return proto.CompactTextString(m) }
func (*Http) ProtoMessage()    {}
func (*Http) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{2}
}

func (m *Http) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Http.Unmarshal(m, b)
}
func (m *Http) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Http.Marshal(b, m, deterministic)
}
func (m *Http) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Http.Merge(m, src)
}
func (m *Http) XXX_Size() int {
	return xxx_messageInfo_Http.Size(m)
}
func (m *Http) XXX_DiscardUnknown() {
	xxx_messageInfo_Http.DiscardUnknown(m)
}

var xxx_messageInfo_Http proto.InternalMessageInfo

func (m *Http) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Http) GetMatchRequest() *HttpMatchRequest {
	if m != nil {
		return m.MatchRequest
	}
	return nil
}

func (m *Http) GetRoute() *HttpRoute {
	if m != nil {
		return m.Route
	}
	return nil
}

func (m *Http) GetHttpRedirect() *HttpRedirect {
	if m != nil {
		return m.HttpRedirect
	}
	return nil
}

func (m *Http) GetHttpRewrite() *HttpRewrite {
	if m != nil {
		return m.HttpRewrite
	}
	return nil
}

func (m *Http) GetTimeout() string {
	if m != nil {
		return m.Timeout
	}
	return ""
}

func (m *Http) GetRetry() *HttpRetry {
	if m != nil {
		return m.Retry
	}
	return nil
}

func (m *Http) GetFaultInjection() *HttpFaultInjection {
	if m != nil {
		return m.FaultInjection
	}
	return nil
}

func (m *Http) GetCorsPolicy() *HttpCorsPolicy {
	if m != nil {
		return m.CorsPolicy
	}
	return nil
}

type HttpMatchRequest struct {
	Name                 string     `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Uri                  *HttpMatch `protobuf:"bytes,2,opt,name=Uri,json=uri,proto3" json:"Uri,omitempty"`
	Scheme               *HttpMatch `protobuf:"bytes,3,opt,name=Scheme,json=scheme,proto3" json:"Scheme,omitempty"`
	Method               *HttpMatch `protobuf:"bytes,4,opt,name=Method,json=method,proto3" json:"Method,omitempty"`
	Authority            *HttpMatch `protobuf:"bytes,5,opt,name=Authority,json=authority,proto3" json:"Authority,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *HttpMatchRequest) Reset()         { *m = HttpMatchRequest{} }
func (m *HttpMatchRequest) String() string { return proto.CompactTextString(m) }
func (*HttpMatchRequest) ProtoMessage()    {}
func (*HttpMatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{3}
}

func (m *HttpMatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpMatchRequest.Unmarshal(m, b)
}
func (m *HttpMatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpMatchRequest.Marshal(b, m, deterministic)
}
func (m *HttpMatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpMatchRequest.Merge(m, src)
}
func (m *HttpMatchRequest) XXX_Size() int {
	return xxx_messageInfo_HttpMatchRequest.Size(m)
}
func (m *HttpMatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpMatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HttpMatchRequest proto.InternalMessageInfo

func (m *HttpMatchRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HttpMatchRequest) GetUri() *HttpMatch {
	if m != nil {
		return m.Uri
	}
	return nil
}

func (m *HttpMatchRequest) GetScheme() *HttpMatch {
	if m != nil {
		return m.Scheme
	}
	return nil
}

func (m *HttpMatchRequest) GetMethod() *HttpMatch {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *HttpMatchRequest) GetAuthority() *HttpMatch {
	if m != nil {
		return m.Authority
	}
	return nil
}

type HttpMatch struct {
	Type                 string   `protobuf:"bytes,1,opt,name=Type,json=type,proto3" json:"Type,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=Value,json=value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpMatch) Reset()         { *m = HttpMatch{} }
func (m *HttpMatch) String() string { return proto.CompactTextString(m) }
func (*HttpMatch) ProtoMessage()    {}
func (*HttpMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{4}
}

func (m *HttpMatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpMatch.Unmarshal(m, b)
}
func (m *HttpMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpMatch.Marshal(b, m, deterministic)
}
func (m *HttpMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpMatch.Merge(m, src)
}
func (m *HttpMatch) XXX_Size() int {
	return xxx_messageInfo_HttpMatch.Size(m)
}
func (m *HttpMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpMatch.DiscardUnknown(m)
}

var xxx_messageInfo_HttpMatch proto.InternalMessageInfo

func (m *HttpMatch) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *HttpMatch) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type HttpRoute struct {
	Routes               *HttpRouteDestination `protobuf:"bytes,1,opt,name=Routes,json=routes,proto3" json:"Routes,omitempty"`
	Weight               int64                 `protobuf:"varint,2,opt,name=Weight,json=weight,proto3" json:"Weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HttpRoute) Reset()         { *m = HttpRoute{} }
func (m *HttpRoute) String() string { return proto.CompactTextString(m) }
func (*HttpRoute) ProtoMessage()    {}
func (*HttpRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{5}
}

func (m *HttpRoute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpRoute.Unmarshal(m, b)
}
func (m *HttpRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpRoute.Marshal(b, m, deterministic)
}
func (m *HttpRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpRoute.Merge(m, src)
}
func (m *HttpRoute) XXX_Size() int {
	return xxx_messageInfo_HttpRoute.Size(m)
}
func (m *HttpRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpRoute.DiscardUnknown(m)
}

var xxx_messageInfo_HttpRoute proto.InternalMessageInfo

func (m *HttpRoute) GetRoutes() *HttpRouteDestination {
	if m != nil {
		return m.Routes
	}
	return nil
}

func (m *HttpRoute) GetWeight() int64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type HttpRouteDestination struct {
	Port                 int64    `protobuf:"varint,1,opt,name=Port,json=port,proto3" json:"Port,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=Host,json=host,proto3" json:"Host,omitempty"`
	Subset               string   `protobuf:"bytes,3,opt,name=Subset,json=subset,proto3" json:"Subset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpRouteDestination) Reset()         { *m = HttpRouteDestination{} }
func (m *HttpRouteDestination) String() string { return proto.CompactTextString(m) }
func (*HttpRouteDestination) ProtoMessage()    {}
func (*HttpRouteDestination) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{6}
}

func (m *HttpRouteDestination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpRouteDestination.Unmarshal(m, b)
}
func (m *HttpRouteDestination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpRouteDestination.Marshal(b, m, deterministic)
}
func (m *HttpRouteDestination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpRouteDestination.Merge(m, src)
}
func (m *HttpRouteDestination) XXX_Size() int {
	return xxx_messageInfo_HttpRouteDestination.Size(m)
}
func (m *HttpRouteDestination) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpRouteDestination.DiscardUnknown(m)
}

var xxx_messageInfo_HttpRouteDestination proto.InternalMessageInfo

func (m *HttpRouteDestination) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *HttpRouteDestination) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *HttpRouteDestination) GetSubset() string {
	if m != nil {
		return m.Subset
	}
	return ""
}

type HttpRedirect struct {
	Uri                  string   `protobuf:"bytes,1,opt,name=Uri,json=uri,proto3" json:"Uri,omitempty"`
	Authority            string   `protobuf:"bytes,2,opt,name=Authority,json=authority,proto3" json:"Authority,omitempty"`
	RedirectCode         int64    `protobuf:"varint,3,opt,name=RedirectCode,json=redirectCode,proto3" json:"RedirectCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpRedirect) Reset()         { *m = HttpRedirect{} }
func (m *HttpRedirect) String() string { return proto.CompactTextString(m) }
func (*HttpRedirect) ProtoMessage()    {}
func (*HttpRedirect) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{7}
}

func (m *HttpRedirect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpRedirect.Unmarshal(m, b)
}
func (m *HttpRedirect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpRedirect.Marshal(b, m, deterministic)
}
func (m *HttpRedirect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpRedirect.Merge(m, src)
}
func (m *HttpRedirect) XXX_Size() int {
	return xxx_messageInfo_HttpRedirect.Size(m)
}
func (m *HttpRedirect) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpRedirect.DiscardUnknown(m)
}

var xxx_messageInfo_HttpRedirect proto.InternalMessageInfo

func (m *HttpRedirect) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *HttpRedirect) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *HttpRedirect) GetRedirectCode() int64 {
	if m != nil {
		return m.RedirectCode
	}
	return 0
}

type HttpRewrite struct {
	Uri                  string   `protobuf:"bytes,1,opt,name=Uri,json=uri,proto3" json:"Uri,omitempty"`
	Authority            string   `protobuf:"bytes,2,opt,name=Authority,json=authority,proto3" json:"Authority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpRewrite) Reset()         { *m = HttpRewrite{} }
func (m *HttpRewrite) String() string { return proto.CompactTextString(m) }
func (*HttpRewrite) ProtoMessage()    {}
func (*HttpRewrite) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{8}
}

func (m *HttpRewrite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpRewrite.Unmarshal(m, b)
}
func (m *HttpRewrite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpRewrite.Marshal(b, m, deterministic)
}
func (m *HttpRewrite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpRewrite.Merge(m, src)
}
func (m *HttpRewrite) XXX_Size() int {
	return xxx_messageInfo_HttpRewrite.Size(m)
}
func (m *HttpRewrite) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpRewrite.DiscardUnknown(m)
}

var xxx_messageInfo_HttpRewrite proto.InternalMessageInfo

func (m *HttpRewrite) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *HttpRewrite) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

type HttpRetry struct {
	TotalAttempts        int64    `protobuf:"varint,1,opt,name=TotalAttempts,json=totalAttempts,proto3" json:"TotalAttempts,omitempty"`
	PerTryTimeOut        string   `protobuf:"bytes,2,opt,name=PerTryTimeOut,json=perTryTimeOut,proto3" json:"PerTryTimeOut,omitempty"`
	RetryOn              string   `protobuf:"bytes,3,opt,name=RetryOn,json=retryOn,proto3" json:"RetryOn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpRetry) Reset()         { *m = HttpRetry{} }
func (m *HttpRetry) String() string { return proto.CompactTextString(m) }
func (*HttpRetry) ProtoMessage()    {}
func (*HttpRetry) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{9}
}

func (m *HttpRetry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpRetry.Unmarshal(m, b)
}
func (m *HttpRetry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpRetry.Marshal(b, m, deterministic)
}
func (m *HttpRetry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpRetry.Merge(m, src)
}
func (m *HttpRetry) XXX_Size() int {
	return xxx_messageInfo_HttpRetry.Size(m)
}
func (m *HttpRetry) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpRetry.DiscardUnknown(m)
}

var xxx_messageInfo_HttpRetry proto.InternalMessageInfo

func (m *HttpRetry) GetTotalAttempts() int64 {
	if m != nil {
		return m.TotalAttempts
	}
	return 0
}

func (m *HttpRetry) GetPerTryTimeOut() string {
	if m != nil {
		return m.PerTryTimeOut
	}
	return ""
}

func (m *HttpRetry) GetRetryOn() string {
	if m != nil {
		return m.RetryOn
	}
	return ""
}

type HttpFaultInjection struct {
	DelayType            string   `protobuf:"bytes,1,opt,name=DelayType,json=delayType,proto3" json:"DelayType,omitempty"`
	DelayValue           string   `protobuf:"bytes,2,opt,name=DelayValue,json=delayValue,proto3" json:"DelayValue,omitempty"`
	FaultPercentage      float32  `protobuf:"fixed32,3,opt,name=FaultPercentage,json=faultPercentage,proto3" json:"FaultPercentage,omitempty"`
	AbortErrorValue      string   `protobuf:"bytes,4,opt,name=AbortErrorValue,json=abortErrorValue,proto3" json:"AbortErrorValue,omitempty"`
	AbortPercentage      float32  `protobuf:"fixed32,5,opt,name=AbortPercentage,json=abortPercentage,proto3" json:"AbortPercentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpFaultInjection) Reset()         { *m = HttpFaultInjection{} }
func (m *HttpFaultInjection) String() string { return proto.CompactTextString(m) }
func (*HttpFaultInjection) ProtoMessage()    {}
func (*HttpFaultInjection) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{10}
}

func (m *HttpFaultInjection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpFaultInjection.Unmarshal(m, b)
}
func (m *HttpFaultInjection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpFaultInjection.Marshal(b, m, deterministic)
}
func (m *HttpFaultInjection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpFaultInjection.Merge(m, src)
}
func (m *HttpFaultInjection) XXX_Size() int {
	return xxx_messageInfo_HttpFaultInjection.Size(m)
}
func (m *HttpFaultInjection) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpFaultInjection.DiscardUnknown(m)
}

var xxx_messageInfo_HttpFaultInjection proto.InternalMessageInfo

func (m *HttpFaultInjection) GetDelayType() string {
	if m != nil {
		return m.DelayType
	}
	return ""
}

func (m *HttpFaultInjection) GetDelayValue() string {
	if m != nil {
		return m.DelayValue
	}
	return ""
}

func (m *HttpFaultInjection) GetFaultPercentage() float32 {
	if m != nil {
		return m.FaultPercentage
	}
	return 0
}

func (m *HttpFaultInjection) GetAbortErrorValue() string {
	if m != nil {
		return m.AbortErrorValue
	}
	return ""
}

func (m *HttpFaultInjection) GetAbortPercentage() float32 {
	if m != nil {
		return m.AbortPercentage
	}
	return 0
}

type HttpCorsPolicy struct {
	AllowOrigin          []string `protobuf:"bytes,1,rep,name=AllowOrigin,json=allowOrigin,proto3" json:"AllowOrigin,omitempty"`
	AllMethod            []string `protobuf:"bytes,2,rep,name=AllMethod,json=allMethod,proto3" json:"AllMethod,omitempty"`
	AllowHeaders         []string `protobuf:"bytes,3,rep,name=AllowHeaders,json=allowHeaders,proto3" json:"AllowHeaders,omitempty"`
	ExposeHeaders        []string `protobuf:"bytes,4,rep,name=ExposeHeaders,json=exposeHeaders,proto3" json:"ExposeHeaders,omitempty"`
	MaxAge               string   `protobuf:"bytes,5,opt,name=MaxAge,json=maxAge,proto3" json:"MaxAge,omitempty"`
	AllowCrentials       bool     `protobuf:"varint,6,opt,name=AllowCrentials,json=allowCrentials,proto3" json:"AllowCrentials,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpCorsPolicy) Reset()         { *m = HttpCorsPolicy{} }
func (m *HttpCorsPolicy) String() string { return proto.CompactTextString(m) }
func (*HttpCorsPolicy) ProtoMessage()    {}
func (*HttpCorsPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{11}
}

func (m *HttpCorsPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpCorsPolicy.Unmarshal(m, b)
}
func (m *HttpCorsPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpCorsPolicy.Marshal(b, m, deterministic)
}
func (m *HttpCorsPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpCorsPolicy.Merge(m, src)
}
func (m *HttpCorsPolicy) XXX_Size() int {
	return xxx_messageInfo_HttpCorsPolicy.Size(m)
}
func (m *HttpCorsPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpCorsPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_HttpCorsPolicy proto.InternalMessageInfo

func (m *HttpCorsPolicy) GetAllowOrigin() []string {
	if m != nil {
		return m.AllowOrigin
	}
	return nil
}

func (m *HttpCorsPolicy) GetAllMethod() []string {
	if m != nil {
		return m.AllMethod
	}
	return nil
}

func (m *HttpCorsPolicy) GetAllowHeaders() []string {
	if m != nil {
		return m.AllowHeaders
	}
	return nil
}

func (m *HttpCorsPolicy) GetExposeHeaders() []string {
	if m != nil {
		return m.ExposeHeaders
	}
	return nil
}

func (m *HttpCorsPolicy) GetMaxAge() string {
	if m != nil {
		return m.MaxAge
	}
	return ""
}

func (m *HttpCorsPolicy) GetAllowCrentials() bool {
	if m != nil {
		return m.AllowCrentials
	}
	return false
}

type Tls struct {
	Match                []*TcpMatchRequest `protobuf:"bytes,1,rep,name=Match,json=match,proto3" json:"Match,omitempty"`
	Routes               []*TcpRoutes       `protobuf:"bytes,2,rep,name=Routes,json=routes,proto3" json:"Routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Tls) Reset()         { *m = Tls{} }
func (m *Tls) String() string { return proto.CompactTextString(m) }
func (*Tls) ProtoMessage()    {}
func (*Tls) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{12}
}

func (m *Tls) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tls.Unmarshal(m, b)
}
func (m *Tls) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tls.Marshal(b, m, deterministic)
}
func (m *Tls) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tls.Merge(m, src)
}
func (m *Tls) XXX_Size() int {
	return xxx_messageInfo_Tls.Size(m)
}
func (m *Tls) XXX_DiscardUnknown() {
	xxx_messageInfo_Tls.DiscardUnknown(m)
}

var xxx_messageInfo_Tls proto.InternalMessageInfo

func (m *Tls) GetMatch() []*TcpMatchRequest {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *Tls) GetRoutes() []*TcpRoutes {
	if m != nil {
		return m.Routes
	}
	return nil
}

type TlsMatchAttribute struct {
	SniHosts             []string `protobuf:"bytes,1,rep,name=SniHosts,json=sniHosts,proto3" json:"SniHosts,omitempty"`
	DestinationSubnets   []string `protobuf:"bytes,2,rep,name=DestinationSubnets,json=destinationSubnets,proto3" json:"DestinationSubnets,omitempty"`
	Port                 int64    `protobuf:"varint,3,opt,name=Port,json=port,proto3" json:"Port,omitempty"`
	SourceSubnet         string   `protobuf:"bytes,4,opt,name=SourceSubnet,json=sourceSubnet,proto3" json:"SourceSubnet,omitempty"`
	Gateways             []string `protobuf:"bytes,5,rep,name=Gateways,json=gateways,proto3" json:"Gateways,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TlsMatchAttribute) Reset()         { *m = TlsMatchAttribute{} }
func (m *TlsMatchAttribute) String() string { return proto.CompactTextString(m) }
func (*TlsMatchAttribute) ProtoMessage()    {}
func (*TlsMatchAttribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{13}
}

func (m *TlsMatchAttribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TlsMatchAttribute.Unmarshal(m, b)
}
func (m *TlsMatchAttribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TlsMatchAttribute.Marshal(b, m, deterministic)
}
func (m *TlsMatchAttribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TlsMatchAttribute.Merge(m, src)
}
func (m *TlsMatchAttribute) XXX_Size() int {
	return xxx_messageInfo_TlsMatchAttribute.Size(m)
}
func (m *TlsMatchAttribute) XXX_DiscardUnknown() {
	xxx_messageInfo_TlsMatchAttribute.DiscardUnknown(m)
}

var xxx_messageInfo_TlsMatchAttribute proto.InternalMessageInfo

func (m *TlsMatchAttribute) GetSniHosts() []string {
	if m != nil {
		return m.SniHosts
	}
	return nil
}

func (m *TlsMatchAttribute) GetDestinationSubnets() []string {
	if m != nil {
		return m.DestinationSubnets
	}
	return nil
}

func (m *TlsMatchAttribute) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *TlsMatchAttribute) GetSourceSubnet() string {
	if m != nil {
		return m.SourceSubnet
	}
	return ""
}

func (m *TlsMatchAttribute) GetGateways() []string {
	if m != nil {
		return m.Gateways
	}
	return nil
}

type TlsRoute struct {
	RouteDestination     *RouteDestination `protobuf:"bytes,1,opt,name=RouteDestination,json=routeDestination,proto3" json:"RouteDestination,omitempty"`
	Weight               int64             `protobuf:"varint,2,opt,name=Weight,json=weight,proto3" json:"Weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TlsRoute) Reset()         { *m = TlsRoute{} }
func (m *TlsRoute) String() string { return proto.CompactTextString(m) }
func (*TlsRoute) ProtoMessage()    {}
func (*TlsRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{14}
}

func (m *TlsRoute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TlsRoute.Unmarshal(m, b)
}
func (m *TlsRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TlsRoute.Marshal(b, m, deterministic)
}
func (m *TlsRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TlsRoute.Merge(m, src)
}
func (m *TlsRoute) XXX_Size() int {
	return xxx_messageInfo_TlsRoute.Size(m)
}
func (m *TlsRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_TlsRoute.DiscardUnknown(m)
}

var xxx_messageInfo_TlsRoute proto.InternalMessageInfo

func (m *TlsRoute) GetRouteDestination() *RouteDestination {
	if m != nil {
		return m.RouteDestination
	}
	return nil
}

func (m *TlsRoute) GetWeight() int64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type RouteDestination struct {
	Host                 string   `protobuf:"bytes,1,opt,name=Host,json=host,proto3" json:"Host,omitempty"`
	Subnet               string   `protobuf:"bytes,2,opt,name=Subnet,json=subnet,proto3" json:"Subnet,omitempty"`
	Port                 int64    `protobuf:"varint,3,opt,name=Port,json=port,proto3" json:"Port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteDestination) Reset()         { *m = RouteDestination{} }
func (m *RouteDestination) String() string { return proto.CompactTextString(m) }
func (*RouteDestination) ProtoMessage()    {}
func (*RouteDestination) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{15}
}

func (m *RouteDestination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteDestination.Unmarshal(m, b)
}
func (m *RouteDestination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteDestination.Marshal(b, m, deterministic)
}
func (m *RouteDestination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteDestination.Merge(m, src)
}
func (m *RouteDestination) XXX_Size() int {
	return xxx_messageInfo_RouteDestination.Size(m)
}
func (m *RouteDestination) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteDestination.DiscardUnknown(m)
}

var xxx_messageInfo_RouteDestination proto.InternalMessageInfo

func (m *RouteDestination) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *RouteDestination) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *RouteDestination) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Tcp struct {
	Match                []*TcpMatchRequest `protobuf:"bytes,1,rep,name=Match,json=match,proto3" json:"Match,omitempty"`
	Routes               []*TcpRoutes       `protobuf:"bytes,2,rep,name=Routes,json=routes,proto3" json:"Routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Tcp) Reset()         { *m = Tcp{} }
func (m *Tcp) String() string { return proto.CompactTextString(m) }
func (*Tcp) ProtoMessage()    {}
func (*Tcp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{16}
}

func (m *Tcp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tcp.Unmarshal(m, b)
}
func (m *Tcp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tcp.Marshal(b, m, deterministic)
}
func (m *Tcp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tcp.Merge(m, src)
}
func (m *Tcp) XXX_Size() int {
	return xxx_messageInfo_Tcp.Size(m)
}
func (m *Tcp) XXX_DiscardUnknown() {
	xxx_messageInfo_Tcp.DiscardUnknown(m)
}

var xxx_messageInfo_Tcp proto.InternalMessageInfo

func (m *Tcp) GetMatch() []*TcpMatchRequest {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *Tcp) GetRoutes() []*TcpRoutes {
	if m != nil {
		return m.Routes
	}
	return nil
}

type TcpMatchRequest struct {
	DestinationSubnets   []string     `protobuf:"bytes,1,rep,name=DestinationSubnets,json=destinationSubnets,proto3" json:"DestinationSubnets,omitempty"`
	Port                 int64        `protobuf:"varint,2,opt,name=Port,json=port,proto3" json:"Port,omitempty"`
	SourceSubnet         string       `protobuf:"bytes,3,opt,name=SourceSubnet,json=sourceSubnet,proto3" json:"SourceSubnet,omitempty"`
	SourceLabels         *SourceLabel `protobuf:"bytes,4,opt,name=SourceLabels,json=sourceLabels,proto3" json:"SourceLabels,omitempty"`
	Gateways             []string     `protobuf:"bytes,5,rep,name=Gateways,json=gateways,proto3" json:"Gateways,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TcpMatchRequest) Reset()         { *m = TcpMatchRequest{} }
func (m *TcpMatchRequest) String() string { return proto.CompactTextString(m) }
func (*TcpMatchRequest) ProtoMessage()    {}
func (*TcpMatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{17}
}

func (m *TcpMatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpMatchRequest.Unmarshal(m, b)
}
func (m *TcpMatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpMatchRequest.Marshal(b, m, deterministic)
}
func (m *TcpMatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpMatchRequest.Merge(m, src)
}
func (m *TcpMatchRequest) XXX_Size() int {
	return xxx_messageInfo_TcpMatchRequest.Size(m)
}
func (m *TcpMatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpMatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TcpMatchRequest proto.InternalMessageInfo

func (m *TcpMatchRequest) GetDestinationSubnets() []string {
	if m != nil {
		return m.DestinationSubnets
	}
	return nil
}

func (m *TcpMatchRequest) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *TcpMatchRequest) GetSourceSubnet() string {
	if m != nil {
		return m.SourceSubnet
	}
	return ""
}

func (m *TcpMatchRequest) GetSourceLabels() *SourceLabel {
	if m != nil {
		return m.SourceLabels
	}
	return nil
}

func (m *TcpMatchRequest) GetGateways() []string {
	if m != nil {
		return m.Gateways
	}
	return nil
}

type SourceLabel struct {
	Key                  string   `protobuf:"bytes,1,opt,name=Key,json=key,proto3" json:"Key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SourceLabel) Reset()         { *m = SourceLabel{} }
func (m *SourceLabel) String() string { return proto.CompactTextString(m) }
func (*SourceLabel) ProtoMessage()    {}
func (*SourceLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{18}
}

func (m *SourceLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceLabel.Unmarshal(m, b)
}
func (m *SourceLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceLabel.Marshal(b, m, deterministic)
}
func (m *SourceLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceLabel.Merge(m, src)
}
func (m *SourceLabel) XXX_Size() int {
	return xxx_messageInfo_SourceLabel.Size(m)
}
func (m *SourceLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceLabel.DiscardUnknown(m)
}

var xxx_messageInfo_SourceLabel proto.InternalMessageInfo

func (m *SourceLabel) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type TcpRoutes struct {
	Destination          *RouteDestination `protobuf:"bytes,1,opt,name=Destination,json=destination,proto3" json:"Destination,omitempty"`
	Weight               int64             `protobuf:"varint,2,opt,name=Weight,json=weight,proto3" json:"Weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TcpRoutes) Reset()         { *m = TcpRoutes{} }
func (m *TcpRoutes) String() string { return proto.CompactTextString(m) }
func (*TcpRoutes) ProtoMessage()    {}
func (*TcpRoutes) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1afc8130a39a5ad, []int{19}
}

func (m *TcpRoutes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpRoutes.Unmarshal(m, b)
}
func (m *TcpRoutes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpRoutes.Marshal(b, m, deterministic)
}
func (m *TcpRoutes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpRoutes.Merge(m, src)
}
func (m *TcpRoutes) XXX_Size() int {
	return xxx_messageInfo_TcpRoutes.Size(m)
}
func (m *TcpRoutes) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpRoutes.DiscardUnknown(m)
}

var xxx_messageInfo_TcpRoutes proto.InternalMessageInfo

func (m *TcpRoutes) GetDestination() *RouteDestination {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *TcpRoutes) GetWeight() int64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func init() {
	proto.RegisterType((*VirtualService)(nil), "proto.VirtualService")
	proto.RegisterType((*VSAttributes)(nil), "proto.VSAttributes")
	proto.RegisterType((*Http)(nil), "proto.Http")
	proto.RegisterType((*HttpMatchRequest)(nil), "proto.HttpMatchRequest")
	proto.RegisterType((*HttpMatch)(nil), "proto.HttpMatch")
	proto.RegisterType((*HttpRoute)(nil), "proto.HttpRoute")
	proto.RegisterType((*HttpRouteDestination)(nil), "proto.HttpRouteDestination")
	proto.RegisterType((*HttpRedirect)(nil), "proto.HttpRedirect")
	proto.RegisterType((*HttpRewrite)(nil), "proto.HttpRewrite")
	proto.RegisterType((*HttpRetry)(nil), "proto.HttpRetry")
	proto.RegisterType((*HttpFaultInjection)(nil), "proto.HttpFaultInjection")
	proto.RegisterType((*HttpCorsPolicy)(nil), "proto.HttpCorsPolicy")
	proto.RegisterType((*Tls)(nil), "proto.Tls")
	proto.RegisterType((*TlsMatchAttribute)(nil), "proto.TlsMatchAttribute")
	proto.RegisterType((*TlsRoute)(nil), "proto.TlsRoute")
	proto.RegisterType((*RouteDestination)(nil), "proto.RouteDestination")
	proto.RegisterType((*Tcp)(nil), "proto.Tcp")
	proto.RegisterType((*TcpMatchRequest)(nil), "proto.TcpMatchRequest")
	proto.RegisterType((*SourceLabel)(nil), "proto.SourceLabel")
	proto.RegisterType((*TcpRoutes)(nil), "proto.TcpRoutes")
}

func init() { proto.RegisterFile("virtualservice.proto", fileDescriptor_b1afc8130a39a5ad) }

var fileDescriptor_b1afc8130a39a5ad = []byte{
	// 1256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdf, 0x72, 0xdb, 0xc4,
	0x17, 0xfe, 0xc9, 0xb2, 0x1d, 0xfb, 0xc8, 0x71, 0xdc, 0x6d, 0x7e, 0x45, 0x94, 0x42, 0x83, 0x86,
	0xe9, 0xe4, 0x82, 0xc9, 0x85, 0x4b, 0x61, 0x18, 0x86, 0x0b, 0x93, 0xb4, 0x69, 0x06, 0x4a, 0x33,
	0xb2, 0x09, 0xdc, 0x00, 0xb3, 0x96, 0xb7, 0xb1, 0xa8, 0x2c, 0xa9, 0xbb, 0xab, 0xa4, 0x7e, 0x18,
	0x5e, 0x80, 0x5b, 0x9e, 0x03, 0x86, 0x6b, 0xae, 0x78, 0x03, 0x5e, 0x81, 0xd9, 0xb3, 0x2b, 0x65,
	0x65, 0xbb, 0xed, 0x74, 0x0a, 0x57, 0xf6, 0xf9, 0xbe, 0xb3, 0x47, 0xbb, 0xfb, 0x9d, 0x3f, 0x0b,
	0xbb, 0x17, 0x31, 0x97, 0x05, 0x4d, 0x04, 0xe3, 0x17, 0x71, 0xc4, 0x0e, 0x72, 0x9e, 0xc9, 0x8c,
	0xb4, 0xf0, 0xe7, 0xe6, 0x76, 0x0d, 0x0d, 0xfe, 0x6a, 0x40, 0xff, 0x4c, 0xbb, 0x8f, 0x35, 0x41,
	0xde, 0x05, 0xc8, 0x79, 0xf6, 0x13, 0x8b, 0xe4, 0x8f, 0xf1, 0xcc, 0x77, 0xf6, 0x9c, 0xfd, 0x6e,
	0xd8, 0x35, 0xc8, 0xc9, 0x4c, 0xd1, 0x26, 0x84, 0xa2, 0x1b, 0x9a, 0x36, 0xc8, 0xc9, 0x8c, 0x10,
	0x68, 0xa6, 0x74, 0xc1, 0x7c, 0x17, 0x09, 0xfc, 0x4f, 0x7c, 0xd8, 0xba, 0x60, 0x5c, 0xc4, 0x59,
	0xea, 0x37, 0x11, 0x2e, 0x4d, 0xf2, 0x3e, 0xf4, 0xca, 0x60, 0x72, 0x99, 0x33, 0xbf, 0x85, 0xb4,
	0x67, 0xb0, 0xc9, 0x32, 0x67, 0x64, 0x1f, 0x06, 0xa5, 0x8b, 0x28, 0xa6, 0xda, 0xad, 0x8d, 0x6e,
	0x7d, 0x83, 0x8f, 0x8b, 0x29, 0x7a, 0xde, 0x82, 0xae, 0xfa, 0x9c, 0xc8, 0x69, 0xc4, 0xfc, 0x2d,
	0xbd, 0xb1, 0x0a, 0x20, 0xbb, 0xd0, 0x92, 0xd9, 0x53, 0x96, 0xfa, 0x1d, 0x64, 0xb4, 0xa1, 0x4e,
	0x13, 0x65, 0x8b, 0x9c, 0xa6, 0x4b, 0x75, 0x9a, 0xae, 0x5e, 0x64, 0x90, 0x93, 0x19, 0xf9, 0x02,
	0x48, 0xf9, 0x71, 0x2a, 0x25, 0x8f, 0xa7, 0x85, 0x64, 0xc2, 0x87, 0x3d, 0x67, 0xdf, 0x1b, 0x5e,
	0xd7, 0x57, 0x78, 0x70, 0x36, 0x1e, 0x55, 0x54, 0x78, 0xcd, 0xb8, 0x5f, 0x41, 0xc1, 0xcf, 0x0e,
	0xf4, 0x6c, 0x1f, 0xb5, 0x93, 0x87, 0x99, 0x90, 0xc2, 0x77, 0xf6, 0x5c, 0xb5, 0x93, 0xb9, 0x32,
	0xc8, 0x4d, 0xe8, 0x1c, 0x53, 0xc9, 0x2e, 0xe9, 0x52, 0xf8, 0x0d, 0x24, 0x3a, 0xe7, 0xc6, 0x26,
	0xb7, 0xa1, 0xf9, 0x50, 0xca, 0xdc, 0x77, 0xf7, 0xdc, 0x7d, 0x6f, 0xe8, 0x99, 0x0f, 0x2b, 0x28,
	0x6c, 0xce, 0xa5, 0xcc, 0xc9, 0x2d, 0x70, 0x27, 0x89, 0xf0, 0x9b, 0xc8, 0x83, 0xe1, 0x27, 0x89,
	0x08, 0x5d, 0x99, 0x08, 0x64, 0xa3, 0xdc, 0x6f, 0xd5, 0xd9, 0x28, 0x0f, 0x5d, 0x19, 0xe5, 0xc1,
	0x2f, 0xae, 0x8e, 0xae, 0xa4, 0xfb, 0x5a, 0x49, 0xe7, 0x58, 0xd2, 0x7d, 0x06, 0xbd, 0x47, 0x54,
	0x46, 0xf3, 0x90, 0x3d, 0x2b, 0x98, 0x90, 0xa8, 0xb7, 0x37, 0x7c, 0xcb, 0xda, 0x81, 0x4d, 0x87,
	0xbd, 0x85, 0x65, 0x91, 0x3b, 0xd0, 0x0a, 0xb3, 0x42, 0xea, 0x64, 0xf0, 0x86, 0x03, 0x7b, 0xdf,
	0x0a, 0x0f, 0x5b, 0x5c, 0xfd, 0x90, 0x4f, 0xa0, 0x87, 0x18, 0x9b, 0xc5, 0x9c, 0x45, 0x12, 0x93,
	0xe4, 0xea, 0x7e, 0x6d, 0x2a, 0xec, 0xcd, 0x2d, 0x8b, 0x7c, 0x04, 0x9e, 0x66, 0x2f, 0x79, 0x2c,
	0x75, 0xf6, 0x78, 0x43, 0x52, 0x5b, 0x87, 0x4c, 0xe8, 0xcd, 0xaf, 0x0c, 0x95, 0x8e, 0x93, 0x78,
	0xc1, 0xb2, 0x42, 0x9a, 0x44, 0xda, 0x92, 0xda, 0xc4, 0x0d, 0x33, 0xc9, 0x97, 0x98, 0x3d, 0x2b,
	0x1b, 0x56, 0x78, 0xd8, 0xe2, 0xea, 0x87, 0x8c, 0xa0, 0xff, 0x80, 0x16, 0x89, 0x3c, 0x49, 0x55,
	0x51, 0xa8, 0xbc, 0xee, 0xe0, 0x82, 0xb7, 0xad, 0x05, 0x75, 0x87, 0xb0, 0xff, 0xa4, 0x66, 0x93,
	0x7b, 0x00, 0x87, 0x19, 0x17, 0xa7, 0x59, 0x12, 0x47, 0x4b, 0x4c, 0x3c, 0x6f, 0xf8, 0x7f, 0x6b,
	0xf9, 0x15, 0x19, 0x42, 0x54, 0xfd, 0x0f, 0x7e, 0x77, 0x60, 0xb0, 0x7a, 0xeb, 0x1b, 0x85, 0x0b,
	0xc0, 0xfd, 0x86, 0xc7, 0x46, 0xaf, 0xc1, 0x9a, 0x5e, 0x6e, 0xc1, 0x63, 0xb2, 0x0f, 0xed, 0x71,
	0x34, 0x67, 0x8b, 0x4d, 0x02, 0x69, 0xb7, 0xb6, 0x40, 0x5e, 0x79, 0x3e, 0x62, 0x72, 0x9e, 0xcd,
	0x8c, 0x36, 0x1b, 0x3c, 0x17, 0xc8, 0x93, 0x03, 0xe8, 0x8e, 0x0a, 0x39, 0xcf, 0x78, 0x2c, 0x97,
	0x46, 0x90, 0x75, 0xe7, 0x2e, 0x2d, 0x5d, 0x82, 0x7b, 0xd0, 0xad, 0x70, 0x75, 0x10, 0x55, 0xc9,
	0xe5, 0x41, 0x54, 0xad, 0xab, 0x6a, 0x39, 0xa3, 0x49, 0xc1, 0x4c, 0xab, 0x69, 0x5d, 0x28, 0x23,
	0xf8, 0x4e, 0x2f, 0xc3, 0x34, 0x22, 0x77, 0xa1, 0x8d, 0x7f, 0x04, 0x2e, 0xf4, 0x86, 0xef, 0xac,
	0x26, 0xda, 0x11, 0x13, 0x32, 0x4e, 0x29, 0x0a, 0xd1, 0xc6, 0x9c, 0x13, 0xe4, 0x06, 0xb4, 0xbf,
	0x65, 0xf1, 0xf9, 0x5c, 0xe7, 0xb4, 0x1b, 0xb6, 0x2f, 0xd1, 0x0a, 0xce, 0x60, 0x77, 0xd3, 0x3a,
	0xb5, 0xb7, 0xd3, 0x8c, 0x4b, 0xfc, 0x84, 0x1b, 0x36, 0xf3, 0x8c, 0xe3, 0xc5, 0xab, 0x4a, 0x36,
	0x5b, 0x6b, 0xaa, 0x42, 0x56, 0x71, 0xc7, 0xc5, 0x54, 0x30, 0x69, 0x5a, 0x60, 0x5b, 0xa0, 0x15,
	0x4c, 0xeb, 0x49, 0x4e, 0x06, 0x5a, 0x20, 0x7d, 0x54, 0x94, 0xe3, 0x96, 0x7d, 0x75, 0xa6, 0xb1,
	0x56, 0x17, 0x45, 0x02, 0xe8, 0x95, 0x6b, 0x0f, 0xb3, 0x99, 0x96, 0xcc, 0x0d, 0x7b, 0xdc, 0xc2,
	0x82, 0xcf, 0x6b, 0xf5, 0xf0, 0xba, 0x9f, 0x08, 0x9e, 0x99, 0x4b, 0xc5, 0x1c, 0xff, 0x00, 0xb6,
	0x27, 0x99, 0xa4, 0xc9, 0x48, 0x4a, 0xb6, 0xc8, 0xa5, 0x30, 0x07, 0xdf, 0x96, 0x36, 0xa8, 0xbc,
	0x4e, 0x19, 0x9f, 0xf0, 0xa5, 0xaa, 0xa8, 0xc7, 0x45, 0x79, 0x15, 0xdb, 0xb9, 0x0d, 0xaa, 0x8a,
	0xc3, 0xa0, 0x8f, 0x53, 0x73, 0x29, 0x5b, 0x5c, 0x9b, 0xc1, 0x1f, 0x0e, 0x90, 0xf5, 0x6a, 0x51,
	0xfb, 0x3c, 0x62, 0x09, 0x5d, 0x5a, 0xd9, 0xd0, 0x9d, 0x95, 0x00, 0x79, 0x0f, 0x00, 0x59, 0x3b,
	0x2f, 0x60, 0x56, 0x21, 0x64, 0x1f, 0x76, 0x30, 0xde, 0x29, 0xe3, 0x11, 0x4b, 0x25, 0x3d, 0xd7,
	0xb7, 0xd5, 0x08, 0x77, 0x9e, 0xd4, 0x61, 0xe5, 0x39, 0x9a, 0x66, 0x5c, 0xde, 0xe7, 0x3c, 0xe3,
	0x3a, 0x9c, 0x9e, 0x50, 0x3b, 0xb4, 0x0e, 0x57, 0x9e, 0x56, 0xcc, 0x96, 0x8e, 0x49, 0xeb, 0x70,
	0xf0, 0xa7, 0x03, 0xfd, 0x7a, 0x05, 0x93, 0x3d, 0xf0, 0x46, 0x49, 0x92, 0x5d, 0x3e, 0xe6, 0xf1,
	0x79, 0x9c, 0x9a, 0xbe, 0xef, 0xd1, 0x2b, 0x08, 0x85, 0x49, 0x12, 0x53, 0x63, 0xba, 0xfd, 0x77,
	0x69, 0x09, 0x28, 0xed, 0x71, 0xfd, 0x43, 0x46, 0x67, 0x8c, 0x0b, 0x9c, 0x03, 0xdd, 0xb0, 0x47,
	0x2d, 0x4c, 0x29, 0x71, 0xff, 0x79, 0x9e, 0x09, 0x56, 0x3a, 0x35, 0xd1, 0x69, 0x9b, 0xd9, 0xa0,
	0xca, 0xce, 0x47, 0xf4, 0xf9, 0xe8, 0xbc, 0x1c, 0xb5, 0xed, 0x05, 0x5a, 0xe4, 0x0e, 0xf4, 0xf1,
	0x0b, 0x87, 0x9c, 0xa5, 0x32, 0xa6, 0x89, 0xc0, 0xd6, 0xd8, 0x09, 0xfb, 0xb4, 0x86, 0x06, 0xdf,
	0xe3, 0xa0, 0x21, 0x1f, 0x42, 0x0b, 0x2b, 0x16, 0x8f, 0xe2, 0x0d, 0x6f, 0x5c, 0xcd, 0x94, 0xda,
	0x38, 0x68, 0xe1, 0x38, 0x50, 0xdd, 0xc3, 0xd4, 0x67, 0x03, 0xdd, 0x07, 0xd6, 0x08, 0x42, 0xbc,
	0x2c, 0xca, 0xe0, 0x57, 0x07, 0xae, 0x4d, 0x12, 0x81, 0x41, 0xaa, 0x89, 0xa9, 0x46, 0xe3, 0x38,
	0x8d, 0xed, 0x99, 0xd9, 0x11, 0xc6, 0x26, 0x07, 0x40, 0xac, 0x2a, 0x1d, 0x17, 0xd3, 0x94, 0xc9,
	0x72, 0x80, 0x92, 0xd9, 0x1a, 0x53, 0x95, 0xb1, 0x6b, 0x95, 0x71, 0x00, 0xbd, 0x71, 0x56, 0x70,
	0x7c, 0x49, 0xa4, 0x4c, 0x9a, 0x14, 0xe8, 0x09, 0x0b, 0xab, 0x8d, 0xe7, 0x56, 0x7d, 0x3c, 0x07,
	0xe7, 0xd0, 0x51, 0xb3, 0x16, 0x7b, 0xd1, 0x21, 0x0c, 0x56, 0x5b, 0x87, 0xe9, 0x4a, 0xe5, 0xd0,
	0x5c, 0xeb, 0x48, 0x03, 0xbe, 0xda, 0x6b, 0x5e, 0xd4, 0x9b, 0xc2, 0xf5, 0xe0, 0x55, 0x0f, 0x72,
	0xd6, 0x7a, 0x90, 0x3a, 0x4a, 0xa3, 0xea, 0x41, 0xea, 0x10, 0x1b, 0x0e, 0x8f, 0x8a, 0x46, 0xf9,
	0x7f, 0xa6, 0xe8, 0x6f, 0x0e, 0xec, 0xac, 0x04, 0x79, 0x81, 0x66, 0xce, 0x2b, 0x35, 0x6b, 0xbc,
	0x44, 0x33, 0x77, 0x83, 0x66, 0x1f, 0x97, 0x3e, 0x5f, 0xd1, 0x29, 0xc3, 0xe7, 0x91, 0xfd, 0x3e,
	0xb0, 0xa8, 0x72, 0x9d, 0xf6, 0x7b, 0xa9, 0xd6, 0xb7, 0xc1, 0xb3, 0x16, 0xaa, 0x16, 0xfb, 0x25,
	0x5b, 0x96, 0x2d, 0xf6, 0x29, 0x5b, 0x06, 0x3f, 0x40, 0xb7, 0xba, 0x05, 0xf2, 0x29, 0x78, 0xaf,
	0x91, 0x08, 0xde, 0xec, 0xd5, 0x39, 0x30, 0xfc, 0xbb, 0x01, 0x5b, 0xe6, 0xc5, 0x4e, 0x8e, 0x61,
	0xf7, 0x90, 0x33, 0x2a, 0xd9, 0xca, 0x13, 0xbe, 0x7c, 0x48, 0xd4, 0xe1, 0x9b, 0xa5, 0xa8, 0xc6,
	0x0e, 0x99, 0xc8, 0xb3, 0x54, 0xb0, 0xe0, 0x7f, 0xe4, 0x08, 0xae, 0x1d, 0x33, 0xf9, 0xa6, 0x51,
	0x8e, 0x61, 0xf7, 0x88, 0x25, 0xec, 0xcd, 0xb7, 0xf3, 0x00, 0xae, 0x9f, 0xaa, 0x84, 0xf9, 0x17,
	0x8e, 0x75, 0x5a, 0xbc, 0xe9, 0xb1, 0xa6, 0x6d, 0x24, 0xee, 0xfe, 0x13, 0x00, 0x00, 0xff, 0xff,
	0x7b, 0xcd, 0xd4, 0x99, 0x58, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VirtualClient is the client API for Virtual service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VirtualClient interface {
	CreateVirtualService(ctx context.Context, in *VirtualService, opts ...grpc.CallOption) (*ServiceResponse, error)
	GetVirtualService(ctx context.Context, in *VirtualService, opts ...grpc.CallOption) (*ServiceResponse, error)
	DeleteVirtualService(ctx context.Context, in *VirtualService, opts ...grpc.CallOption) (*ServiceResponse, error)
	PatchVirtualService(ctx context.Context, in *VirtualService, opts ...grpc.CallOption) (*ServiceResponse, error)
	PutVirtualService(ctx context.Context, in *VirtualService, opts ...grpc.CallOption) (*ServiceResponse, error)
}

type virtualClient struct {
	cc *grpc.ClientConn
}

func NewVirtualClient(cc *grpc.ClientConn) VirtualClient {
	return &virtualClient{cc}
}

func (c *virtualClient) CreateVirtualService(ctx context.Context, in *VirtualService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Virtual/CreateVirtualService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualClient) GetVirtualService(ctx context.Context, in *VirtualService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Virtual/GetVirtualService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualClient) DeleteVirtualService(ctx context.Context, in *VirtualService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Virtual/DeleteVirtualService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualClient) PatchVirtualService(ctx context.Context, in *VirtualService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Virtual/PatchVirtualService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualClient) PutVirtualService(ctx context.Context, in *VirtualService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Virtual/PutVirtualService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VirtualServer is the server API for Virtual service.
type VirtualServer interface {
	CreateVirtualService(context.Context, *VirtualService) (*ServiceResponse, error)
	GetVirtualService(context.Context, *VirtualService) (*ServiceResponse, error)
	DeleteVirtualService(context.Context, *VirtualService) (*ServiceResponse, error)
	PatchVirtualService(context.Context, *VirtualService) (*ServiceResponse, error)
	PutVirtualService(context.Context, *VirtualService) (*ServiceResponse, error)
}

// UnimplementedVirtualServer can be embedded to have forward compatible implementations.
type UnimplementedVirtualServer struct {
}

func (*UnimplementedVirtualServer) CreateVirtualService(ctx context.Context, req *VirtualService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVirtualService not implemented")
}
func (*UnimplementedVirtualServer) GetVirtualService(ctx context.Context, req *VirtualService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVirtualService not implemented")
}
func (*UnimplementedVirtualServer) DeleteVirtualService(ctx context.Context, req *VirtualService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVirtualService not implemented")
}
func (*UnimplementedVirtualServer) PatchVirtualService(ctx context.Context, req *VirtualService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PatchVirtualService not implemented")
}
func (*UnimplementedVirtualServer) PutVirtualService(ctx context.Context, req *VirtualService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutVirtualService not implemented")
}

func RegisterVirtualServer(s *grpc.Server, srv VirtualServer) {
	s.RegisterService(&_Virtual_serviceDesc, srv)
}

func _Virtual_CreateVirtualService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtualService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualServer).CreateVirtualService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Virtual/CreateVirtualService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualServer).CreateVirtualService(ctx, req.(*VirtualService))
	}
	return interceptor(ctx, in, info, handler)
}

func _Virtual_GetVirtualService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtualService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualServer).GetVirtualService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Virtual/GetVirtualService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualServer).GetVirtualService(ctx, req.(*VirtualService))
	}
	return interceptor(ctx, in, info, handler)
}

func _Virtual_DeleteVirtualService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtualService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualServer).DeleteVirtualService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Virtual/DeleteVirtualService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualServer).DeleteVirtualService(ctx, req.(*VirtualService))
	}
	return interceptor(ctx, in, info, handler)
}

func _Virtual_PatchVirtualService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtualService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualServer).PatchVirtualService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Virtual/PatchVirtualService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualServer).PatchVirtualService(ctx, req.(*VirtualService))
	}
	return interceptor(ctx, in, info, handler)
}

func _Virtual_PutVirtualService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtualService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualServer).PutVirtualService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Virtual/PutVirtualService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualServer).PutVirtualService(ctx, req.(*VirtualService))
	}
	return interceptor(ctx, in, info, handler)
}

var _Virtual_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Virtual",
	HandlerType: (*VirtualServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVirtualService",
			Handler:    _Virtual_CreateVirtualService_Handler,
		},
		{
			MethodName: "GetVirtualService",
			Handler:    _Virtual_GetVirtualService_Handler,
		},
		{
			MethodName: "DeleteVirtualService",
			Handler:    _Virtual_DeleteVirtualService_Handler,
		},
		{
			MethodName: "PatchVirtualService",
			Handler:    _Virtual_PatchVirtualService_Handler,
		},
		{
			MethodName: "PutVirtualService",
			Handler:    _Virtual_PutVirtualService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "virtualservice.proto",
}
