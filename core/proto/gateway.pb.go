// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gateway.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProtocolVersion int32

const (
	ProtocolVersion_TLS_AUTO ProtocolVersion = 0
	ProtocolVersion_TLSV1_0  ProtocolVersion = 1
	ProtocolVersion_TLSV1_1  ProtocolVersion = 2
	ProtocolVersion_TLSV1_2  ProtocolVersion = 3
	ProtocolVersion_TLSV1_3  ProtocolVersion = 4
)

var ProtocolVersion_name = map[int32]string{
	0: "TLS_AUTO",
	1: "TLSV1_0",
	2: "TLSV1_1",
	3: "TLSV1_2",
	4: "TLSV1_3",
}

var ProtocolVersion_value = map[string]int32{
	"TLS_AUTO": 0,
	"TLSV1_0":  1,
	"TLSV1_1":  2,
	"TLSV1_2":  3,
	"TLSV1_3":  4,
}

func (x ProtocolVersion) String() string {
	return proto.EnumName(ProtocolVersion_name, int32(x))
}

func (ProtocolVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{0}
}

type Protocols int32

const (
	Protocols_HTTP  Protocols = 0
	Protocols_HTTPS Protocols = 1
	Protocols_GRPC  Protocols = 2
	Protocols_HTTP2 Protocols = 3
	Protocols_MONGO Protocols = 4
	Protocols_TCP   Protocols = 5
	Protocols_TLS   Protocols = 6
)

var Protocols_name = map[int32]string{
	0: "HTTP",
	1: "HTTPS",
	2: "GRPC",
	3: "HTTP2",
	4: "MONGO",
	5: "TCP",
	6: "TLS",
}

var Protocols_value = map[string]int32{
	"HTTP":  0,
	"HTTPS": 1,
	"GRPC":  2,
	"HTTP2": 3,
	"MONGO": 4,
	"TCP":   5,
	"TLS":   6,
}

func (x Protocols) String() string {
	return proto.EnumName(Protocols_name, int32(x))
}

func (Protocols) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{1}
}

type GatewayService struct {
	ProjectId            string                    `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ServiceId            string                    `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Name                 string                    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Version              string                    `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	ServiceType          string                    `protobuf:"bytes,5,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	ServiceSubType       string                    `protobuf:"bytes,6,opt,name=service_sub_type,json=serviceSubType,proto3" json:"service_sub_type,omitempty"`
	Namespace            string                    `protobuf:"bytes,7,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Token                string                    `protobuf:"bytes,8,opt,name=token,proto3" json:"token,omitempty"`
	CompanyId            string                    `protobuf:"bytes,9,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	ServiceAttributes    *GatewayServiceAttributes `protobuf:"bytes,10,opt,name=service_attributes,json=serviceAttributes,proto3" json:"service_attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GatewayService) Reset()         { *m = GatewayService{} }
func (m *GatewayService) String() string { return proto.CompactTextString(m) }
func (*GatewayService) ProtoMessage()    {}
func (*GatewayService) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{0}
}

func (m *GatewayService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayService.Unmarshal(m, b)
}
func (m *GatewayService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayService.Marshal(b, m, deterministic)
}
func (m *GatewayService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayService.Merge(m, src)
}
func (m *GatewayService) XXX_Size() int {
	return xxx_messageInfo_GatewayService.Size(m)
}
func (m *GatewayService) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayService.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayService proto.InternalMessageInfo

func (m *GatewayService) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *GatewayService) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *GatewayService) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GatewayService) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *GatewayService) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *GatewayService) GetServiceSubType() string {
	if m != nil {
		return m.ServiceSubType
	}
	return ""
}

func (m *GatewayService) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GatewayService) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *GatewayService) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *GatewayService) GetServiceAttributes() *GatewayServiceAttributes {
	if m != nil {
		return m.ServiceAttributes
	}
	return nil
}

type GatewayServiceResponse struct {
	Error                string          `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Resp                 *GatewayService `protobuf:"bytes,2,opt,name=resp,proto3" json:"resp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GatewayServiceResponse) Reset()         { *m = GatewayServiceResponse{} }
func (m *GatewayServiceResponse) String() string { return proto.CompactTextString(m) }
func (*GatewayServiceResponse) ProtoMessage()    {}
func (*GatewayServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{1}
}

func (m *GatewayServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayServiceResponse.Unmarshal(m, b)
}
func (m *GatewayServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayServiceResponse.Marshal(b, m, deterministic)
}
func (m *GatewayServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayServiceResponse.Merge(m, src)
}
func (m *GatewayServiceResponse) XXX_Size() int {
	return xxx_messageInfo_GatewayServiceResponse.Size(m)
}
func (m *GatewayServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayServiceResponse proto.InternalMessageInfo

func (m *GatewayServiceResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *GatewayServiceResponse) GetResp() *GatewayService {
	if m != nil {
		return m.Resp
	}
	return nil
}

type GatewayServiceAttributes struct {
	Selectors            map[string]string `protobuf:"bytes,1,rep,name=selectors,proto3" json:"selectors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Servers              []*Server         `protobuf:"bytes,2,rep,name=servers,proto3" json:"servers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GatewayServiceAttributes) Reset()         { *m = GatewayServiceAttributes{} }
func (m *GatewayServiceAttributes) String() string { return proto.CompactTextString(m) }
func (*GatewayServiceAttributes) ProtoMessage()    {}
func (*GatewayServiceAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{2}
}

func (m *GatewayServiceAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayServiceAttributes.Unmarshal(m, b)
}
func (m *GatewayServiceAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayServiceAttributes.Marshal(b, m, deterministic)
}
func (m *GatewayServiceAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayServiceAttributes.Merge(m, src)
}
func (m *GatewayServiceAttributes) XXX_Size() int {
	return xxx_messageInfo_GatewayServiceAttributes.Size(m)
}
func (m *GatewayServiceAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayServiceAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayServiceAttributes proto.InternalMessageInfo

func (m *GatewayServiceAttributes) GetSelectors() map[string]string {
	if m != nil {
		return m.Selectors
	}
	return nil
}

func (m *GatewayServiceAttributes) GetServers() []*Server {
	if m != nil {
		return m.Servers
	}
	return nil
}

type Server struct {
	Port                 *Port      `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	Hosts                []string   `protobuf:"bytes,2,rep,name=hosts,proto3" json:"hosts,omitempty"`
	Tls                  *TlsConfig `protobuf:"bytes,3,opt,name=tls,proto3" json:"tls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Server) Reset()         { *m = Server{} }
func (m *Server) String() string { return proto.CompactTextString(m) }
func (*Server) ProtoMessage()    {}
func (*Server) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{3}
}

func (m *Server) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Server.Unmarshal(m, b)
}
func (m *Server) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Server.Marshal(b, m, deterministic)
}
func (m *Server) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Server.Merge(m, src)
}
func (m *Server) XXX_Size() int {
	return xxx_messageInfo_Server.Size(m)
}
func (m *Server) XXX_DiscardUnknown() {
	xxx_messageInfo_Server.DiscardUnknown(m)
}

var xxx_messageInfo_Server proto.InternalMessageInfo

func (m *Server) GetPort() *Port {
	if m != nil {
		return m.Port
	}
	return nil
}

func (m *Server) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *Server) GetTls() *TlsConfig {
	if m != nil {
		return m.Tls
	}
	return nil
}

type Port struct {
	Name                 string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Number               uint32    `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Protocol             Protocols `protobuf:"varint,3,opt,name=protocol,proto3,enum=proto.Protocols" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{4}
}

func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (m *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(m, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Port) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Port) GetProtocol() Protocols {
	if m != nil {
		return m.Protocol
	}
	return Protocols_HTTP
}

type TlsConfig struct {
	HttpsRedirect        bool            `protobuf:"varint,1,opt,name=httpsRedirect,proto3" json:"httpsRedirect,omitempty"`
	Mode                 Mode            `protobuf:"varint,2,opt,name=mode,proto3,enum=proto.Mode" json:"mode,omitempty"`
	ServerCertificate    string          `protobuf:"bytes,3,opt,name=serverCertificate,proto3" json:"serverCertificate,omitempty"`
	PrivateKey           string          `protobuf:"bytes,4,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	CaCertificate        string          `protobuf:"bytes,5,opt,name=caCertificate,proto3" json:"caCertificate,omitempty"`
	SubjectAltName       []string        `protobuf:"bytes,6,rep,name=subjectAltName,proto3" json:"subjectAltName,omitempty"`
	MinProtocolVersion   ProtocolVersion `protobuf:"varint,7,opt,name=minProtocolVersion,proto3,enum=proto.ProtocolVersion" json:"minProtocolVersion,omitempty"`
	MaxProtocolVersion   ProtocolVersion `protobuf:"varint,8,opt,name=maxProtocolVersion,proto3,enum=proto.ProtocolVersion" json:"maxProtocolVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TlsConfig) Reset()         { *m = TlsConfig{} }
func (m *TlsConfig) String() string { return proto.CompactTextString(m) }
func (*TlsConfig) ProtoMessage()    {}
func (*TlsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{5}
}

func (m *TlsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TlsConfig.Unmarshal(m, b)
}
func (m *TlsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TlsConfig.Marshal(b, m, deterministic)
}
func (m *TlsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TlsConfig.Merge(m, src)
}
func (m *TlsConfig) XXX_Size() int {
	return xxx_messageInfo_TlsConfig.Size(m)
}
func (m *TlsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TlsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TlsConfig proto.InternalMessageInfo

func (m *TlsConfig) GetHttpsRedirect() bool {
	if m != nil {
		return m.HttpsRedirect
	}
	return false
}

func (m *TlsConfig) GetMode() Mode {
	if m != nil {
		return m.Mode
	}
	return Mode_PASSTHROUGH
}

func (m *TlsConfig) GetServerCertificate() string {
	if m != nil {
		return m.ServerCertificate
	}
	return ""
}

func (m *TlsConfig) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *TlsConfig) GetCaCertificate() string {
	if m != nil {
		return m.CaCertificate
	}
	return ""
}

func (m *TlsConfig) GetSubjectAltName() []string {
	if m != nil {
		return m.SubjectAltName
	}
	return nil
}

func (m *TlsConfig) GetMinProtocolVersion() ProtocolVersion {
	if m != nil {
		return m.MinProtocolVersion
	}
	return ProtocolVersion_TLS_AUTO
}

func (m *TlsConfig) GetMaxProtocolVersion() ProtocolVersion {
	if m != nil {
		return m.MaxProtocolVersion
	}
	return ProtocolVersion_TLS_AUTO
}

func init() {
	proto.RegisterEnum("proto.ProtocolVersion", ProtocolVersion_name, ProtocolVersion_value)
	proto.RegisterEnum("proto.Protocols", Protocols_name, Protocols_value)
	proto.RegisterType((*GatewayService)(nil), "proto.GatewayService")
	proto.RegisterType((*GatewayServiceResponse)(nil), "proto.GatewayServiceResponse")
	proto.RegisterType((*GatewayServiceAttributes)(nil), "proto.GatewayServiceAttributes")
	proto.RegisterMapType((map[string]string)(nil), "proto.GatewayServiceAttributes.SelectorsEntry")
	proto.RegisterType((*Server)(nil), "proto.Server")
	proto.RegisterType((*Port)(nil), "proto.Port")
	proto.RegisterType((*TlsConfig)(nil), "proto.TlsConfig")
}

func init() { proto.RegisterFile("gateway.proto", fileDescriptor_f1a937782ebbded5) }

var fileDescriptor_f1a937782ebbded5 = []byte{
	// 764 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x6d, 0x6f, 0xe3, 0x44,
	0x10, 0xae, 0x1d, 0xe7, 0xc5, 0xe3, 0x26, 0xf8, 0x56, 0x10, 0x59, 0x15, 0x70, 0xc5, 0x42, 0x10,
	0x4e, 0xa7, 0x88, 0xcb, 0x7d, 0x41, 0x08, 0xc4, 0x55, 0x01, 0x42, 0x45, 0xda, 0x46, 0x6b, 0x53,
	0x89, 0x4f, 0xc5, 0x71, 0xb6, 0xad, 0x69, 0xe2, 0xb5, 0x76, 0x37, 0x81, 0xfc, 0x47, 0x24, 0xfe,
	0x08, 0xbf, 0x01, 0xa1, 0x7d, 0xb1, 0xf3, 0xd2, 0xa2, 0x4a, 0xed, 0xa7, 0xec, 0x3c, 0xcf, 0xcc,
	0xb3, 0xf3, 0x4c, 0x76, 0x0c, 0xed, 0x9b, 0x44, 0x90, 0x3f, 0x92, 0x75, 0xbf, 0x60, 0x54, 0x50,
	0x54, 0x57, 0x3f, 0x47, 0x6d, 0x4e, 0xd8, 0x2a, 0x4b, 0x89, 0x46, 0xc3, 0x7f, 0x6c, 0xe8, 0x8c,
	0x74, 0x5e, 0xa4, 0x09, 0xf4, 0x11, 0x40, 0xc1, 0xe8, 0xef, 0x24, 0x15, 0x57, 0xd9, 0x2c, 0xb0,
	0x8e, 0xad, 0x9e, 0x8b, 0x5d, 0x83, 0x9c, 0xce, 0x24, 0x6d, 0x24, 0x24, 0x6d, 0x6b, 0xda, 0x20,
	0xa7, 0x33, 0x84, 0xc0, 0xc9, 0x93, 0x05, 0x09, 0x6a, 0x8a, 0x50, 0x67, 0x14, 0x40, 0x73, 0x45,
	0x18, 0xcf, 0x68, 0x1e, 0x38, 0x0a, 0x2e, 0x43, 0xf4, 0x09, 0x1c, 0x96, 0x62, 0x62, 0x5d, 0x90,
	0xa0, 0xae, 0x68, 0xcf, 0x60, 0xf1, 0xba, 0x20, 0xa8, 0x07, 0x7e, 0x99, 0xc2, 0x97, 0x53, 0x9d,
	0xd6, 0x50, 0x69, 0x1d, 0x83, 0x47, 0xcb, 0xa9, 0xca, 0xfc, 0x10, 0x5c, 0x79, 0x1d, 0x2f, 0x92,
	0x94, 0x04, 0x4d, 0xdd, 0x58, 0x05, 0xa0, 0xf7, 0xa1, 0x2e, 0xe8, 0x1d, 0xc9, 0x83, 0x96, 0x62,
	0x74, 0x20, 0xdd, 0xa4, 0x74, 0x51, 0x24, 0xf9, 0x5a, 0xba, 0x71, 0x75, 0x91, 0x41, 0x4e, 0x67,
	0xe8, 0x1c, 0x50, 0x79, 0x79, 0x22, 0x04, 0xcb, 0xa6, 0x4b, 0x41, 0x78, 0x00, 0xc7, 0x56, 0xcf,
	0x1b, 0xbc, 0xd4, 0x23, 0xec, 0xef, 0x8e, 0xef, 0xa4, 0x4a, 0xc3, 0x2f, 0xf8, 0x3e, 0x14, 0xfe,
	0x0a, 0xdd, 0xdd, 0x74, 0x4c, 0x78, 0x41, 0x73, 0xae, 0xda, 0x23, 0x8c, 0x51, 0x66, 0x06, 0xae,
	0x03, 0xf4, 0x05, 0x38, 0x8c, 0xf0, 0x42, 0x8d, 0xd9, 0x1b, 0x7c, 0xf0, 0xe0, 0x8d, 0x58, 0xa5,
	0x84, 0x7f, 0x5b, 0x10, 0xfc, 0x5f, 0x2b, 0x68, 0x0c, 0x2e, 0x27, 0x73, 0x92, 0x0a, 0xca, 0x78,
	0x60, 0x1d, 0xd7, 0x7a, 0xde, 0xa0, 0xff, 0x48, 0xfb, 0xfd, 0xa8, 0x2c, 0xf8, 0x21, 0x17, 0x6c,
	0x8d, 0x37, 0x02, 0xe8, 0x73, 0x68, 0x4a, 0x6b, 0x84, 0xf1, 0xc0, 0x56, 0x5a, 0x6d, 0xa3, 0x15,
	0x29, 0x14, 0x97, 0xec, 0xd1, 0x37, 0xd0, 0xd9, 0x55, 0x41, 0x3e, 0xd4, 0xee, 0xc8, 0xda, 0x98,
	0x94, 0x47, 0x69, 0x7c, 0x95, 0xcc, 0x97, 0xc4, 0x3c, 0x25, 0x1d, 0x7c, 0x6d, 0x7f, 0x65, 0x85,
	0x29, 0x34, 0xb4, 0x20, 0x7a, 0x09, 0x4e, 0x41, 0x99, 0x50, 0x65, 0xde, 0xc0, 0x33, 0xb7, 0x4d,
	0x28, 0x13, 0x58, 0x11, 0x52, 0xe4, 0x96, 0x72, 0xa1, 0xfb, 0x71, 0xb1, 0x0e, 0x50, 0x08, 0x35,
	0x31, 0xe7, 0xea, 0x29, 0x7a, 0x03, 0xdf, 0x54, 0xc5, 0x73, 0x3e, 0xa4, 0xf9, 0x75, 0x76, 0x83,
	0x25, 0x19, 0xfe, 0x06, 0x8e, 0xd4, 0xa9, 0xde, 0xad, 0xb5, 0xf5, 0x6e, 0xbb, 0xd0, 0xc8, 0x97,
	0x8b, 0x29, 0x61, 0xaa, 0xb7, 0x36, 0x36, 0x11, 0x7a, 0x0d, 0x2d, 0xa5, 0x95, 0xd2, 0xb9, 0x12,
	0xef, 0x54, 0xe2, 0x13, 0x03, 0x73, 0x5c, 0x65, 0x84, 0xff, 0xda, 0xe0, 0x56, 0x97, 0xa2, 0x4f,
	0xa1, 0x7d, 0x2b, 0x44, 0xc1, 0x31, 0x99, 0x65, 0x8c, 0xa4, 0xda, 0x53, 0x0b, 0xef, 0x82, 0xd2,
	0xf0, 0x82, 0xce, 0xf4, 0x4c, 0x3a, 0x95, 0xe1, 0x33, 0x3a, 0x23, 0x58, 0x11, 0xe8, 0x35, 0xbc,
	0xd0, 0x43, 0x1e, 0x12, 0x26, 0xb2, 0xeb, 0x2c, 0x4d, 0x44, 0xb9, 0x73, 0xf7, 0x09, 0xf4, 0xb1,
	0x5c, 0xe9, 0x6c, 0x95, 0x08, 0xf2, 0x33, 0x59, 0x9b, 0x1d, 0xdc, 0x42, 0x64, 0x53, 0x69, 0xb2,
	0xad, 0xa4, 0xf7, 0x70, 0x17, 0x44, 0x9f, 0x41, 0x87, 0x2f, 0xa7, 0xf2, 0x33, 0x70, 0x32, 0x17,
	0xe7, 0x72, 0x58, 0x0d, 0x35, 0xed, 0x3d, 0x14, 0xfd, 0x08, 0x68, 0x91, 0xe5, 0xe5, 0x28, 0x2e,
	0xcd, 0xe6, 0x37, 0x95, 0x95, 0xee, 0xde, 0xa0, 0x0c, 0x8b, 0x1f, 0xa8, 0x50, 0x3a, 0xc9, 0x9f,
	0xfb, 0x3a, 0xad, 0x47, 0x74, 0xee, 0x55, 0xbc, 0x8a, 0xe0, 0xbd, 0x7d, 0xe9, 0x43, 0x68, 0xc5,
	0xe3, 0xe8, 0xea, 0xe4, 0x97, 0xf8, 0xc2, 0x3f, 0x40, 0x1e, 0x34, 0xe3, 0x71, 0x74, 0xf9, 0xe6,
	0xea, 0x4b, 0xdf, 0xda, 0x04, 0x6f, 0x7c, 0x7b, 0x13, 0x0c, 0xfc, 0xda, 0x26, 0x78, 0xeb, 0x3b,
	0xaf, 0x30, 0xb8, 0xd5, 0x9f, 0x8d, 0x5a, 0xe0, 0xfc, 0x14, 0xc7, 0x13, 0xff, 0x00, 0xb9, 0x50,
	0x97, 0xa7, 0xc8, 0xb7, 0x24, 0x38, 0xc2, 0x93, 0xa1, 0x6f, 0x97, 0xa0, 0xd4, 0x70, 0xa1, 0x7e,
	0x76, 0x71, 0x3e, 0xba, 0xf0, 0x1d, 0xd4, 0x84, 0x5a, 0x3c, 0x9c, 0xf8, 0x75, 0x75, 0x18, 0x47,
	0x7e, 0x63, 0xf0, 0x97, 0x0d, 0x4d, 0xb3, 0x8e, 0xe8, 0x1d, 0xb4, 0x87, 0x8c, 0x24, 0x82, 0x94,
	0xc0, 0xc3, 0xcb, 0x7f, 0xd4, 0xdd, 0x5a, 0xbd, 0xad, 0xef, 0x49, 0x78, 0x80, 0xbe, 0x05, 0x18,
	0x11, 0xf1, 0xe4, 0xf2, 0x77, 0xd0, 0xfe, 0x9e, 0xcc, 0xc9, 0x33, 0x1a, 0xf8, 0x0e, 0x0e, 0x27,
	0x89, 0x48, 0x6f, 0x9f, 0xe3, 0x60, 0xb2, 0x7c, 0xb2, 0x83, 0x69, 0x43, 0x11, 0x6f, 0xff, 0x0b,
	0x00, 0x00, 0xff, 0xff, 0x3f, 0xde, 0x3f, 0xd5, 0x09, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GatewayClient is the client API for Gateway service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GatewayClient interface {
	CreateGateway(ctx context.Context, in *GatewayService, opts ...grpc.CallOption) (*ServiceResponse, error)
	GetGateway(ctx context.Context, in *GatewayService, opts ...grpc.CallOption) (*ServiceResponse, error)
	DeleteGateway(ctx context.Context, in *GatewayService, opts ...grpc.CallOption) (*ServiceResponse, error)
	PatchGateway(ctx context.Context, in *GatewayService, opts ...grpc.CallOption) (*ServiceResponse, error)
	PutGateway(ctx context.Context, in *GatewayService, opts ...grpc.CallOption) (*ServiceResponse, error)
}

type gatewayClient struct {
	cc *grpc.ClientConn
}

func NewGatewayClient(cc *grpc.ClientConn) GatewayClient {
	return &gatewayClient{cc}
}

func (c *gatewayClient) CreateGateway(ctx context.Context, in *GatewayService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Gateway/CreateGateway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) GetGateway(ctx context.Context, in *GatewayService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Gateway/GetGateway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) DeleteGateway(ctx context.Context, in *GatewayService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Gateway/DeleteGateway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) PatchGateway(ctx context.Context, in *GatewayService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Gateway/PatchGateway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) PutGateway(ctx context.Context, in *GatewayService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Gateway/PutGateway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GatewayServer is the server API for Gateway service.
type GatewayServer interface {
	CreateGateway(context.Context, *GatewayService) (*ServiceResponse, error)
	GetGateway(context.Context, *GatewayService) (*ServiceResponse, error)
	DeleteGateway(context.Context, *GatewayService) (*ServiceResponse, error)
	PatchGateway(context.Context, *GatewayService) (*ServiceResponse, error)
	PutGateway(context.Context, *GatewayService) (*ServiceResponse, error)
}

// UnimplementedGatewayServer can be embedded to have forward compatible implementations.
type UnimplementedGatewayServer struct {
}

func (*UnimplementedGatewayServer) CreateGateway(ctx context.Context, req *GatewayService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGateway not implemented")
}
func (*UnimplementedGatewayServer) GetGateway(ctx context.Context, req *GatewayService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGateway not implemented")
}
func (*UnimplementedGatewayServer) DeleteGateway(ctx context.Context, req *GatewayService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGateway not implemented")
}
func (*UnimplementedGatewayServer) PatchGateway(ctx context.Context, req *GatewayService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PatchGateway not implemented")
}
func (*UnimplementedGatewayServer) PutGateway(ctx context.Context, req *GatewayService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutGateway not implemented")
}

func RegisterGatewayServer(s *grpc.Server, srv GatewayServer) {
	s.RegisterService(&_Gateway_serviceDesc, srv)
}

func _Gateway_CreateGateway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GatewayService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).CreateGateway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Gateway/CreateGateway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).CreateGateway(ctx, req.(*GatewayService))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_GetGateway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GatewayService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).GetGateway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Gateway/GetGateway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).GetGateway(ctx, req.(*GatewayService))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_DeleteGateway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GatewayService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).DeleteGateway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Gateway/DeleteGateway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).DeleteGateway(ctx, req.(*GatewayService))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_PatchGateway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GatewayService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).PatchGateway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Gateway/PatchGateway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).PatchGateway(ctx, req.(*GatewayService))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_PutGateway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GatewayService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).PutGateway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Gateway/PutGateway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).PutGateway(ctx, req.(*GatewayService))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gateway_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Gateway",
	HandlerType: (*GatewayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateGateway",
			Handler:    _Gateway_CreateGateway_Handler,
		},
		{
			MethodName: "GetGateway",
			Handler:    _Gateway_GetGateway_Handler,
		},
		{
			MethodName: "DeleteGateway",
			Handler:    _Gateway_DeleteGateway_Handler,
		},
		{
			MethodName: "PatchGateway",
			Handler:    _Gateway_PatchGateway_Handler,
		},
		{
			MethodName: "PutGateway",
			Handler:    _Gateway_PutGateway_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gateway.proto",
}
