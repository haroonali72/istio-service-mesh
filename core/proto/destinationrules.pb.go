// Code generated by protoc-gen-go. DO NOT EDIT.
// source: destinationrules.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TLSSettings int32

const (
	TLSSettings_DISABLE      TLSSettings = 0
	TLSSettings_SIMPLE       TLSSettings = 1
	TLSSettings_MUTUAL       TLSSettings = 2
	TLSSettings_ISTIO_MUTUAL TLSSettings = 3
)

var TLSSettings_name = map[int32]string{
	0: "DISABLE",
	1: "SIMPLE",
	2: "MUTUAL",
	3: "ISTIO_MUTUAL",
}

var TLSSettings_value = map[string]int32{
	"DISABLE":      0,
	"SIMPLE":       1,
	"MUTUAL":       2,
	"ISTIO_MUTUAL": 3,
}

func (x TLSSettings) String() string {
	return proto.EnumName(TLSSettings_name, int32(x))
}

func (TLSSettings) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{0}
}

type Simple int32

const (
	Simple_ROUND_ROBIN Simple = 0
	Simple_LEAST_CONN  Simple = 1
	Simple_RANDOM      Simple = 2
	Simple_PASSTHROUGH Simple = 3
)

var Simple_name = map[int32]string{
	0: "ROUND_ROBIN",
	1: "LEAST_CONN",
	2: "RANDOM",
	3: "PASSTHROUGH",
}

var Simple_value = map[string]int32{
	"ROUND_ROBIN": 0,
	"LEAST_CONN":  1,
	"RANDOM":      2,
	"PASSTHROUGH": 3,
}

func (x Simple) String() string {
	return proto.EnumName(Simple_name, int32(x))
}

func (Simple) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{1}
}

type HTTPSettings int32

const (
	HTTPSettings_DEFAULT        HTTPSettings = 0
	HTTPSettings_DO_NOT_UPGRADE HTTPSettings = 1
	HTTPSettings_UPGRADE        HTTPSettings = 2
)

var HTTPSettings_name = map[int32]string{
	0: "DEFAULT",
	1: "DO_NOT_UPGRADE",
	2: "UPGRADE",
}

var HTTPSettings_value = map[string]int32{
	"DEFAULT":        0,
	"DO_NOT_UPGRADE": 1,
	"UPGRADE":        2,
}

func (x HTTPSettings) String() string {
	return proto.EnumName(HTTPSettings_name, int32(x))
}

func (HTTPSettings) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{2}
}

type DestinationRules struct {
	ServiceId            string               `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Token                string               `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	ProjectId            string               `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CompanyId            string               `protobuf:"bytes,4,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Name                 string               `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	ServiceType          string               `protobuf:"bytes,6,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	ServiceSubType       string               `protobuf:"bytes,7,opt,name=service_sub_type,json=serviceSubType,proto3" json:"service_sub_type,omitempty"`
	Namespace            string               `protobuf:"bytes,9,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Version              string               `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
	ServiceAttribute     *DRServiceAttributes `protobuf:"bytes,11,opt,name=service_attribute,json=serviceAttribute,proto3" json:"service_attribute,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DestinationRules) Reset()         { *m = DestinationRules{} }
func (m *DestinationRules) String() string { return proto.CompactTextString(m) }
func (*DestinationRules) ProtoMessage()    {}
func (*DestinationRules) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{0}
}

func (m *DestinationRules) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DestinationRules.Unmarshal(m, b)
}
func (m *DestinationRules) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DestinationRules.Marshal(b, m, deterministic)
}
func (m *DestinationRules) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DestinationRules.Merge(m, src)
}
func (m *DestinationRules) XXX_Size() int {
	return xxx_messageInfo_DestinationRules.Size(m)
}
func (m *DestinationRules) XXX_DiscardUnknown() {
	xxx_messageInfo_DestinationRules.DiscardUnknown(m)
}

var xxx_messageInfo_DestinationRules proto.InternalMessageInfo

func (m *DestinationRules) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *DestinationRules) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *DestinationRules) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *DestinationRules) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *DestinationRules) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DestinationRules) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *DestinationRules) GetServiceSubType() string {
	if m != nil {
		return m.ServiceSubType
	}
	return ""
}

func (m *DestinationRules) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *DestinationRules) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *DestinationRules) GetServiceAttribute() *DRServiceAttributes {
	if m != nil {
		return m.ServiceAttribute
	}
	return nil
}

type DRServiceAttributes struct {
	Host                 string         `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	TrafficPolicy        *TrafficPolicy `protobuf:"bytes,2,opt,name=traffic_policy,json=trafficPolicy,proto3" json:"traffic_policy,omitempty"`
	Subsets              []*Subset      `protobuf:"bytes,3,rep,name=subsets,proto3" json:"subsets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DRServiceAttributes) Reset()         { *m = DRServiceAttributes{} }
func (m *DRServiceAttributes) String() string { return proto.CompactTextString(m) }
func (*DRServiceAttributes) ProtoMessage()    {}
func (*DRServiceAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{1}
}

func (m *DRServiceAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DRServiceAttributes.Unmarshal(m, b)
}
func (m *DRServiceAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DRServiceAttributes.Marshal(b, m, deterministic)
}
func (m *DRServiceAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DRServiceAttributes.Merge(m, src)
}
func (m *DRServiceAttributes) XXX_Size() int {
	return xxx_messageInfo_DRServiceAttributes.Size(m)
}
func (m *DRServiceAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_DRServiceAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_DRServiceAttributes proto.InternalMessageInfo

func (m *DRServiceAttributes) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *DRServiceAttributes) GetTrafficPolicy() *TrafficPolicy {
	if m != nil {
		return m.TrafficPolicy
	}
	return nil
}

func (m *DRServiceAttributes) GetSubsets() []*Subset {
	if m != nil {
		return m.Subsets
	}
	return nil
}

type TrafficPolicy struct {
	LoadBalancer         *LoadBalancer       `protobuf:"bytes,1,opt,name=load_balancer,json=loadBalancer,proto3" json:"load_balancer,omitempty"`
	PortLevelSettings    []*PortLevelSetting `protobuf:"bytes,2,rep,name=port_level_settings,json=portLevelSettings,proto3" json:"port_level_settings,omitempty"`
	ConnectionPool       *ConnectionPool     `protobuf:"bytes,3,opt,name=connection_pool,json=connectionPool,proto3" json:"connection_pool,omitempty"`
	OutlierDetection     *OutlierDetection   `protobuf:"bytes,4,opt,name=outlier_detection,json=outlierDetection,proto3" json:"outlier_detection,omitempty"`
	DrTls                *DrTls              `protobuf:"bytes,5,opt,name=dr_tls,json=drTls,proto3" json:"dr_tls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TrafficPolicy) Reset()         { *m = TrafficPolicy{} }
func (m *TrafficPolicy) String() string { return proto.CompactTextString(m) }
func (*TrafficPolicy) ProtoMessage()    {}
func (*TrafficPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{2}
}

func (m *TrafficPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrafficPolicy.Unmarshal(m, b)
}
func (m *TrafficPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrafficPolicy.Marshal(b, m, deterministic)
}
func (m *TrafficPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrafficPolicy.Merge(m, src)
}
func (m *TrafficPolicy) XXX_Size() int {
	return xxx_messageInfo_TrafficPolicy.Size(m)
}
func (m *TrafficPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_TrafficPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_TrafficPolicy proto.InternalMessageInfo

func (m *TrafficPolicy) GetLoadBalancer() *LoadBalancer {
	if m != nil {
		return m.LoadBalancer
	}
	return nil
}

func (m *TrafficPolicy) GetPortLevelSettings() []*PortLevelSetting {
	if m != nil {
		return m.PortLevelSettings
	}
	return nil
}

func (m *TrafficPolicy) GetConnectionPool() *ConnectionPool {
	if m != nil {
		return m.ConnectionPool
	}
	return nil
}

func (m *TrafficPolicy) GetOutlierDetection() *OutlierDetection {
	if m != nil {
		return m.OutlierDetection
	}
	return nil
}

func (m *TrafficPolicy) GetDrTls() *DrTls {
	if m != nil {
		return m.DrTls
	}
	return nil
}

type LoadBalancer struct {
	Simple               Simple          `protobuf:"varint,1,opt,name=simple,proto3,enum=proto.Simple" json:"simple,omitempty"`
	ConsistentHash       *ConsistentHash `protobuf:"bytes,2,opt,name=consistent_hash,json=consistentHash,proto3" json:"consistent_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LoadBalancer) Reset()         { *m = LoadBalancer{} }
func (m *LoadBalancer) String() string { return proto.CompactTextString(m) }
func (*LoadBalancer) ProtoMessage()    {}
func (*LoadBalancer) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{3}
}

func (m *LoadBalancer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadBalancer.Unmarshal(m, b)
}
func (m *LoadBalancer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadBalancer.Marshal(b, m, deterministic)
}
func (m *LoadBalancer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadBalancer.Merge(m, src)
}
func (m *LoadBalancer) XXX_Size() int {
	return xxx_messageInfo_LoadBalancer.Size(m)
}
func (m *LoadBalancer) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadBalancer.DiscardUnknown(m)
}

var xxx_messageInfo_LoadBalancer proto.InternalMessageInfo

func (m *LoadBalancer) GetSimple() Simple {
	if m != nil {
		return m.Simple
	}
	return Simple_ROUND_ROBIN
}

func (m *LoadBalancer) GetConsistentHash() *ConsistentHash {
	if m != nil {
		return m.ConsistentHash
	}
	return nil
}

type ConsistentHash struct {
	HttpHeaderName       string      `protobuf:"bytes,1,opt,name=http_header_name,json=httpHeaderName,proto3" json:"http_header_name,omitempty"`
	UseSourceIp          bool        `protobuf:"varint,2,opt,name=use_source_ip,json=useSourceIp,proto3" json:"use_source_ip,omitempty"`
	MinimumRingSize      string      `protobuf:"bytes,3,opt,name=minimum_ring_size,json=minimumRingSize,proto3" json:"minimum_ring_size,omitempty"`
	HttpCookie           *HttpCookie `protobuf:"bytes,4,opt,name=http_cookie,json=httpCookie,proto3" json:"http_cookie,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ConsistentHash) Reset()         { *m = ConsistentHash{} }
func (m *ConsistentHash) String() string { return proto.CompactTextString(m) }
func (*ConsistentHash) ProtoMessage()    {}
func (*ConsistentHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{4}
}

func (m *ConsistentHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsistentHash.Unmarshal(m, b)
}
func (m *ConsistentHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsistentHash.Marshal(b, m, deterministic)
}
func (m *ConsistentHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsistentHash.Merge(m, src)
}
func (m *ConsistentHash) XXX_Size() int {
	return xxx_messageInfo_ConsistentHash.Size(m)
}
func (m *ConsistentHash) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsistentHash.DiscardUnknown(m)
}

var xxx_messageInfo_ConsistentHash proto.InternalMessageInfo

func (m *ConsistentHash) GetHttpHeaderName() string {
	if m != nil {
		return m.HttpHeaderName
	}
	return ""
}

func (m *ConsistentHash) GetUseSourceIp() bool {
	if m != nil {
		return m.UseSourceIp
	}
	return false
}

func (m *ConsistentHash) GetMinimumRingSize() string {
	if m != nil {
		return m.MinimumRingSize
	}
	return ""
}

func (m *ConsistentHash) GetHttpCookie() *HttpCookie {
	if m != nil {
		return m.HttpCookie
	}
	return nil
}

type HttpCookie struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Ttl                  int64    `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpCookie) Reset()         { *m = HttpCookie{} }
func (m *HttpCookie) String() string { return proto.CompactTextString(m) }
func (*HttpCookie) ProtoMessage()    {}
func (*HttpCookie) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{5}
}

func (m *HttpCookie) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpCookie.Unmarshal(m, b)
}
func (m *HttpCookie) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpCookie.Marshal(b, m, deterministic)
}
func (m *HttpCookie) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpCookie.Merge(m, src)
}
func (m *HttpCookie) XXX_Size() int {
	return xxx_messageInfo_HttpCookie.Size(m)
}
func (m *HttpCookie) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpCookie.DiscardUnknown(m)
}

var xxx_messageInfo_HttpCookie proto.InternalMessageInfo

func (m *HttpCookie) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HttpCookie) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *HttpCookie) GetTtl() int64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

type PortLevelSetting struct {
	DrPort               *DrPort           `protobuf:"bytes,1,opt,name=dr_port,json=drPort,proto3" json:"dr_port,omitempty"`
	LoadBalancer         *LoadBalancer     `protobuf:"bytes,2,opt,name=load_balancer,json=loadBalancer,proto3" json:"load_balancer,omitempty"`
	ConnectionPool       *ConnectionPool   `protobuf:"bytes,3,opt,name=connection_pool,json=connectionPool,proto3" json:"connection_pool,omitempty"`
	OutlierDetection     *OutlierDetection `protobuf:"bytes,4,opt,name=outlier_detection,json=outlierDetection,proto3" json:"outlier_detection,omitempty"`
	DrTls                *DrTls            `protobuf:"bytes,5,opt,name=dr_tls,json=drTls,proto3" json:"dr_tls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PortLevelSetting) Reset()         { *m = PortLevelSetting{} }
func (m *PortLevelSetting) String() string { return proto.CompactTextString(m) }
func (*PortLevelSetting) ProtoMessage()    {}
func (*PortLevelSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{6}
}

func (m *PortLevelSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortLevelSetting.Unmarshal(m, b)
}
func (m *PortLevelSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortLevelSetting.Marshal(b, m, deterministic)
}
func (m *PortLevelSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortLevelSetting.Merge(m, src)
}
func (m *PortLevelSetting) XXX_Size() int {
	return xxx_messageInfo_PortLevelSetting.Size(m)
}
func (m *PortLevelSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_PortLevelSetting.DiscardUnknown(m)
}

var xxx_messageInfo_PortLevelSetting proto.InternalMessageInfo

func (m *PortLevelSetting) GetDrPort() *DrPort {
	if m != nil {
		return m.DrPort
	}
	return nil
}

func (m *PortLevelSetting) GetLoadBalancer() *LoadBalancer {
	if m != nil {
		return m.LoadBalancer
	}
	return nil
}

func (m *PortLevelSetting) GetConnectionPool() *ConnectionPool {
	if m != nil {
		return m.ConnectionPool
	}
	return nil
}

func (m *PortLevelSetting) GetOutlierDetection() *OutlierDetection {
	if m != nil {
		return m.OutlierDetection
	}
	return nil
}

func (m *PortLevelSetting) GetDrTls() *DrTls {
	if m != nil {
		return m.DrTls
	}
	return nil
}

type DrPort struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DrPort) Reset()         { *m = DrPort{} }
func (m *DrPort) String() string { return proto.CompactTextString(m) }
func (*DrPort) ProtoMessage()    {}
func (*DrPort) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{7}
}

func (m *DrPort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DrPort.Unmarshal(m, b)
}
func (m *DrPort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DrPort.Marshal(b, m, deterministic)
}
func (m *DrPort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DrPort.Merge(m, src)
}
func (m *DrPort) XXX_Size() int {
	return xxx_messageInfo_DrPort.Size(m)
}
func (m *DrPort) XXX_DiscardUnknown() {
	xxx_messageInfo_DrPort.DiscardUnknown(m)
}

var xxx_messageInfo_DrPort proto.InternalMessageInfo

func (m *DrPort) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type ConnectionPool struct {
	DrTcp                *DrTcp   `protobuf:"bytes,1,opt,name=dr_tcp,json=drTcp,proto3" json:"dr_tcp,omitempty"`
	DrHttp               *DrHttp  `protobuf:"bytes,2,opt,name=dr_http,json=drHttp,proto3" json:"dr_http,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectionPool) Reset()         { *m = ConnectionPool{} }
func (m *ConnectionPool) String() string { return proto.CompactTextString(m) }
func (*ConnectionPool) ProtoMessage()    {}
func (*ConnectionPool) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{8}
}

func (m *ConnectionPool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionPool.Unmarshal(m, b)
}
func (m *ConnectionPool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionPool.Marshal(b, m, deterministic)
}
func (m *ConnectionPool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionPool.Merge(m, src)
}
func (m *ConnectionPool) XXX_Size() int {
	return xxx_messageInfo_ConnectionPool.Size(m)
}
func (m *ConnectionPool) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionPool.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionPool proto.InternalMessageInfo

func (m *ConnectionPool) GetDrTcp() *DrTcp {
	if m != nil {
		return m.DrTcp
	}
	return nil
}

func (m *ConnectionPool) GetDrHttp() *DrHttp {
	if m != nil {
		return m.DrHttp
	}
	return nil
}

type DrTcp struct {
	MaxConnections       int32         `protobuf:"varint,1,opt,name=max_connections,json=maxConnections,proto3" json:"max_connections,omitempty"`
	TcpKeepAlive         *TcpKeepalive `protobuf:"bytes,2,opt,name=tcp_keep_alive,json=tcpKeepAlive,proto3" json:"tcp_keep_alive,omitempty"`
	ConnectTimeout       int32         `protobuf:"varint,3,opt,name=connect_timeout,json=connectTimeout,proto3" json:"connect_timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DrTcp) Reset()         { *m = DrTcp{} }
func (m *DrTcp) String() string { return proto.CompactTextString(m) }
func (*DrTcp) ProtoMessage()    {}
func (*DrTcp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{9}
}

func (m *DrTcp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DrTcp.Unmarshal(m, b)
}
func (m *DrTcp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DrTcp.Marshal(b, m, deterministic)
}
func (m *DrTcp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DrTcp.Merge(m, src)
}
func (m *DrTcp) XXX_Size() int {
	return xxx_messageInfo_DrTcp.Size(m)
}
func (m *DrTcp) XXX_DiscardUnknown() {
	xxx_messageInfo_DrTcp.DiscardUnknown(m)
}

var xxx_messageInfo_DrTcp proto.InternalMessageInfo

func (m *DrTcp) GetMaxConnections() int32 {
	if m != nil {
		return m.MaxConnections
	}
	return 0
}

func (m *DrTcp) GetTcpKeepAlive() *TcpKeepalive {
	if m != nil {
		return m.TcpKeepAlive
	}
	return nil
}

func (m *DrTcp) GetConnectTimeout() int32 {
	if m != nil {
		return m.ConnectTimeout
	}
	return 0
}

type TcpKeepalive struct {
	Time                 int32    `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Interval             int32    `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
	Probes               uint32   `protobuf:"varint,3,opt,name=probes,proto3" json:"probes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcpKeepalive) Reset()         { *m = TcpKeepalive{} }
func (m *TcpKeepalive) String() string { return proto.CompactTextString(m) }
func (*TcpKeepalive) ProtoMessage()    {}
func (*TcpKeepalive) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{10}
}

func (m *TcpKeepalive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpKeepalive.Unmarshal(m, b)
}
func (m *TcpKeepalive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpKeepalive.Marshal(b, m, deterministic)
}
func (m *TcpKeepalive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpKeepalive.Merge(m, src)
}
func (m *TcpKeepalive) XXX_Size() int {
	return xxx_messageInfo_TcpKeepalive.Size(m)
}
func (m *TcpKeepalive) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpKeepalive.DiscardUnknown(m)
}

var xxx_messageInfo_TcpKeepalive proto.InternalMessageInfo

func (m *TcpKeepalive) GetTime() int32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *TcpKeepalive) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *TcpKeepalive) GetProbes() uint32 {
	if m != nil {
		return m.Probes
	}
	return 0
}

type DrHttp struct {
	Http_1MaxPendingRequests                          int32        `protobuf:"varint,1,opt,name=http_1_max_pending_requests,json=http1MaxPendingRequests,proto3" json:"http_1_max_pending_requests,omitempty"`
	Http_2MaxRequests                                 HTTPSettings `protobuf:"varint,2,opt,name=http_2_max_requests,json=http2MaxRequests,proto3,enum=proto.HTTPSettings" json:"http_2_max_requests,omitempty"`
	MaxRequestsPerConnection                          int32        `protobuf:"varint,3,opt,name=max_requests_per_connection,json=maxRequestsPerConnection,proto3" json:"max_requests_per_connection,omitempty"`
	MaxRetries                                        int32        `protobuf:"varint,4,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	IdleTimeout                                       int32        `protobuf:"varint,5,opt,name=idle_timeout,json=idleTimeout,proto3" json:"idle_timeout,omitempty"`
	ConnectionPoolSettingsHttpSettingsH2UpgradePolicy int32        `protobuf:"varint,6,opt,name=connection_pool_settings_http_settings_h2_upgrade_policy,json=connectionPoolSettingsHttpSettingsH2UpgradePolicy,proto3" json:"connection_pool_settings_http_settings_h2_upgrade_policy,omitempty"`
	XXX_NoUnkeyedLiteral                              struct{}     `json:"-"`
	XXX_unrecognized                                  []byte       `json:"-"`
	XXX_sizecache                                     int32        `json:"-"`
}

func (m *DrHttp) Reset()         { *m = DrHttp{} }
func (m *DrHttp) String() string { return proto.CompactTextString(m) }
func (*DrHttp) ProtoMessage()    {}
func (*DrHttp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{11}
}

func (m *DrHttp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DrHttp.Unmarshal(m, b)
}
func (m *DrHttp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DrHttp.Marshal(b, m, deterministic)
}
func (m *DrHttp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DrHttp.Merge(m, src)
}
func (m *DrHttp) XXX_Size() int {
	return xxx_messageInfo_DrHttp.Size(m)
}
func (m *DrHttp) XXX_DiscardUnknown() {
	xxx_messageInfo_DrHttp.DiscardUnknown(m)
}

var xxx_messageInfo_DrHttp proto.InternalMessageInfo

func (m *DrHttp) GetHttp_1MaxPendingRequests() int32 {
	if m != nil {
		return m.Http_1MaxPendingRequests
	}
	return 0
}

func (m *DrHttp) GetHttp_2MaxRequests() HTTPSettings {
	if m != nil {
		return m.Http_2MaxRequests
	}
	return HTTPSettings_DEFAULT
}

func (m *DrHttp) GetMaxRequestsPerConnection() int32 {
	if m != nil {
		return m.MaxRequestsPerConnection
	}
	return 0
}

func (m *DrHttp) GetMaxRetries() int32 {
	if m != nil {
		return m.MaxRetries
	}
	return 0
}

func (m *DrHttp) GetIdleTimeout() int32 {
	if m != nil {
		return m.IdleTimeout
	}
	return 0
}

func (m *DrHttp) GetConnectionPoolSettingsHttpSettingsH2UpgradePolicy() int32 {
	if m != nil {
		return m.ConnectionPoolSettingsHttpSettingsH2UpgradePolicy
	}
	return 0
}

type OutlierDetection struct {
	ConsecutiveErrors    int32    `protobuf:"varint,1,opt,name=consecutive_errors,json=consecutiveErrors,proto3" json:"consecutive_errors,omitempty"`
	Interval             int32    `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
	BaseEjectionTime     int32    `protobuf:"varint,3,opt,name=base_ejection_time,json=baseEjectionTime,proto3" json:"base_ejection_time,omitempty"`
	MaxEjectionPercent   int32    `protobuf:"varint,4,opt,name=max_ejection_percent,json=maxEjectionPercent,proto3" json:"max_ejection_percent,omitempty"`
	MinHealthPercent     int32    `protobuf:"varint,5,opt,name=min_health_percent,json=minHealthPercent,proto3" json:"min_health_percent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutlierDetection) Reset()         { *m = OutlierDetection{} }
func (m *OutlierDetection) String() string { return proto.CompactTextString(m) }
func (*OutlierDetection) ProtoMessage()    {}
func (*OutlierDetection) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{12}
}

func (m *OutlierDetection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutlierDetection.Unmarshal(m, b)
}
func (m *OutlierDetection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutlierDetection.Marshal(b, m, deterministic)
}
func (m *OutlierDetection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutlierDetection.Merge(m, src)
}
func (m *OutlierDetection) XXX_Size() int {
	return xxx_messageInfo_OutlierDetection.Size(m)
}
func (m *OutlierDetection) XXX_DiscardUnknown() {
	xxx_messageInfo_OutlierDetection.DiscardUnknown(m)
}

var xxx_messageInfo_OutlierDetection proto.InternalMessageInfo

func (m *OutlierDetection) GetConsecutiveErrors() int32 {
	if m != nil {
		return m.ConsecutiveErrors
	}
	return 0
}

func (m *OutlierDetection) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *OutlierDetection) GetBaseEjectionTime() int32 {
	if m != nil {
		return m.BaseEjectionTime
	}
	return 0
}

func (m *OutlierDetection) GetMaxEjectionPercent() int32 {
	if m != nil {
		return m.MaxEjectionPercent
	}
	return 0
}

func (m *OutlierDetection) GetMinHealthPercent() int32 {
	if m != nil {
		return m.MinHealthPercent
	}
	return 0
}

type Subset struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Labels               map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TrafficPolicy        *TrafficPolicy    `protobuf:"bytes,3,opt,name=traffic_policy,json=trafficPolicy,proto3" json:"traffic_policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Subset) Reset()         { *m = Subset{} }
func (m *Subset) String() string { return proto.CompactTextString(m) }
func (*Subset) ProtoMessage()    {}
func (*Subset) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{13}
}

func (m *Subset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subset.Unmarshal(m, b)
}
func (m *Subset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subset.Marshal(b, m, deterministic)
}
func (m *Subset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subset.Merge(m, src)
}
func (m *Subset) XXX_Size() int {
	return xxx_messageInfo_Subset.Size(m)
}
func (m *Subset) XXX_DiscardUnknown() {
	xxx_messageInfo_Subset.DiscardUnknown(m)
}

var xxx_messageInfo_Subset proto.InternalMessageInfo

func (m *Subset) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Subset) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Subset) GetTrafficPolicy() *TrafficPolicy {
	if m != nil {
		return m.TrafficPolicy
	}
	return nil
}

type DrTls struct {
	Mode                 TLSSettings `protobuf:"varint,1,opt,name=mode,proto3,enum=proto.TLSSettings" json:"mode,omitempty"`
	ClientCertificate    string      `protobuf:"bytes,2,opt,name=client_certificate,json=clientCertificate,proto3" json:"client_certificate,omitempty"`
	PrivateKey           string      `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	CaCertificate        string      `protobuf:"bytes,4,opt,name=ca_certificate,json=caCertificate,proto3" json:"ca_certificate,omitempty"`
	SubjectAltNames      string      `protobuf:"bytes,5,opt,name=subject_alt_names,json=subjectAltNames,proto3" json:"subject_alt_names,omitempty"`
	Name                 []string    `protobuf:"bytes,6,rep,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DrTls) Reset()         { *m = DrTls{} }
func (m *DrTls) String() string { return proto.CompactTextString(m) }
func (*DrTls) ProtoMessage()    {}
func (*DrTls) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf8b52c0cc87fe37, []int{14}
}

func (m *DrTls) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DrTls.Unmarshal(m, b)
}
func (m *DrTls) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DrTls.Marshal(b, m, deterministic)
}
func (m *DrTls) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DrTls.Merge(m, src)
}
func (m *DrTls) XXX_Size() int {
	return xxx_messageInfo_DrTls.Size(m)
}
func (m *DrTls) XXX_DiscardUnknown() {
	xxx_messageInfo_DrTls.DiscardUnknown(m)
}

var xxx_messageInfo_DrTls proto.InternalMessageInfo

func (m *DrTls) GetMode() TLSSettings {
	if m != nil {
		return m.Mode
	}
	return TLSSettings_DISABLE
}

func (m *DrTls) GetClientCertificate() string {
	if m != nil {
		return m.ClientCertificate
	}
	return ""
}

func (m *DrTls) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *DrTls) GetCaCertificate() string {
	if m != nil {
		return m.CaCertificate
	}
	return ""
}

func (m *DrTls) GetSubjectAltNames() string {
	if m != nil {
		return m.SubjectAltNames
	}
	return ""
}

func (m *DrTls) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

func init() {
	proto.RegisterEnum("proto.TLSSettings", TLSSettings_name, TLSSettings_value)
	proto.RegisterEnum("proto.Simple", Simple_name, Simple_value)
	proto.RegisterEnum("proto.HTTPSettings", HTTPSettings_name, HTTPSettings_value)
	proto.RegisterType((*DestinationRules)(nil), "proto.DestinationRules")
	proto.RegisterType((*DRServiceAttributes)(nil), "proto.DRServiceAttributes")
	proto.RegisterType((*TrafficPolicy)(nil), "proto.TrafficPolicy")
	proto.RegisterType((*LoadBalancer)(nil), "proto.LoadBalancer")
	proto.RegisterType((*ConsistentHash)(nil), "proto.ConsistentHash")
	proto.RegisterType((*HttpCookie)(nil), "proto.HttpCookie")
	proto.RegisterType((*PortLevelSetting)(nil), "proto.PortLevelSetting")
	proto.RegisterType((*DrPort)(nil), "proto.DrPort")
	proto.RegisterType((*ConnectionPool)(nil), "proto.ConnectionPool")
	proto.RegisterType((*DrTcp)(nil), "proto.DrTcp")
	proto.RegisterType((*TcpKeepalive)(nil), "proto.TcpKeepalive")
	proto.RegisterType((*DrHttp)(nil), "proto.DrHttp")
	proto.RegisterType((*OutlierDetection)(nil), "proto.OutlierDetection")
	proto.RegisterType((*Subset)(nil), "proto.Subset")
	proto.RegisterMapType((map[string]string)(nil), "proto.Subset.LabelsEntry")
	proto.RegisterType((*DrTls)(nil), "proto.DrTls")
}

func init() { proto.RegisterFile("destinationrules.proto", fileDescriptor_cf8b52c0cc87fe37) }

var fileDescriptor_cf8b52c0cc87fe37 = []byte{
	// 1482 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xd4, 0x57, 0xc1, 0x72, 0xdb, 0x46,
	0x12, 0x35, 0x49, 0x91, 0xb2, 0x1a, 0x24, 0x45, 0x8d, 0x6c, 0x99, 0x2b, 0xef, 0xd6, 0x7a, 0xb1,
	0x65, 0xaf, 0xcb, 0xb5, 0xeb, 0x5a, 0x71, 0x2f, 0xf6, 0xc6, 0x49, 0x15, 0x25, 0xca, 0xa2, 0x62,
	0x4a, 0x64, 0x0d, 0xa9, 0xdc, 0x52, 0x28, 0x10, 0x1c, 0x9b, 0xb0, 0x40, 0x02, 0x01, 0x06, 0x2a,
	0x2b, 0xc7, 0x9c, 0x53, 0x95, 0x4b, 0xee, 0xf9, 0x92, 0xe4, 0x9a, 0x3f, 0x49, 0x0e, 0xf9, 0x89,
	0xf4, 0xf4, 0x0c, 0x40, 0x48, 0x76, 0xa5, 0x7c, 0xd0, 0x25, 0x27, 0xce, 0xf4, 0xeb, 0x6e, 0xf4,
	0xbc, 0xee, 0xe9, 0x1e, 0xc2, 0xce, 0x4c, 0x24, 0xd2, 0x5f, 0xba, 0xd2, 0x0f, 0x97, 0x71, 0x1a,
	0x88, 0xe4, 0x69, 0x14, 0x87, 0x32, 0x64, 0x55, 0xfa, 0xd9, 0x6d, 0x24, 0x22, 0xbe, 0xf0, 0x3d,
	0xa1, 0xa5, 0xf6, 0xaf, 0x65, 0x68, 0xf5, 0x56, 0x06, 0x5c, 0x19, 0xb0, 0xbf, 0x01, 0x18, 0x2d,
	0xc7, 0x9f, 0xb5, 0x4b, 0x0f, 0x4a, 0x8f, 0x37, 0xf8, 0x86, 0x91, 0x1c, 0xcf, 0xd8, 0x1d, 0xa8,
	0xca, 0xf0, 0x5c, 0x2c, 0xdb, 0x65, 0x42, 0xf4, 0x46, 0x19, 0xa1, 0xcb, 0xb7, 0xc2, 0x93, 0xca,
	0xa8, 0xa2, 0x8d, 0x8c, 0x04, 0x8d, 0x10, 0xf6, 0xc2, 0x45, 0xe4, 0x2e, 0x2f, 0x15, 0xbc, 0xa6,
	0x61, 0x23, 0x41, 0x98, 0xc1, 0xda, 0xd2, 0x5d, 0x88, 0x76, 0x95, 0x00, 0x5a, 0xb3, 0x7f, 0x40,
	0x3d, 0x0b, 0x43, 0x5e, 0x46, 0xa2, 0x5d, 0x23, 0xcc, 0x32, 0xb2, 0x09, 0x8a, 0xd8, 0x63, 0x68,
	0x65, 0x2a, 0x49, 0x3a, 0xd5, 0x6a, 0xeb, 0xa4, 0xd6, 0x34, 0xf2, 0x71, 0x3a, 0x25, 0xcd, 0xbf,
	0xc2, 0x86, 0x72, 0x9a, 0x44, 0xae, 0x27, 0xda, 0x1b, 0xfa, 0xf3, 0xb9, 0x80, 0xb5, 0x61, 0xfd,
	0x42, 0xc4, 0x09, 0x32, 0xd0, 0x06, 0xc2, 0xb2, 0x2d, 0x3b, 0x82, 0xad, 0xec, 0x0b, 0xae, 0x94,
	0xb1, 0x3f, 0x4d, 0xa5, 0x68, 0x5b, 0xa8, 0x63, 0x75, 0x76, 0x35, 0x87, 0x4f, 0x7b, 0x7c, 0xac,
	0x35, 0xba, 0x99, 0x42, 0xc2, 0xb3, 0xb0, 0x72, 0x91, 0xfd, 0x5d, 0x09, 0xb6, 0x3f, 0xa0, 0xa9,
	0x4e, 0x3e, 0x0f, 0x13, 0x69, 0x68, 0xa6, 0x35, 0xfb, 0x04, 0x9a, 0x32, 0x76, 0x5f, 0xbf, 0xf6,
	0x3d, 0x27, 0x0a, 0x03, 0xdf, 0xbb, 0x24, 0xaa, 0xad, 0xce, 0x1d, 0xf3, 0xc5, 0x89, 0x06, 0x47,
	0x84, 0xf1, 0x86, 0x2c, 0x6e, 0xd9, 0xbf, 0x60, 0x1d, 0xb9, 0x48, 0x84, 0x4c, 0x30, 0x0b, 0x15,
	0xb4, 0x6a, 0x18, 0xab, 0x31, 0x49, 0x79, 0x86, 0xda, 0x3f, 0x96, 0xa1, 0x71, 0xc5, 0x13, 0x7b,
	0x06, 0x8d, 0x20, 0x74, 0x67, 0xce, 0xd4, 0x0d, 0xdc, 0xa5, 0x27, 0x62, 0x0a, 0xca, 0xea, 0x6c,
	0x1b, 0x07, 0x03, 0xc4, 0xf6, 0x0d, 0xc4, 0xeb, 0x41, 0x61, 0x87, 0x34, 0x6d, 0x47, 0x61, 0x2c,
	0x9d, 0x40, 0x5c, 0x88, 0xc0, 0x41, 0xf7, 0x58, 0x51, 0x6f, 0x12, 0x0c, 0x5b, 0x05, 0x70, 0xcf,
	0xd8, 0x8f, 0x50, 0x63, 0xa0, 0x14, 0xc6, 0x1a, 0xe7, 0x5b, 0xd1, 0x35, 0x49, 0xc2, 0x3e, 0x83,
	0x4d, 0x2f, 0x5c, 0x2e, 0xb1, 0x68, 0x90, 0x7d, 0x3c, 0x7d, 0x18, 0x50, 0x2d, 0x59, 0x9d, 0xbb,
	0xc6, 0xc9, 0x41, 0x8e, 0x8e, 0x10, 0xe4, 0x4d, 0xef, 0xca, 0x9e, 0xf5, 0x60, 0x2b, 0x4c, 0x65,
	0xe0, 0x8b, 0xd8, 0x99, 0x09, 0xa9, 0x01, 0x2a, 0xb7, 0x55, 0x18, 0x43, 0x8d, 0xf7, 0x32, 0x98,
	0xb7, 0xc2, 0x6b, 0x12, 0xf6, 0x4f, 0xa8, 0xcd, 0x62, 0x47, 0x06, 0x09, 0x15, 0xa4, 0xd5, 0xa9,
	0x67, 0xa9, 0x8e, 0x27, 0x41, 0xc2, 0xab, 0x33, 0xf5, 0x63, 0xa7, 0x50, 0x2f, 0x32, 0xc2, 0x1e,
	0x42, 0x2d, 0xf1, 0x17, 0x51, 0x20, 0x88, 0xb6, 0xe6, 0x8a, 0x77, 0x12, 0x72, 0x03, 0x9a, 0x13,
	0x26, 0x7e, 0x22, 0xc5, 0x52, 0x3a, 0x73, 0x37, 0x99, 0x9b, 0xec, 0x16, 0x4e, 0x68, 0xd0, 0x3e,
	0x82, 0x74, 0xc2, 0xc2, 0xde, 0xfe, 0xa9, 0x04, 0xcd, 0xab, 0x2a, 0xea, 0x1a, 0xcc, 0xa5, 0x8c,
	0x9c, 0xb9, 0x70, 0x67, 0x78, 0x70, 0xba, 0x49, 0xba, 0x9e, 0x9a, 0x4a, 0xde, 0x27, 0xf1, 0xa9,
	0xba, 0x53, 0x36, 0x34, 0xd2, 0x04, 0x2f, 0x4b, 0x98, 0xc6, 0xea, 0x76, 0x47, 0xf4, 0xe9, 0xdb,
	0xdc, 0x42, 0xe1, 0x98, 0x64, 0xc7, 0x11, 0x7b, 0x02, 0x5b, 0x0b, 0x7f, 0xe9, 0x2f, 0xd2, 0x85,
	0x13, 0x63, 0x4e, 0x9c, 0xc4, 0xff, 0x5a, 0x98, 0x0b, 0xbd, 0x69, 0x00, 0x8e, 0xf2, 0x31, 0x8a,
	0x59, 0x07, 0x2c, 0xfa, 0xb2, 0x17, 0x86, 0xe7, 0xbe, 0x30, 0x44, 0x6f, 0x99, 0x83, 0xf4, 0x11,
	0x39, 0x20, 0x80, 0xc3, 0x3c, 0x5f, 0xdb, 0x2f, 0x01, 0x56, 0x48, 0x7e, 0xf3, 0x4b, 0x85, 0x9b,
	0x8f, 0xb2, 0xc8, 0x95, 0x73, 0xd3, 0x60, 0x68, 0xcd, 0x5a, 0x50, 0x91, 0x52, 0x17, 0x43, 0x85,
	0xab, 0xa5, 0xfd, 0x03, 0xf6, 0xae, 0xeb, 0x25, 0xc5, 0x1e, 0xc1, 0x3a, 0x66, 0x4e, 0xd5, 0x95,
	0x29, 0xde, 0x46, 0x9e, 0x3a, 0xa5, 0xcb, 0x31, 0xaf, 0xea, 0xf7, 0xfd, 0x52, 0x2f, 0x7f, 0x6c,
	0xa9, 0xff, 0x89, 0x2a, 0xf4, 0x01, 0xd4, 0xf4, 0xb1, 0xd9, 0x0e, 0xd4, 0x96, 0xe9, 0x62, 0x6a,
	0xae, 0x74, 0x95, 0x9b, 0x9d, 0xfd, 0x25, 0xd5, 0x52, 0x31, 0x3c, 0xe3, 0xd8, 0x8b, 0x0c, 0x7f,
	0x05, 0xc7, 0x5e, 0x44, 0x8e, 0xbd, 0xc8, 0xb0, 0xac, 0x72, 0x6a, 0x78, 0x5b, 0xb1, 0xac, 0x52,
	0xab, 0x58, 0x56, 0xbf, 0xf6, 0xf7, 0x25, 0xa8, 0x92, 0x21, 0x76, 0xa5, 0xcd, 0x85, 0xfb, 0xce,
	0x59, 0x71, 0x91, 0x98, 0x48, 0x9a, 0x28, 0x5e, 0x85, 0x90, 0xb0, 0xe7, 0xd8, 0xfb, 0xbc, 0xc8,
	0x39, 0x17, 0x22, 0x72, 0xdc, 0xc0, 0xbf, 0x10, 0xd7, 0x32, 0x83, 0xce, 0x5e, 0x21, 0x46, 0x10,
	0xaf, 0x4b, 0xbd, 0xeb, 0xaa, 0x9d, 0xfa, 0x86, 0xf1, 0xef, 0x48, 0x7f, 0x21, 0x90, 0x33, 0xca,
	0x4c, 0x35, 0x4f, 0xc1, 0x44, 0x4b, 0xed, 0x2f, 0xa0, 0x5e, 0x74, 0xa3, 0xea, 0x4d, 0x19, 0x98,
	0x88, 0x68, 0xcd, 0x76, 0xe1, 0xb6, 0xbf, 0x94, 0xd8, 0xae, 0xdd, 0x80, 0x22, 0xa8, 0xf2, 0x7c,
	0xaf, 0xd8, 0xc4, 0x60, 0xa6, 0x22, 0x21, 0xff, 0x0d, 0x6e, 0x76, 0xf6, 0x37, 0x15, 0x45, 0xb8,
	0x3a, 0x39, 0x7b, 0x01, 0xf7, 0xe9, 0x62, 0xec, 0x39, 0xea, 0xd8, 0x91, 0x58, 0xce, 0xd4, 0x55,
	0x8a, 0xc5, 0x57, 0x29, 0x4e, 0xdb, 0xec, 0xec, 0xf7, 0x94, 0xca, 0xde, 0x89, 0xfb, 0x6e, 0xa4,
	0x71, 0x6e, 0x60, 0xb6, 0x0f, 0xdb, 0x64, 0xdd, 0x21, 0xeb, 0xdc, 0xaa, 0x4c, 0x7d, 0x25, 0x63,
	0xa2, 0x3f, 0x99, 0x8c, 0xb2, 0xbe, 0xc9, 0xa9, 0x01, 0x74, 0xd0, 0x55, 0xee, 0xe3, 0x53, 0xb8,
	0x5f, 0x34, 0xc6, 0x18, 0xe2, 0x02, 0xfd, 0x86, 0x99, 0xf6, 0x62, 0x65, 0x31, 0x12, 0xf1, 0x2a,
	0x11, 0xec, 0xef, 0x60, 0x69, 0x73, 0x9c, 0x54, 0x78, 0xd0, 0x35, 0x52, 0x07, 0x52, 0x27, 0x89,
	0x1a, 0xcf, 0xfe, 0x2c, 0x10, 0x39, 0xd5, 0x55, 0xd2, 0xb0, 0x94, 0xcc, 0xf0, 0xcc, 0x12, 0x78,
	0x76, 0xed, 0xaa, 0xe4, 0xa3, 0x81, 0x8a, 0xa7, 0xb0, 0xeb, 0x38, 0x69, 0xf4, 0x26, 0xc6, 0x3e,
	0x95, 0x4d, 0xbc, 0x1a, 0xb9, 0xdb, 0xbb, 0x7a, 0x79, 0xb2, 0xe3, 0x2a, 0x8a, 0xf3, 0x75, 0xe7,
	0x4c, 0x5b, 0xea, 0x21, 0x66, 0xff, 0x56, 0x82, 0xd6, 0xf5, 0x0b, 0xc4, 0xfe, 0x03, 0x4c, 0xb5,
	0x51, 0xe1, 0xa5, 0x12, 0x13, 0xee, 0x88, 0x38, 0x0e, 0xe3, 0x2c, 0x0b, 0x5b, 0x05, 0xe4, 0x90,
	0x80, 0x3f, 0x4c, 0xfe, 0xbf, 0x81, 0x4d, 0x5d, 0xec, 0xa1, 0xe2, 0xad, 0x39, 0x17, 0x95, 0x8e,
	0xa6, 0xb3, 0xa5, 0x90, 0x43, 0x03, 0x28, 0x16, 0xd8, 0x7f, 0xe1, 0x8e, 0xa2, 0x31, 0x57, 0xc6,
	0x2c, 0x78, 0xd8, 0xb6, 0x0d, 0x9f, 0x0c, 0xb1, 0x4c, 0x7d, 0xa4, 0x11, 0xe5, 0x1f, 0xbb, 0xac,
	0xea, 0xe5, 0x81, 0x9c, 0xe7, 0xfa, 0x9a, 0xdd, 0x16, 0x22, 0x7d, 0x02, 0x8c, 0xb6, 0xfd, 0x73,
	0x09, 0x6a, 0x7a, 0xb0, 0x7f, 0xb0, 0x93, 0xee, 0x41, 0x2d, 0x70, 0xa7, 0x22, 0xc8, 0x46, 0xf1,
	0x5f, 0xae, 0xbc, 0x05, 0x9e, 0x0e, 0x08, 0x3b, 0x5c, 0xca, 0xf8, 0x92, 0x1b, 0xc5, 0x0f, 0x3c,
	0x3e, 0x2a, 0x1f, 0xfd, 0xf8, 0xd8, 0x7d, 0x0e, 0x56, 0xc1, 0xa7, 0x6a, 0xda, 0xe7, 0xe2, 0xd2,
	0x44, 0xa4, 0x96, 0xea, 0xf1, 0x88, 0x24, 0xa6, 0x22, 0x7b, 0x3c, 0xd2, 0xe6, 0xff, 0xe5, 0x67,
	0x25, 0xfb, 0x17, 0xdd, 0x2b, 0x30, 0x82, 0x47, 0xb0, 0xb6, 0x08, 0x67, 0xd9, 0x18, 0x65, 0xd9,
	0x77, 0x07, 0xe3, 0xbc, 0xda, 0x09, 0xa7, 0xa4, 0x62, 0x9a, 0x71, 0x8a, 0x62, 0x5f, 0x96, 0x3e,
	0x46, 0xe1, 0xca, 0xcc, 0xf1, 0x96, 0x46, 0x0e, 0x56, 0x80, 0xaa, 0xe8, 0x28, 0xf6, 0x2f, 0x70,
	0xe9, 0xa8, 0xa0, 0xf4, 0x44, 0x03, 0x23, 0x7a, 0x85, 0xb1, 0x3d, 0x84, 0xa6, 0xe7, 0x5e, 0xf1,
	0xa5, 0xdf, 0xa9, 0x0d, 0xcf, 0x2d, 0xfa, 0xc1, 0xf9, 0x88, 0x4f, 0x28, 0x7a, 0xe9, 0x62, 0x26,
	0x68, 0xda, 0x26, 0xe6, 0xe1, 0xba, 0x69, 0x80, 0x6e, 0x20, 0xd5, 0xb8, 0x4d, 0xf2, 0x9c, 0xd4,
	0x90, 0x7d, 0x93, 0x93, 0x27, 0x3d, 0xb0, 0x0a, 0x67, 0x61, 0x16, 0xac, 0xf7, 0x8e, 0xc7, 0xdd,
	0xfd, 0xc1, 0x61, 0xeb, 0x16, 0x03, 0xcc, 0xe6, 0xf1, 0xc9, 0x08, 0xd7, 0x25, 0xb5, 0x3e, 0x39,
	0x9b, 0x9c, 0x75, 0x07, 0xad, 0x32, 0x12, 0x59, 0x3f, 0x1e, 0x4f, 0x8e, 0x87, 0x8e, 0x91, 0x54,
	0x9e, 0xbc, 0x44, 0x4d, 0xfd, 0xa0, 0xd8, 0x04, 0x8b, 0x0f, 0xcf, 0x4e, 0x7b, 0x0e, 0x1f, 0xee,
	0x1f, 0x9f, 0xa2, 0x93, 0x26, 0xc0, 0xe0, 0xb0, 0x3b, 0x9e, 0x38, 0x07, 0xc3, 0xd3, 0x53, 0xed,
	0x88, 0x77, 0x4f, 0x7b, 0xc3, 0x13, 0x74, 0x84, 0xca, 0xa3, 0xee, 0x78, 0x3c, 0xe9, 0xa3, 0xc9,
	0x51, 0x1f, 0xfd, 0xbc, 0x80, 0x7a, 0xb1, 0x91, 0x50, 0x38, 0x87, 0x2f, 0xbb, 0x67, 0x83, 0x09,
	0x7a, 0x62, 0xd0, 0xec, 0x0d, 0x9d, 0xd3, 0xe1, 0xc4, 0x39, 0x1b, 0x1d, 0xf1, 0x6e, 0x4f, 0x85,
	0x85, 0x0a, 0xd9, 0xa6, 0xdc, 0xf9, 0xb6, 0x72, 0xe5, 0xff, 0x03, 0xfd, 0xe1, 0x60, 0xaf, 0x60,
	0xe7, 0x20, 0x16, 0x48, 0xd5, 0x7b, 0xff, 0x2c, 0xb2, 0x01, 0x77, 0x1d, 0xd8, 0xdd, 0xc9, 0xea,
	0x52, 0xbf, 0x8f, 0x39, 0xbe, 0xcb, 0xd5, 0xa5, 0xb4, 0x6f, 0xb1, 0x3e, 0x6c, 0x1f, 0x09, 0x79,
	0x43, 0x9e, 0x46, 0xe9, 0x8d, 0x78, 0xfa, 0x1c, 0xee, 0x8e, 0x5c, 0xe9, 0xcd, 0x6f, 0xc2, 0x17,
	0x92, 0xd5, 0x13, 0x81, 0xb8, 0x11, 0xb2, 0xa6, 0x35, 0x02, 0xfe, 0xf7, 0x7b, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x2f, 0xd5, 0xf1, 0x33, 0x05, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DestinationrulesClient is the client API for Destinationrules service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DestinationrulesClient interface {
	CreateDestinationRules(ctx context.Context, in *DestinationRules, opts ...grpc.CallOption) (*ServiceResponse, error)
	GetDestinationRules(ctx context.Context, in *DestinationRules, opts ...grpc.CallOption) (*ServiceResponse, error)
	PutDestinationRules(ctx context.Context, in *DestinationRules, opts ...grpc.CallOption) (*ServiceResponse, error)
	PatchDestinationRules(ctx context.Context, in *DestinationRules, opts ...grpc.CallOption) (*ServiceResponse, error)
	DeleteDestinationRules(ctx context.Context, in *DestinationRules, opts ...grpc.CallOption) (*ServiceResponse, error)
}

type destinationrulesClient struct {
	cc *grpc.ClientConn
}

func NewDestinationrulesClient(cc *grpc.ClientConn) DestinationrulesClient {
	return &destinationrulesClient{cc}
}

func (c *destinationrulesClient) CreateDestinationRules(ctx context.Context, in *DestinationRules, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Destinationrules/CreateDestinationRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *destinationrulesClient) GetDestinationRules(ctx context.Context, in *DestinationRules, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Destinationrules/GetDestinationRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *destinationrulesClient) PutDestinationRules(ctx context.Context, in *DestinationRules, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Destinationrules/PutDestinationRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *destinationrulesClient) PatchDestinationRules(ctx context.Context, in *DestinationRules, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Destinationrules/PatchDestinationRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *destinationrulesClient) DeleteDestinationRules(ctx context.Context, in *DestinationRules, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Destinationrules/DeleteDestinationRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DestinationrulesServer is the server API for Destinationrules service.
type DestinationrulesServer interface {
	CreateDestinationRules(context.Context, *DestinationRules) (*ServiceResponse, error)
	GetDestinationRules(context.Context, *DestinationRules) (*ServiceResponse, error)
	PutDestinationRules(context.Context, *DestinationRules) (*ServiceResponse, error)
	PatchDestinationRules(context.Context, *DestinationRules) (*ServiceResponse, error)
	DeleteDestinationRules(context.Context, *DestinationRules) (*ServiceResponse, error)
}

// UnimplementedDestinationrulesServer can be embedded to have forward compatible implementations.
type UnimplementedDestinationrulesServer struct {
}

func (*UnimplementedDestinationrulesServer) CreateDestinationRules(ctx context.Context, req *DestinationRules) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDestinationRules not implemented")
}
func (*UnimplementedDestinationrulesServer) GetDestinationRules(ctx context.Context, req *DestinationRules) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDestinationRules not implemented")
}
func (*UnimplementedDestinationrulesServer) PutDestinationRules(ctx context.Context, req *DestinationRules) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutDestinationRules not implemented")
}
func (*UnimplementedDestinationrulesServer) PatchDestinationRules(ctx context.Context, req *DestinationRules) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PatchDestinationRules not implemented")
}
func (*UnimplementedDestinationrulesServer) DeleteDestinationRules(ctx context.Context, req *DestinationRules) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDestinationRules not implemented")
}

func RegisterDestinationrulesServer(s *grpc.Server, srv DestinationrulesServer) {
	s.RegisterService(&_Destinationrules_serviceDesc, srv)
}

func _Destinationrules_CreateDestinationRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestinationRules)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DestinationrulesServer).CreateDestinationRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Destinationrules/CreateDestinationRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DestinationrulesServer).CreateDestinationRules(ctx, req.(*DestinationRules))
	}
	return interceptor(ctx, in, info, handler)
}

func _Destinationrules_GetDestinationRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestinationRules)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DestinationrulesServer).GetDestinationRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Destinationrules/GetDestinationRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DestinationrulesServer).GetDestinationRules(ctx, req.(*DestinationRules))
	}
	return interceptor(ctx, in, info, handler)
}

func _Destinationrules_PutDestinationRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestinationRules)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DestinationrulesServer).PutDestinationRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Destinationrules/PutDestinationRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DestinationrulesServer).PutDestinationRules(ctx, req.(*DestinationRules))
	}
	return interceptor(ctx, in, info, handler)
}

func _Destinationrules_PatchDestinationRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestinationRules)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DestinationrulesServer).PatchDestinationRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Destinationrules/PatchDestinationRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DestinationrulesServer).PatchDestinationRules(ctx, req.(*DestinationRules))
	}
	return interceptor(ctx, in, info, handler)
}

func _Destinationrules_DeleteDestinationRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestinationRules)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DestinationrulesServer).DeleteDestinationRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Destinationrules/DeleteDestinationRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DestinationrulesServer).DeleteDestinationRules(ctx, req.(*DestinationRules))
	}
	return interceptor(ctx, in, info, handler)
}

var _Destinationrules_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Destinationrules",
	HandlerType: (*DestinationrulesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDestinationRules",
			Handler:    _Destinationrules_CreateDestinationRules_Handler,
		},
		{
			MethodName: "GetDestinationRules",
			Handler:    _Destinationrules_GetDestinationRules_Handler,
		},
		{
			MethodName: "PutDestinationRules",
			Handler:    _Destinationrules_PutDestinationRules_Handler,
		},
		{
			MethodName: "PatchDestinationRules",
			Handler:    _Destinationrules_PatchDestinationRules_Handler,
		},
		{
			MethodName: "DeleteDestinationRules",
			Handler:    _Destinationrules_DeleteDestinationRules_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "destinationrules.proto",
}
