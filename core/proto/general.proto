syntax = "proto3";
package proto;

message EnvironmentVariable {
    string key = 1;
    string value = 2;
    bool dynamic = 3;
    string type = 4;
}

message ImageRepositoryConfigurations {
    string url = 1;
    string tag = 2;
    BasicAuthCredentials credentials = 3;
    string profile_id = 4;
}

message BasicAuthCredentials {
    string username = 1;
    string password = 2;
}

message ContainerPort {
    string host = 1;
    string container = 2;
    string name = 3;
}

message IstioConfig {
    bool enable_external_traffic = 1;

}

message LabelSelectorObj {
    map<string, string> match_label = 1;
    repeated LabelSelectorRequirement match_expression = 2;

}

message LabelSelectorRequirement {
    string key = 1;
    LabelSelectorOperator operator = 2;
    repeated string values = 3;
}
message SecurityContextStruct {
    repeated Capabilities capabilities = 1;
    int64 run_as_user = 2;
    int64 run_as_group = 3;
    bool run_as_non_root = 4;
    bool privileged = 5;
    ProcMountType proc_mount = 6;
    bool allow_privilege_escalation = 7;
    bool read_only_root_filesystem = 8;
    SELinuxOptionsStruct se_linux_options = 9;

}

message SELinuxOptionsStruct {
    string user = 1;
    string role = 2;
    string type = 3;
    string level = 4;
}

message Capabilities {
    repeated string add = 1;
    repeated string drop = 2;
}

message Probe {
    Handler handler = 1;
    int32 initial_delay_seconds = 2;
    int32 timeout_seconds = 3;
    int32 period_seconds = 4;
    int32 success_threshold = 5;
    int32 failure_threshold = 6;


}

message Handler {
    string handler_type = 1;
    ExecAction exec = 2;
    HTTPGetAction http_get = 3;
    TCPSocketAction tcp_socket = 4;
}
message HTTPGetAction {
    string path = 1;
    int32 port = 2;
    string host = 3;
    string scheme = 4;
    repeated HTTPHeader http_headers = 5;


}

message HTTPHeader {
    string name = 1;
    string value = 2;
}

message TCPSocketAction {
    int32 port = 1;
    string host = 2;
}

message ExecAction {
    repeated string command = 1;
}

message K8sRbacAttribute {
    string resource = 1;
    repeated string verbs = 2;
    repeated string api_group = 3;
}

message IstioRbacAttribute {
    repeated string services = 1;
    repeated string methods = 2;
    repeated string paths = 3;


}

enum LabelSelectorOperator {
    In = 0;
    NotIn = 1;
    Exists = 2;
    DoesNotExist = 3;
}

enum ProcMountType {
    Default = 0;
    Unmasked = 1;
}
