// Code generated by protoc-gen-go. DO NOT EDIT.
// source: serviceaccount.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NameRequest) Reset()         { *m = NameRequest{} }
func (m *NameRequest) String() string { return proto.CompactTextString(m) }
func (*NameRequest) ProtoMessage()    {}
func (*NameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f552791109664fa6, []int{0}
}

func (m *NameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameRequest.Unmarshal(m, b)
}
func (m *NameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameRequest.Marshal(b, m, deterministic)
}
func (m *NameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameRequest.Merge(m, src)
}
func (m *NameRequest) XXX_Size() int {
	return xxx_messageInfo_NameRequest.Size(m)
}
func (m *NameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NameRequest proto.InternalMessageInfo

func (m *NameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ServiceAccountService struct {
	ServiceId            string   `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	ProjectId            string   `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CompanyId            string   `protobuf:"bytes,5,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Name                 string   `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string   `protobuf:"bytes,7,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceAccountService) Reset()         { *m = ServiceAccountService{} }
func (m *ServiceAccountService) String() string { return proto.CompactTextString(m) }
func (*ServiceAccountService) ProtoMessage()    {}
func (*ServiceAccountService) Descriptor() ([]byte, []int) {
	return fileDescriptor_f552791109664fa6, []int{1}
}

func (m *ServiceAccountService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceAccountService.Unmarshal(m, b)
}
func (m *ServiceAccountService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceAccountService.Marshal(b, m, deterministic)
}
func (m *ServiceAccountService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceAccountService.Merge(m, src)
}
func (m *ServiceAccountService) XXX_Size() int {
	return xxx_messageInfo_ServiceAccountService.Size(m)
}
func (m *ServiceAccountService) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceAccountService.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceAccountService proto.InternalMessageInfo

func (m *ServiceAccountService) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *ServiceAccountService) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ServiceAccountService) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *ServiceAccountService) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *ServiceAccountService) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceAccountService) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type ServiceAccountServiceResponse struct {
	Error                string                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Resp                 *ServiceAccountService `protobuf:"bytes,2,opt,name=resp,proto3" json:"resp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ServiceAccountServiceResponse) Reset()         { *m = ServiceAccountServiceResponse{} }
func (m *ServiceAccountServiceResponse) String() string { return proto.CompactTextString(m) }
func (*ServiceAccountServiceResponse) ProtoMessage()    {}
func (*ServiceAccountServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f552791109664fa6, []int{2}
}

func (m *ServiceAccountServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceAccountServiceResponse.Unmarshal(m, b)
}
func (m *ServiceAccountServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceAccountServiceResponse.Marshal(b, m, deterministic)
}
func (m *ServiceAccountServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceAccountServiceResponse.Merge(m, src)
}
func (m *ServiceAccountServiceResponse) XXX_Size() int {
	return xxx_messageInfo_ServiceAccountServiceResponse.Size(m)
}
func (m *ServiceAccountServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceAccountServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceAccountServiceResponse proto.InternalMessageInfo

func (m *ServiceAccountServiceResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ServiceAccountServiceResponse) GetResp() *ServiceAccountService {
	if m != nil {
		return m.Resp
	}
	return nil
}

func init() {
	proto.RegisterType((*NameRequest)(nil), "proto.NameRequest")
	proto.RegisterType((*ServiceAccountService)(nil), "proto.ServiceAccountService")
	proto.RegisterType((*ServiceAccountServiceResponse)(nil), "proto.ServiceAccountServiceResponse")
}

func init() { proto.RegisterFile("serviceaccount.proto", fileDescriptor_f552791109664fa6) }

var fileDescriptor_f552791109664fa6 = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x8d, 0x6d, 0x2a, 0x99, 0xa2, 0x87, 0xa5, 0x4a, 0x48, 0x5b, 0xd0, 0x9c, 0x3c, 0x15,
	0xa9, 0x9f, 0x40, 0x14, 0x24, 0x17, 0x29, 0xd1, 0x9e, 0x65, 0xdd, 0x0c, 0x5a, 0x35, 0xbb, 0xeb,
	0xee, 0x46, 0xf0, 0xbb, 0xf5, 0xc3, 0xc9, 0xfe, 0xb1, 0x12, 0x08, 0x3d, 0xe5, 0x34, 0x99, 0xf7,
	0xcb, 0x7b, 0xbc, 0x1d, 0x98, 0x68, 0x54, 0xdf, 0x1b, 0x86, 0x94, 0x31, 0xd1, 0x70, 0xb3, 0x90,
	0x4a, 0x18, 0x41, 0x62, 0x37, 0xb2, 0xe3, 0x00, 0xbd, 0x9a, 0x5f, 0xc0, 0xf8, 0x81, 0xd6, 0x58,
	0xe2, 0x57, 0x83, 0xda, 0x10, 0x02, 0x43, 0x4e, 0x6b, 0x4c, 0xa3, 0xf3, 0xe8, 0x32, 0x29, 0xdd,
	0x77, 0xbe, 0x8d, 0xe0, 0xf4, 0xd1, 0x9b, 0x6e, 0x7c, 0x62, 0xd8, 0xc8, 0x1c, 0x20, 0xa4, 0x3d,
	0x6f, 0xaa, 0xe0, 0x49, 0x82, 0x52, 0x54, 0x64, 0x02, 0xb1, 0x11, 0x1f, 0xc8, 0xd3, 0x43, 0x47,
	0xfc, 0x62, 0x4d, 0x52, 0x89, 0x77, 0x64, 0xc6, 0x9a, 0x06, 0xde, 0x14, 0x94, 0xa2, 0xb2, 0x98,
	0x89, 0x5a, 0x52, 0xfe, 0x63, 0x71, 0xec, 0x71, 0x50, 0x8a, 0x6a, 0x57, 0x70, 0xf4, 0x5f, 0x90,
	0xcc, 0x20, 0xb1, 0x53, 0x4b, 0xca, 0x30, 0x3d, 0xf2, 0x8e, 0x9d, 0x90, 0xbf, 0xc2, 0xbc, 0xb3,
	0x7d, 0x89, 0x5a, 0x0a, 0xae, 0xd1, 0xd6, 0x44, 0xa5, 0x84, 0x0a, 0x0f, 0xf0, 0x0b, 0xb9, 0x82,
	0xa1, 0x42, 0x2d, 0x5d, 0xf7, 0xf1, 0x72, 0xe6, 0xcf, 0xb5, 0xe8, 0x4e, 0x72, 0x7f, 0x2e, 0xb7,
	0x03, 0x38, 0x69, 0x73, 0xb2, 0x86, 0xe9, 0xad, 0x42, 0x6a, 0xb0, 0xfb, 0x7e, 0x7b, 0x53, 0xb3,
	0xb3, 0x36, 0xfd, 0xeb, 0x9b, 0x1f, 0x90, 0x12, 0xd2, 0x7b, 0x34, 0xbd, 0x67, 0xae, 0x9a, 0x9e,
	0x33, 0x9f, 0x20, 0x5b, 0x51, 0xc3, 0xde, 0xfa, 0x4d, 0x5d, 0xc3, 0xf4, 0x0e, 0x3f, 0xb1, 0xe7,
	0xa3, 0xbe, 0x8c, 0x1c, 0xb8, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x71, 0x6c, 0xab, 0xbc, 0x3e,
	0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceAccountClient is the client API for ServiceAccount service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceAccountClient interface {
	CreateServiceAccountService(ctx context.Context, in *ServiceAccountService, opts ...grpc.CallOption) (*ServiceResponse, error)
	GetServiceAccountService(ctx context.Context, in *ServiceAccountService, opts ...grpc.CallOption) (*ServiceResponse, error)
	PutServiceAccountService(ctx context.Context, in *ServiceAccountService, opts ...grpc.CallOption) (*ServiceResponse, error)
	PatchServiceAccountService(ctx context.Context, in *ServiceAccountService, opts ...grpc.CallOption) (*ServiceResponse, error)
	DeleteServiceAccountService(ctx context.Context, in *ServiceAccountService, opts ...grpc.CallOption) (*ServiceResponse, error)
}

type serviceAccountClient struct {
	cc *grpc.ClientConn
}

func NewServiceAccountClient(cc *grpc.ClientConn) ServiceAccountClient {
	return &serviceAccountClient{cc}
}

func (c *serviceAccountClient) CreateServiceAccountService(ctx context.Context, in *ServiceAccountService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.ServiceAccount/CreateServiceAccountService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceAccountClient) GetServiceAccountService(ctx context.Context, in *ServiceAccountService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.ServiceAccount/GetServiceAccountService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceAccountClient) PutServiceAccountService(ctx context.Context, in *ServiceAccountService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.ServiceAccount/PutServiceAccountService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceAccountClient) PatchServiceAccountService(ctx context.Context, in *ServiceAccountService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.ServiceAccount/PatchServiceAccountService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceAccountClient) DeleteServiceAccountService(ctx context.Context, in *ServiceAccountService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.ServiceAccount/DeleteServiceAccountService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceAccountServer is the server API for ServiceAccount service.
type ServiceAccountServer interface {
	CreateServiceAccountService(context.Context, *ServiceAccountService) (*ServiceResponse, error)
	GetServiceAccountService(context.Context, *ServiceAccountService) (*ServiceResponse, error)
	PutServiceAccountService(context.Context, *ServiceAccountService) (*ServiceResponse, error)
	PatchServiceAccountService(context.Context, *ServiceAccountService) (*ServiceResponse, error)
	DeleteServiceAccountService(context.Context, *ServiceAccountService) (*ServiceResponse, error)
}

// UnimplementedServiceAccountServer can be embedded to have forward compatible implementations.
type UnimplementedServiceAccountServer struct {
}

func (*UnimplementedServiceAccountServer) CreateServiceAccountService(ctx context.Context, req *ServiceAccountService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateServiceAccountService not implemented")
}
func (*UnimplementedServiceAccountServer) GetServiceAccountService(ctx context.Context, req *ServiceAccountService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceAccountService not implemented")
}
func (*UnimplementedServiceAccountServer) PutServiceAccountService(ctx context.Context, req *ServiceAccountService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutServiceAccountService not implemented")
}
func (*UnimplementedServiceAccountServer) PatchServiceAccountService(ctx context.Context, req *ServiceAccountService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PatchServiceAccountService not implemented")
}
func (*UnimplementedServiceAccountServer) DeleteServiceAccountService(ctx context.Context, req *ServiceAccountService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteServiceAccountService not implemented")
}

func RegisterServiceAccountServer(s *grpc.Server, srv ServiceAccountServer) {
	s.RegisterService(&_ServiceAccount_serviceDesc, srv)
}

func _ServiceAccount_CreateServiceAccountService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceAccountService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceAccountServer).CreateServiceAccountService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServiceAccount/CreateServiceAccountService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceAccountServer).CreateServiceAccountService(ctx, req.(*ServiceAccountService))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceAccount_GetServiceAccountService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceAccountService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceAccountServer).GetServiceAccountService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServiceAccount/GetServiceAccountService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceAccountServer).GetServiceAccountService(ctx, req.(*ServiceAccountService))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceAccount_PutServiceAccountService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceAccountService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceAccountServer).PutServiceAccountService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServiceAccount/PutServiceAccountService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceAccountServer).PutServiceAccountService(ctx, req.(*ServiceAccountService))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceAccount_PatchServiceAccountService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceAccountService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceAccountServer).PatchServiceAccountService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServiceAccount/PatchServiceAccountService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceAccountServer).PatchServiceAccountService(ctx, req.(*ServiceAccountService))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceAccount_DeleteServiceAccountService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceAccountService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceAccountServer).DeleteServiceAccountService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServiceAccount/DeleteServiceAccountService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceAccountServer).DeleteServiceAccountService(ctx, req.(*ServiceAccountService))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceAccount_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ServiceAccount",
	HandlerType: (*ServiceAccountServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateServiceAccountService",
			Handler:    _ServiceAccount_CreateServiceAccountService_Handler,
		},
		{
			MethodName: "GetServiceAccountService",
			Handler:    _ServiceAccount_GetServiceAccountService_Handler,
		},
		{
			MethodName: "PutServiceAccountService",
			Handler:    _ServiceAccount_PutServiceAccountService_Handler,
		},
		{
			MethodName: "PatchServiceAccountService",
			Handler:    _ServiceAccount_PatchServiceAccountService_Handler,
		},
		{
			MethodName: "DeleteServiceAccountService",
			Handler:    _ServiceAccount_DeleteServiceAccountService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "serviceaccount.proto",
}
