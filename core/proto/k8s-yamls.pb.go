// Code generated by protoc-gen-go. DO NOT EDIT.
// source: k8s-yamls.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type YamlServiceResponse struct {
	ProjectId            string   `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CompanyId            string   `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	SolutionId           string   `protobuf:"bytes,3,opt,name=solution_id,json=solutionId,proto3" json:"solution_id,omitempty"`
	ServiceId            string   `protobuf:"bytes,4,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Service              []byte   `protobuf:"bytes,5,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YamlServiceResponse) Reset()         { *m = YamlServiceResponse{} }
func (m *YamlServiceResponse) String() string { return proto.CompactTextString(m) }
func (*YamlServiceResponse) ProtoMessage()    {}
func (*YamlServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_976d0189094662d4, []int{0}
}

func (m *YamlServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamlServiceResponse.Unmarshal(m, b)
}
func (m *YamlServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamlServiceResponse.Marshal(b, m, deterministic)
}
func (m *YamlServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamlServiceResponse.Merge(m, src)
}
func (m *YamlServiceResponse) XXX_Size() int {
	return xxx_messageInfo_YamlServiceResponse.Size(m)
}
func (m *YamlServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_YamlServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_YamlServiceResponse proto.InternalMessageInfo

func (m *YamlServiceResponse) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *YamlServiceResponse) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *YamlServiceResponse) GetSolutionId() string {
	if m != nil {
		return m.SolutionId
	}
	return ""
}

func (m *YamlServiceResponse) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *YamlServiceResponse) GetService() []byte {
	if m != nil {
		return m.Service
	}
	return nil
}

type YamlServiceRequest struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Service              []byte   `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YamlServiceRequest) Reset()         { *m = YamlServiceRequest{} }
func (m *YamlServiceRequest) String() string { return proto.CompactTextString(m) }
func (*YamlServiceRequest) ProtoMessage()    {}
func (*YamlServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_976d0189094662d4, []int{1}
}

func (m *YamlServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamlServiceRequest.Unmarshal(m, b)
}
func (m *YamlServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamlServiceRequest.Marshal(b, m, deterministic)
}
func (m *YamlServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamlServiceRequest.Merge(m, src)
}
func (m *YamlServiceRequest) XXX_Size() int {
	return xxx_messageInfo_YamlServiceRequest.Size(m)
}
func (m *YamlServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_YamlServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_YamlServiceRequest proto.InternalMessageInfo

func (m *YamlServiceRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *YamlServiceRequest) GetService() []byte {
	if m != nil {
		return m.Service
	}
	return nil
}

func init() {
	proto.RegisterType((*YamlServiceResponse)(nil), "proto.YamlServiceResponse")
	proto.RegisterType((*YamlServiceRequest)(nil), "proto.YamlServiceRequest")
}

func init() { proto.RegisterFile("k8s-yamls.proto", fileDescriptor_976d0189094662d4) }

var fileDescriptor_976d0189094662d4 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0xb6, 0x28, 0xd6,
	0xad, 0x4c, 0xcc, 0xcd, 0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a,
	0x6b, 0x19, 0xb9, 0x84, 0x23, 0x13, 0x73, 0x73, 0x82, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x83,
	0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x64, 0xb9, 0xb8, 0x0a, 0x8a, 0xf2, 0xb3, 0x52,
	0x93, 0x4b, 0xe2, 0x33, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x38, 0xa1, 0x22, 0x9e,
	0x29, 0x20, 0xe9, 0xe4, 0xfc, 0xdc, 0x82, 0xc4, 0xbc, 0x4a, 0x90, 0x34, 0x13, 0x44, 0x1a, 0x2a,
	0xe2, 0x99, 0x22, 0x24, 0xcf, 0xc5, 0x5d, 0x9c, 0x9f, 0x53, 0x5a, 0x92, 0x99, 0x9f, 0x07, 0x92,
	0x67, 0x06, 0xcb, 0x73, 0xc1, 0x84, 0x20, 0xfa, 0x8b, 0x21, 0x36, 0x82, 0xe4, 0x59, 0x20, 0xfa,
	0xa1, 0x22, 0x9e, 0x29, 0x42, 0x12, 0x5c, 0xec, 0x50, 0x8e, 0x04, 0xab, 0x02, 0xa3, 0x06, 0x4f,
	0x10, 0x8c, 0xab, 0xe4, 0xc4, 0x25, 0x84, 0xe2, 0xdc, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x21,
	0x2e, 0x96, 0x92, 0xca, 0x82, 0x54, 0xa8, 0x3b, 0xc1, 0x6c, 0x64, 0x33, 0x98, 0x50, 0xcc, 0x30,
	0x8a, 0xe0, 0xe2, 0x46, 0x32, 0x43, 0xc8, 0x93, 0x8b, 0xcf, 0x3d, 0xb5, 0x04, 0x59, 0x44, 0x12,
	0x12, 0x46, 0x7a, 0x98, 0x36, 0x49, 0x49, 0x61, 0x93, 0x82, 0x84, 0x99, 0x12, 0x43, 0x12, 0x1b,
	0x58, 0xd2, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x6d, 0x81, 0x6d, 0xb1, 0x6e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// YamlServiceClient is the client API for YamlService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YamlServiceClient interface {
	GetYamlService(ctx context.Context, in *YamlServiceRequest, opts ...grpc.CallOption) (*YamlServiceResponse, error)
}

type yamlServiceClient struct {
	cc *grpc.ClientConn
}

func NewYamlServiceClient(cc *grpc.ClientConn) YamlServiceClient {
	return &yamlServiceClient{cc}
}

func (c *yamlServiceClient) GetYamlService(ctx context.Context, in *YamlServiceRequest, opts ...grpc.CallOption) (*YamlServiceResponse, error) {
	out := new(YamlServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.YamlService/GetYamlService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YamlServiceServer is the server API for YamlService service.
type YamlServiceServer interface {
	GetYamlService(context.Context, *YamlServiceRequest) (*YamlServiceResponse, error)
}

// UnimplementedYamlServiceServer can be embedded to have forward compatible implementations.
type UnimplementedYamlServiceServer struct {
}

func (*UnimplementedYamlServiceServer) GetYamlService(ctx context.Context, req *YamlServiceRequest) (*YamlServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetYamlService not implemented")
}

func RegisterYamlServiceServer(s *grpc.Server, srv YamlServiceServer) {
	s.RegisterService(&_YamlService_serviceDesc, srv)
}

func _YamlService_GetYamlService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(YamlServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YamlServiceServer).GetYamlService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.YamlService/GetYamlService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YamlServiceServer).GetYamlService(ctx, req.(*YamlServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _YamlService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.YamlService",
	HandlerType: (*YamlServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetYamlService",
			Handler:    _YamlService_GetYamlService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "k8s-yamls.proto",
}
