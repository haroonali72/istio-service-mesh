// Code generated by protoc-gen-go. DO NOT EDIT.
// source: statefulset.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StatefulSetService struct {
	ProjectId            string                        `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ServiceId            string                        `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Name                 string                        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Version              string                        `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	ServiceType          string                        `protobuf:"bytes,5,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	ServiceSubType       string                        `protobuf:"bytes,6,opt,name=service_sub_type,json=serviceSubType,proto3" json:"service_sub_type,omitempty"`
	Namespace            string                        `protobuf:"bytes,7,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Token                string                        `protobuf:"bytes,8,opt,name=token,proto3" json:"token,omitempty"`
	CompanyId            string                        `protobuf:"bytes,9,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	ServiceAttributes    *StatefulSetServiceAttributes `protobuf:"bytes,10,opt,name=service_attributes,json=serviceAttributes,proto3" json:"service_attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *StatefulSetService) Reset()         { *m = StatefulSetService{} }
func (m *StatefulSetService) String() string { return proto.CompactTextString(m) }
func (*StatefulSetService) ProtoMessage()    {}
func (*StatefulSetService) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f0a4b9f0c7482c8, []int{0}
}

func (m *StatefulSetService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatefulSetService.Unmarshal(m, b)
}
func (m *StatefulSetService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatefulSetService.Marshal(b, m, deterministic)
}
func (m *StatefulSetService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatefulSetService.Merge(m, src)
}
func (m *StatefulSetService) XXX_Size() int {
	return xxx_messageInfo_StatefulSetService.Size(m)
}
func (m *StatefulSetService) XXX_DiscardUnknown() {
	xxx_messageInfo_StatefulSetService.DiscardUnknown(m)
}

var xxx_messageInfo_StatefulSetService proto.InternalMessageInfo

func (m *StatefulSetService) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *StatefulSetService) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *StatefulSetService) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StatefulSetService) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *StatefulSetService) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *StatefulSetService) GetServiceSubType() string {
	if m != nil {
		return m.ServiceSubType
	}
	return ""
}

func (m *StatefulSetService) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *StatefulSetService) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *StatefulSetService) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *StatefulSetService) GetServiceAttributes() *StatefulSetServiceAttributes {
	if m != nil {
		return m.ServiceAttributes
	}
	return nil
}

type StatefulSetServiceAttributes struct {
	Labels               map[string]string               `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations          map[string]string               `protobuf:"bytes,2,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LabelSelector        *LabelSelectorObj               `protobuf:"bytes,3,opt,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty"`
	Replicas             *Replicas                       `protobuf:"bytes,4,opt,name=replicas,proto3" json:"replicas,omitempty"`
	RevisionHistoryLimit *RevisionHistoryLimit           `protobuf:"bytes,5,opt,name=revisionHistoryLimit,proto3" json:"revisionHistoryLimit,omitempty"`
	UpdateStrategy       *StateFulSetUpdateStrategy      `protobuf:"bytes,6,opt,name=updateStrategy,proto3" json:"updateStrategy,omitempty"`
	Containers           map[string]*ContainerAttributes `protobuf:"bytes,7,rep,name=containers,proto3" json:"containers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	InitContainers       map[string]*ContainerAttributes `protobuf:"bytes,8,rep,name=initContainers,proto3" json:"initContainers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NodeSelector         map[string]string               `protobuf:"bytes,9,rep,name=node_selector,json=nodeSelector,proto3" json:"node_selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IstioConfig          *IstioConfig                    `protobuf:"bytes,10,opt,name=istio_config,json=istioConfig,proto3" json:"istio_config,omitempty"`
	IsRbacEnabled        bool                            `protobuf:"varint,11,opt,name=is_rbac_enabled,json=isRbacEnabled,proto3" json:"is_rbac_enabled,omitempty"`
	Roles                []*K8SRbacAttribute             `protobuf:"bytes,12,rep,name=roles,proto3" json:"roles,omitempty"`
	IstioRoles           []*IstioRbacAttribute           `protobuf:"bytes,13,rep,name=istio_roles,json=istioRoles,proto3" json:"istio_roles,omitempty"`
	Volumes              []*Volume                       `protobuf:"bytes,14,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Affinity             *Affinity                       `protobuf:"bytes,15,opt,name=affinity,proto3" json:"affinity,omitempty"`
	ServiceName          string                          `protobuf:"bytes,16,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *StatefulSetServiceAttributes) Reset()         { *m = StatefulSetServiceAttributes{} }
func (m *StatefulSetServiceAttributes) String() string { return proto.CompactTextString(m) }
func (*StatefulSetServiceAttributes) ProtoMessage()    {}
func (*StatefulSetServiceAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f0a4b9f0c7482c8, []int{1}
}

func (m *StatefulSetServiceAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatefulSetServiceAttributes.Unmarshal(m, b)
}
func (m *StatefulSetServiceAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatefulSetServiceAttributes.Marshal(b, m, deterministic)
}
func (m *StatefulSetServiceAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatefulSetServiceAttributes.Merge(m, src)
}
func (m *StatefulSetServiceAttributes) XXX_Size() int {
	return xxx_messageInfo_StatefulSetServiceAttributes.Size(m)
}
func (m *StatefulSetServiceAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_StatefulSetServiceAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_StatefulSetServiceAttributes proto.InternalMessageInfo

func (m *StatefulSetServiceAttributes) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetLabelSelector() *LabelSelectorObj {
	if m != nil {
		return m.LabelSelector
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetReplicas() *Replicas {
	if m != nil {
		return m.Replicas
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetRevisionHistoryLimit() *RevisionHistoryLimit {
	if m != nil {
		return m.RevisionHistoryLimit
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetUpdateStrategy() *StateFulSetUpdateStrategy {
	if m != nil {
		return m.UpdateStrategy
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetContainers() map[string]*ContainerAttributes {
	if m != nil {
		return m.Containers
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetInitContainers() map[string]*ContainerAttributes {
	if m != nil {
		return m.InitContainers
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetNodeSelector() map[string]string {
	if m != nil {
		return m.NodeSelector
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetIstioConfig() *IstioConfig {
	if m != nil {
		return m.IstioConfig
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetIsRbacEnabled() bool {
	if m != nil {
		return m.IsRbacEnabled
	}
	return false
}

func (m *StatefulSetServiceAttributes) GetRoles() []*K8SRbacAttribute {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetIstioRoles() []*IstioRbacAttribute {
	if m != nil {
		return m.IstioRoles
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetVolumes() []*Volume {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetAffinity() *Affinity {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *StatefulSetServiceAttributes) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func init() {
	proto.RegisterType((*StatefulSetService)(nil), "proto.StatefulSetService")
	proto.RegisterType((*StatefulSetServiceAttributes)(nil), "proto.StatefulSetServiceAttributes")
	proto.RegisterMapType((map[string]string)(nil), "proto.StatefulSetServiceAttributes.AnnotationsEntry")
	proto.RegisterMapType((map[string]*ContainerAttributes)(nil), "proto.StatefulSetServiceAttributes.ContainersEntry")
	proto.RegisterMapType((map[string]*ContainerAttributes)(nil), "proto.StatefulSetServiceAttributes.InitContainersEntry")
	proto.RegisterMapType((map[string]string)(nil), "proto.StatefulSetServiceAttributes.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "proto.StatefulSetServiceAttributes.NodeSelectorEntry")
}

func init() { proto.RegisterFile("statefulset.proto", fileDescriptor_4f0a4b9f0c7482c8) }

var fileDescriptor_4f0a4b9f0c7482c8 = []byte{
	// 809 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x6d, 0x6f, 0x1b, 0x45,
	0x10, 0xc6, 0x4e, 0xf3, 0xe2, 0x39, 0xbf, 0x24, 0x4b, 0x05, 0x5b, 0x53, 0x24, 0x13, 0x24, 0xb0,
	0x84, 0x08, 0xc8, 0xa5, 0xa2, 0xf4, 0x43, 0x51, 0x94, 0xa6, 0xad, 0x45, 0xd5, 0x56, 0x6b, 0xa8,
	0x04, 0x12, 0xb2, 0xf6, 0xce, 0x93, 0xb0, 0xed, 0x79, 0xf7, 0xb4, 0xbb, 0xb6, 0xe4, 0x9f, 0xc1,
	0x1f, 0xe5, 0x13, 0x3f, 0x00, 0xed, 0xcb, 0x39, 0x67, 0x27, 0x20, 0x47, 0xe6, 0x93, 0x3d, 0xcf,
	0x3c, 0xcf, 0xb3, 0xb3, 0x73, 0xb3, 0x03, 0x47, 0xc6, 0x72, 0x8b, 0x17, 0xb3, 0xdc, 0xa0, 0x3d,
	0x29, 0xb4, 0xb2, 0x8a, 0xec, 0xfa, 0x9f, 0x6e, 0xeb, 0x12, 0x25, 0x6a, 0x9e, 0x9f, 0xc4, 0xd0,
	0xa0, 0x9e, 0x8b, 0x0c, 0x63, 0xd8, 0x9c, 0xab, 0x7c, 0x36, 0x8d, 0xd1, 0xf1, 0xdf, 0x75, 0x20,
	0xa3, 0x68, 0x34, 0x42, 0x3b, 0x0a, 0x54, 0xf2, 0x29, 0x40, 0xa1, 0xd5, 0x3b, 0xcc, 0xec, 0x58,
	0x4c, 0x68, 0xad, 0x57, 0xeb, 0x37, 0x58, 0x23, 0x22, 0xc3, 0x89, 0x4b, 0x47, 0x53, 0x97, 0xae,
	0x87, 0x74, 0x44, 0x86, 0x13, 0x42, 0xe0, 0x8e, 0xe4, 0x53, 0xa4, 0x3b, 0x3e, 0xe1, 0xff, 0x13,
	0x0a, 0xfb, 0x73, 0xd4, 0x46, 0x28, 0x49, 0xef, 0x78, 0xb8, 0x0c, 0xc9, 0x67, 0xd0, 0x2c, 0xcd,
	0xec, 0xa2, 0x40, 0xba, 0xeb, 0xd3, 0x49, 0xc4, 0x7e, 0x5e, 0x14, 0x48, 0xfa, 0x70, 0x58, 0x52,
	0xcc, 0x2c, 0x0d, 0xb4, 0x3d, 0x4f, 0x6b, 0x47, 0x7c, 0x34, 0x4b, 0x3d, 0xf3, 0x3e, 0x34, 0xdc,
	0x71, 0xa6, 0xe0, 0x19, 0xd2, 0xfd, 0x50, 0xd8, 0x12, 0x20, 0x77, 0x61, 0xd7, 0xaa, 0xf7, 0x28,
	0xe9, 0x81, 0xcf, 0x84, 0xc0, 0xdd, 0x26, 0x53, 0xd3, 0x82, 0xcb, 0x85, 0xbb, 0x4d, 0x23, 0x88,
	0x22, 0x32, 0x9c, 0x10, 0x06, 0xa4, 0x3c, 0x9c, 0x5b, 0xab, 0x45, 0x3a, 0xb3, 0x68, 0x28, 0xf4,
	0x6a, 0xfd, 0x64, 0xf0, 0x79, 0x68, 0xe3, 0xc9, 0xf5, 0x16, 0x9e, 0x2e, 0xa9, 0xec, 0xc8, 0xac,
	0x43, 0xc7, 0x7f, 0x26, 0x70, 0xff, 0xbf, 0x34, 0xe4, 0x39, 0xec, 0xe5, 0x3c, 0xc5, 0xdc, 0xd0,
	0x5a, 0x6f, 0xa7, 0x9f, 0x0c, 0xbe, 0xd9, 0xe0, 0xa0, 0x93, 0x97, 0x5e, 0x71, 0x2e, 0xad, 0x5e,
	0xb0, 0x28, 0x27, 0x6f, 0x21, 0xe1, 0x52, 0x2a, 0xcb, 0xad, 0x50, 0xd2, 0xd0, 0xba, 0x77, 0xfb,
	0x6e, 0x13, 0xb7, 0xd3, 0x2b, 0x59, 0xb0, 0xac, 0x1a, 0x91, 0x27, 0xd0, 0xf6, 0x27, 0x8c, 0x0d,
	0xe6, 0x98, 0x59, 0xa5, 0xfd, 0xd7, 0x4e, 0x06, 0x1f, 0x47, 0x6b, 0x5f, 0xcb, 0x28, 0xe6, 0x5e,
	0xa7, 0xef, 0x58, 0x2b, 0xaf, 0x22, 0xe4, 0x2b, 0x38, 0xd0, 0x58, 0xe4, 0x22, 0xe3, 0xc6, 0x0f,
	0x44, 0x32, 0xe8, 0x44, 0x25, 0x8b, 0x30, 0x5b, 0x12, 0xc8, 0x6b, 0xb8, 0xab, 0x71, 0x2e, 0xdc,
	0xb8, 0xbc, 0x10, 0xc6, 0x2a, 0xbd, 0x78, 0x29, 0xa6, 0xc2, 0xfa, 0x51, 0x49, 0x06, 0x9f, 0x2c,
	0x85, 0xd7, 0x29, 0xec, 0x46, 0x21, 0x79, 0x01, 0xed, 0x59, 0x31, 0xe1, 0x16, 0x47, 0x56, 0x73,
	0x8b, 0x97, 0x0b, 0x3f, 0x4e, 0xc9, 0xa0, 0x57, 0x6d, 0xcc, 0x33, 0xdf, 0x98, 0x5f, 0x56, 0x78,
	0x6c, 0x4d, 0x47, 0x46, 0x6e, 0x78, 0xa4, 0xe5, 0x42, 0xa2, 0x36, 0x74, 0xdf, 0xb7, 0xf7, 0xc1,
	0x26, 0xed, 0x3d, 0x5b, 0xaa, 0x42, 0x77, 0x2b, 0x36, 0x64, 0x0c, 0x6d, 0x21, 0x85, 0xbd, 0xa2,
	0xd0, 0x03, 0x6f, 0xfc, 0xfd, 0x26, 0xc6, 0xc3, 0x15, 0x65, 0x30, 0x5f, 0xb3, 0x23, 0xbf, 0x41,
	0x4b, 0xaa, 0x09, 0x5e, 0x7d, 0xbc, 0x86, 0xf7, 0x7f, 0xb8, 0x89, 0xff, 0x2b, 0x35, 0xc1, 0xf2,
	0x33, 0x06, 0xf7, 0xa6, 0xac, 0x40, 0xe4, 0x21, 0x34, 0x85, 0xb1, 0x42, 0x8d, 0x33, 0x25, 0x2f,
	0xc4, 0x65, 0x7c, 0x29, 0x24, 0x5a, 0x0f, 0x5d, 0xea, 0xcc, 0x67, 0x58, 0x22, 0xae, 0x02, 0xf2,
	0x05, 0x74, 0x84, 0x19, 0xeb, 0x94, 0x67, 0x63, 0x94, 0x3c, 0xcd, 0x71, 0x42, 0x93, 0x5e, 0xad,
	0x7f, 0xc0, 0x5a, 0xc2, 0xb0, 0x94, 0x67, 0xe7, 0x01, 0x24, 0x5f, 0xc3, 0xae, 0x56, 0x39, 0x1a,
	0xda, 0xf4, 0x25, 0x97, 0xf3, 0xf6, 0xd3, 0x23, 0xcf, 0x5a, 0xd6, 0xc9, 0x02, 0x8b, 0x3c, 0x86,
	0x70, 0xca, 0x38, 0x88, 0x5a, 0x5e, 0x74, 0xaf, 0x5a, 0xcc, 0xaa, 0x0c, 0x3c, 0x9b, 0x79, 0xed,
	0x97, 0xb0, 0x1f, 0x96, 0xa5, 0xa1, 0x6d, 0xaf, 0x6b, 0x45, 0xdd, 0x5b, 0x8f, 0xb2, 0x32, 0xeb,
	0x86, 0x99, 0x5f, 0x5c, 0xb8, 0x1e, 0x2f, 0x68, 0x67, 0x65, 0x98, 0x4f, 0x23, 0xcc, 0x96, 0x04,
	0xd2, 0x83, 0x72, 0xb7, 0xbd, 0x72, 0x4b, 0xf2, 0x70, 0x65, 0xdd, 0x39, 0xa8, 0xfb, 0x03, 0x24,
	0x95, 0xa7, 0x4c, 0x0e, 0x61, 0xe7, 0x3d, 0x2e, 0xe2, 0x16, 0x76, 0x7f, 0xdd, 0x1e, 0x9b, 0xf3,
	0x7c, 0x86, 0x71, 0xf5, 0x86, 0xe0, 0x71, 0xfd, 0x51, 0xad, 0xfb, 0x04, 0x0e, 0xd7, 0xdf, 0xed,
	0xad, 0xf4, 0xbf, 0x42, 0x67, 0x6d, 0x76, 0x6e, 0x90, 0x7f, 0x5b, 0x95, 0x27, 0x83, 0x6e, 0xbc,
	0xeb, 0x52, 0x58, 0xd9, 0x7d, 0x15, 0xeb, 0xdf, 0xe1, 0xc3, 0x1b, 0x46, 0xf3, 0x7f, 0xb3, 0xff,
	0x11, 0x8e, 0xae, 0x4d, 0xe6, 0x6d, 0xae, 0x3e, 0xf8, 0xab, 0x0e, 0x49, 0x65, 0xf0, 0xc9, 0x33,
	0xe8, 0x9c, 0x69, 0xe4, 0x16, 0x9f, 0x72, 0x9c, 0x2a, 0xe9, 0xa0, 0x7b, 0xff, 0xfa, 0x3e, 0xba,
	0x1f, 0x95, 0xa9, 0x10, 0x33, 0x34, 0x85, 0x92, 0x06, 0x8f, 0x3f, 0x70, 0x3e, 0x4f, 0x31, 0xc7,
	0xad, 0x7d, 0xce, 0xa0, 0xf9, 0x1c, 0xed, 0x96, 0x26, 0xe7, 0xd0, 0x7e, 0xc3, 0x6d, 0xf6, 0xc7,
	0xf6, 0xb5, 0xbc, 0x99, 0x6d, 0x59, 0x4b, 0xba, 0xe7, 0x13, 0x0f, 0xfe, 0x09, 0x00, 0x00, 0xff,
	0xff, 0x5a, 0xc2, 0x4f, 0x8c, 0xca, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StatefulSetClient is the client API for StatefulSet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StatefulSetClient interface {
	CreateDaemonSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error)
	DeleteDaemonSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error)
	GetDaemonSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error)
	PatchDaemonSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error)
	PutDaemonSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error)
}

type statefulSetClient struct {
	cc grpc.ClientConnInterface
}

func NewStatefulSetClient(cc grpc.ClientConnInterface) StatefulSetClient {
	return &statefulSetClient{cc}
}

func (c *statefulSetClient) CreateDaemonSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.StatefulSet/CreateDaemonSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statefulSetClient) DeleteDaemonSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.StatefulSet/DeleteDaemonSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statefulSetClient) GetDaemonSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.StatefulSet/GetDaemonSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statefulSetClient) PatchDaemonSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.StatefulSet/PatchDaemonSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statefulSetClient) PutDaemonSet(ctx context.Context, in *StatefulSetService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.StatefulSet/PutDaemonSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StatefulSetServer is the server API for StatefulSet service.
type StatefulSetServer interface {
	CreateDaemonSet(context.Context, *StatefulSetService) (*ServiceResponse, error)
	DeleteDaemonSet(context.Context, *StatefulSetService) (*ServiceResponse, error)
	GetDaemonSet(context.Context, *StatefulSetService) (*ServiceResponse, error)
	PatchDaemonSet(context.Context, *StatefulSetService) (*ServiceResponse, error)
	PutDaemonSet(context.Context, *StatefulSetService) (*ServiceResponse, error)
}

// UnimplementedStatefulSetServer can be embedded to have forward compatible implementations.
type UnimplementedStatefulSetServer struct {
}

func (*UnimplementedStatefulSetServer) CreateDaemonSet(ctx context.Context, req *StatefulSetService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDaemonSet not implemented")
}
func (*UnimplementedStatefulSetServer) DeleteDaemonSet(ctx context.Context, req *StatefulSetService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDaemonSet not implemented")
}
func (*UnimplementedStatefulSetServer) GetDaemonSet(ctx context.Context, req *StatefulSetService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDaemonSet not implemented")
}
func (*UnimplementedStatefulSetServer) PatchDaemonSet(ctx context.Context, req *StatefulSetService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PatchDaemonSet not implemented")
}
func (*UnimplementedStatefulSetServer) PutDaemonSet(ctx context.Context, req *StatefulSetService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutDaemonSet not implemented")
}

func RegisterStatefulSetServer(s *grpc.Server, srv StatefulSetServer) {
	s.RegisterService(&_StatefulSet_serviceDesc, srv)
}

func _StatefulSet_CreateDaemonSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatefulSetService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatefulSetServer).CreateDaemonSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StatefulSet/CreateDaemonSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatefulSetServer).CreateDaemonSet(ctx, req.(*StatefulSetService))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatefulSet_DeleteDaemonSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatefulSetService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatefulSetServer).DeleteDaemonSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StatefulSet/DeleteDaemonSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatefulSetServer).DeleteDaemonSet(ctx, req.(*StatefulSetService))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatefulSet_GetDaemonSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatefulSetService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatefulSetServer).GetDaemonSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StatefulSet/GetDaemonSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatefulSetServer).GetDaemonSet(ctx, req.(*StatefulSetService))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatefulSet_PatchDaemonSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatefulSetService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatefulSetServer).PatchDaemonSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StatefulSet/PatchDaemonSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatefulSetServer).PatchDaemonSet(ctx, req.(*StatefulSetService))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatefulSet_PutDaemonSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatefulSetService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatefulSetServer).PutDaemonSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StatefulSet/PutDaemonSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatefulSetServer).PutDaemonSet(ctx, req.(*StatefulSetService))
	}
	return interceptor(ctx, in, info, handler)
}

var _StatefulSet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.StatefulSet",
	HandlerType: (*StatefulSetServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDaemonSet",
			Handler:    _StatefulSet_CreateDaemonSet_Handler,
		},
		{
			MethodName: "DeleteDaemonSet",
			Handler:    _StatefulSet_DeleteDaemonSet_Handler,
		},
		{
			MethodName: "GetDaemonSet",
			Handler:    _StatefulSet_GetDaemonSet_Handler,
		},
		{
			MethodName: "PatchDaemonSet",
			Handler:    _StatefulSet_PatchDaemonSet_Handler,
		},
		{
			MethodName: "PutDaemonSet",
			Handler:    _StatefulSet_PutDaemonSet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "statefulset.proto",
}
