syntax = "proto3";

package proto;
import "persistentvolume.proto";
import "gateway.proto";
service PersistentVolumeClaim {
    rpc CreatePersistentVolumeClaim (PersistentVolumeClaimService) returns (ServiceResponse) {}
    rpc GetPersistentVolumeClaim (PersistentVolumeClaimService) returns (ServiceResponse) {}
    rpc DeletePersistentVolumeClaim (PersistentVolumeClaimService) returns (ServiceResponse) {}
    rpc PatchPersistentVolumeClaim (PersistentVolumeClaimService) returns (ServiceResponse) {}
    rpc PutPersistentVolumeClaim (PersistentVolumeClaimService) returns (ServiceResponse) {}
}

message PersistentVolumeClaimService {
    string project_id = 1;
    string service_id = 2;
    string name = 3;
    string version = 4;
    string service_type = 5;
    string service_sub_type = 6;
    string token = 7;
    string company_id = 8;
    PersistentVolumeClaimAttributes service_attributes = 9;
    string namespace = 10;
}
message PersistentVolumeClaimServiceResponse {
    string error = 1;
    PersistentVolumeClaimService resp = 2;
}
message PersistentVolumeClaimAttributes {
    LabelSelectorObj   label_selector =1;
    string volumeName=2;
    repeated AccessMode accessMode=3;
    string storageClassName=4;
    string requestQuantity=5;
    string limitQuantity=6;
}
message LabelSelectorObj {
    map<string,string>  match_label=1;
    repeated LabelSelectorRequirement  match_expression=2;
}
message LabelSelectorRequirement{
    string key=1;
    repeated string values =2;
    LabelSelectorOperator operator=3;
}
enum LabelSelectorOperator{
    In=0;
    NotIn=1;
    Exists=2;
    DoesNotExist=3;
}