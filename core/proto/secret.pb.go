// Code generated by protoc-gen-go. DO NOT EDIT.
// source: secret.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SecretService struct {
	ServiceId               string                   `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Token                   string                   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	ProjectId               string                   `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CompanyId               string                   `protobuf:"bytes,4,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Name                    string                   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Version                 string                   `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	ServiceType             string                   `protobuf:"bytes,7,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	ServiceSubType          string                   `protobuf:"bytes,8,opt,name=service_sub_type,json=serviceSubType,proto3" json:"service_sub_type,omitempty"`
	ServiceDependencyInfo   *any.Any                 `protobuf:"bytes,9,opt,name=service_dependency_info,json=serviceDependencyInfo,proto3" json:"service_dependency_info,omitempty"`
	Namespace               string                   `protobuf:"bytes,10,opt,name=namespace,proto3" json:"namespace,omitempty"`
	SecretServiceAttributes *SecretServiceAttributes `protobuf:"bytes,11,opt,name=secret_service_attributes,json=secretServiceAttributes,proto3" json:"secret_service_attributes,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                 `json:"-"`
	XXX_unrecognized        []byte                   `json:"-"`
	XXX_sizecache           int32                    `json:"-"`
}

func (m *SecretService) Reset()         { *m = SecretService{} }
func (m *SecretService) String() string { return proto.CompactTextString(m) }
func (*SecretService) ProtoMessage()    {}
func (*SecretService) Descriptor() ([]byte, []int) {
	return fileDescriptor_6acf428160d7a216, []int{0}
}

func (m *SecretService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecretService.Unmarshal(m, b)
}
func (m *SecretService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecretService.Marshal(b, m, deterministic)
}
func (m *SecretService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecretService.Merge(m, src)
}
func (m *SecretService) XXX_Size() int {
	return xxx_messageInfo_SecretService.Size(m)
}
func (m *SecretService) XXX_DiscardUnknown() {
	xxx_messageInfo_SecretService.DiscardUnknown(m)
}

var xxx_messageInfo_SecretService proto.InternalMessageInfo

func (m *SecretService) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *SecretService) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SecretService) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *SecretService) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *SecretService) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SecretService) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *SecretService) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *SecretService) GetServiceSubType() string {
	if m != nil {
		return m.ServiceSubType
	}
	return ""
}

func (m *SecretService) GetServiceDependencyInfo() *any.Any {
	if m != nil {
		return m.ServiceDependencyInfo
	}
	return nil
}

func (m *SecretService) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *SecretService) GetSecretServiceAttributes() *SecretServiceAttributes {
	if m != nil {
		return m.SecretServiceAttributes
	}
	return nil
}

type SecretServiceAttributes struct {
	SecretData           map[string]string `protobuf:"bytes,1,rep,name=secret_data,json=secretData,proto3" json:"secret_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SecretType           string            `protobuf:"bytes,2,opt,name=secret_type,json=secretType,proto3" json:"secret_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SecretServiceAttributes) Reset()         { *m = SecretServiceAttributes{} }
func (m *SecretServiceAttributes) String() string { return proto.CompactTextString(m) }
func (*SecretServiceAttributes) ProtoMessage()    {}
func (*SecretServiceAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_6acf428160d7a216, []int{1}
}

func (m *SecretServiceAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecretServiceAttributes.Unmarshal(m, b)
}
func (m *SecretServiceAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecretServiceAttributes.Marshal(b, m, deterministic)
}
func (m *SecretServiceAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecretServiceAttributes.Merge(m, src)
}
func (m *SecretServiceAttributes) XXX_Size() int {
	return xxx_messageInfo_SecretServiceAttributes.Size(m)
}
func (m *SecretServiceAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_SecretServiceAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_SecretServiceAttributes proto.InternalMessageInfo

func (m *SecretServiceAttributes) GetSecretData() map[string]string {
	if m != nil {
		return m.SecretData
	}
	return nil
}

func (m *SecretServiceAttributes) GetSecretType() string {
	if m != nil {
		return m.SecretType
	}
	return ""
}

func init() {
	proto.RegisterType((*SecretService)(nil), "proto.SecretService")
	proto.RegisterType((*SecretServiceAttributes)(nil), "proto.SecretServiceAttributes")
	proto.RegisterMapType((map[string]string)(nil), "proto.SecretServiceAttributes.SecretDataEntry")
}

func init() { proto.RegisterFile("secret.proto", fileDescriptor_6acf428160d7a216) }

var fileDescriptor_6acf428160d7a216 = []byte{
	// 458 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x92, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0x49, 0xd2, 0xa4, 0x78, 0x4c, 0x21, 0x5a, 0x02, 0xd9, 0x5a, 0x7c, 0xe6, 0xd4, 0x93,
	0x2b, 0x95, 0x0b, 0x42, 0xe2, 0x50, 0x70, 0x85, 0x2a, 0x21, 0x51, 0x39, 0x9c, 0xb8, 0x54, 0x6b,
	0x7b, 0x5a, 0x4c, 0xd3, 0x5d, 0xcb, 0xbb, 0x8e, 0xe4, 0x07, 0xe4, 0xc2, 0x73, 0xf0, 0x20, 0xec,
	0x97, 0x2d, 0x15, 0x05, 0x2e, 0x3e, 0xd9, 0xf3, 0xff, 0xcf, 0x6f, 0x66, 0x77, 0x76, 0xe0, 0x81,
	0xc4, 0xbc, 0x46, 0x15, 0x57, 0xb5, 0x50, 0x82, 0x4c, 0xed, 0x27, 0x3a, 0x90, 0x58, 0x6f, 0xcb,
	0x1c, 0x9d, 0x1a, 0x1d, 0x5e, 0x0b, 0x71, 0xbd, 0xc1, 0x63, 0x1b, 0x65, 0xcd, 0xd5, 0x31, 0xe3,
	0xad, 0xb3, 0x56, 0x3f, 0x27, 0x70, 0xb0, 0xb6, 0x15, 0xd6, 0x0e, 0x21, 0xcf, 0x01, 0x3c, 0x7d,
	0x59, 0x16, 0x74, 0xf4, 0x6a, 0x74, 0x14, 0xa4, 0x81, 0x57, 0xce, 0x0b, 0xb2, 0x80, 0xa9, 0x12,
	0x37, 0xc8, 0xe9, 0xd8, 0x3a, 0x2e, 0x30, 0x90, 0xae, 0xf7, 0x03, 0x73, 0x65, 0xa0, 0x89, 0x83,
	0xbc, 0xa2, 0x21, 0x6d, 0xe7, 0xe2, 0xb6, 0xd2, 0x6d, 0x8d, 0xbd, 0xe7, 0x6c, 0xaf, 0x68, 0x9b,
	0xc0, 0x1e, 0x67, 0xb7, 0x48, 0xa7, 0xd6, 0xb0, 0xff, 0x84, 0xc2, 0xfe, 0x16, 0x6b, 0x59, 0x0a,
	0x4e, 0x67, 0x56, 0xee, 0x42, 0xf2, 0xda, 0xdc, 0xd9, 0x1d, 0x50, 0xb5, 0x15, 0xd2, 0x7d, 0x6b,
	0x87, 0x5e, 0xfb, 0xaa, 0x25, 0x72, 0x04, 0xf3, 0x2e, 0x45, 0x36, 0x99, 0x4b, 0xbb, 0x6f, 0xd3,
	0x1e, 0x7a, 0x7d, 0xdd, 0x64, 0x36, 0xf3, 0x33, 0x2c, 0xbb, 0xcc, 0x02, 0x2b, 0xe4, 0x05, 0xf2,
	0x5c, 0x1f, 0x92, 0x5f, 0x09, 0x1a, 0x68, 0x20, 0x3c, 0x59, 0xc4, 0x6e, 0x78, 0x71, 0x37, 0xbc,
	0xf8, 0x94, 0xb7, 0xe9, 0x13, 0x0f, 0x25, 0x3d, 0x73, 0xae, 0x11, 0xf2, 0x0c, 0x02, 0x73, 0x78,
	0x59, 0xb1, 0x1c, 0x29, 0xb8, 0x6b, 0xf6, 0x02, 0xf9, 0x06, 0x87, 0xee, 0xb1, 0x2e, 0xbb, 0x96,
	0x4c, 0xa9, 0xba, 0xcc, 0x1a, 0x85, 0x92, 0x86, 0xb6, 0xdb, 0x0b, 0xd7, 0x26, 0xbe, 0xf3, 0x24,
	0xa7, 0x7d, 0x56, 0xba, 0x94, 0xbb, 0x8d, 0xd5, 0xaf, 0x11, 0x2c, 0xff, 0x01, 0x91, 0x2f, 0x10,
	0xfa, 0xbe, 0x05, 0x53, 0x4c, 0x3f, 0xe9, 0x44, 0x77, 0x8a, 0xff, 0xdf, 0xc9, 0xeb, 0x89, 0x06,
	0xce, 0xb8, 0xaa, 0xdb, 0x14, 0x64, 0x2f, 0x90, 0x97, 0x7d, 0x41, 0x3b, 0x59, 0xb7, 0x09, 0x3e,
	0xc1, 0x4c, 0x35, 0x7a, 0x0f, 0x8f, 0xfe, 0xe2, 0xc9, 0x1c, 0x26, 0x37, 0xd8, 0xfa, 0x7d, 0x32,
	0xbf, 0x66, 0x93, 0xb6, 0x6c, 0xd3, 0x74, 0xbc, 0x0b, 0xde, 0x8d, 0xdf, 0x8e, 0x4e, 0x7e, 0x8f,
	0x61, 0xe6, 0x78, 0x72, 0x06, 0x8f, 0x3f, 0xd6, 0xc8, 0x14, 0xde, 0x5d, 0xd2, 0xc5, 0xae, 0xd3,
	0x47, 0x4f, 0x7b, 0xd5, 0xc6, 0xa9, 0x9e, 0xbb, 0xe0, 0x12, 0x57, 0xf7, 0xc8, 0x07, 0x98, 0x7f,
	0x32, 0x79, 0x03, 0x6b, 0x5c, 0x34, 0x03, 0x6b, 0x24, 0x40, 0x2e, 0x98, 0xca, 0xbf, 0x0f, 0xab,
	0xa2, 0x87, 0x92, 0xe0, 0x06, 0x07, 0x0e, 0x25, 0x9b, 0x59, 0xe3, 0xcd, 0x9f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x03, 0x9b, 0x19, 0xb7, 0x43, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SecretClient is the client API for Secret service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SecretClient interface {
	CreateSecretService(ctx context.Context, in *SecretService, opts ...grpc.CallOption) (*ServiceResponse, error)
	GetSecretService(ctx context.Context, in *SecretService, opts ...grpc.CallOption) (*ServiceResponse, error)
	PutSecretService(ctx context.Context, in *SecretService, opts ...grpc.CallOption) (*ServiceResponse, error)
	PatchSecretService(ctx context.Context, in *SecretService, opts ...grpc.CallOption) (*ServiceResponse, error)
	DeleteSecretService(ctx context.Context, in *SecretService, opts ...grpc.CallOption) (*ServiceResponse, error)
}

type secretClient struct {
	cc *grpc.ClientConn
}

func NewSecretClient(cc *grpc.ClientConn) SecretClient {
	return &secretClient{cc}
}

func (c *secretClient) CreateSecretService(ctx context.Context, in *SecretService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Secret/CreateSecretService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretClient) GetSecretService(ctx context.Context, in *SecretService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Secret/GetSecretService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretClient) PutSecretService(ctx context.Context, in *SecretService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Secret/PutSecretService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretClient) PatchSecretService(ctx context.Context, in *SecretService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Secret/PatchSecretService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretClient) DeleteSecretService(ctx context.Context, in *SecretService, opts ...grpc.CallOption) (*ServiceResponse, error) {
	out := new(ServiceResponse)
	err := c.cc.Invoke(ctx, "/proto.Secret/DeleteSecretService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SecretServer is the server API for Secret service.
type SecretServer interface {
	CreateSecretService(context.Context, *SecretService) (*ServiceResponse, error)
	GetSecretService(context.Context, *SecretService) (*ServiceResponse, error)
	PutSecretService(context.Context, *SecretService) (*ServiceResponse, error)
	PatchSecretService(context.Context, *SecretService) (*ServiceResponse, error)
	DeleteSecretService(context.Context, *SecretService) (*ServiceResponse, error)
}

// UnimplementedSecretServer can be embedded to have forward compatible implementations.
type UnimplementedSecretServer struct {
}

func (*UnimplementedSecretServer) CreateSecretService(ctx context.Context, req *SecretService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSecretService not implemented")
}
func (*UnimplementedSecretServer) GetSecretService(ctx context.Context, req *SecretService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSecretService not implemented")
}
func (*UnimplementedSecretServer) PutSecretService(ctx context.Context, req *SecretService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutSecretService not implemented")
}
func (*UnimplementedSecretServer) PatchSecretService(ctx context.Context, req *SecretService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PatchSecretService not implemented")
}
func (*UnimplementedSecretServer) DeleteSecretService(ctx context.Context, req *SecretService) (*ServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSecretService not implemented")
}

func RegisterSecretServer(s *grpc.Server, srv SecretServer) {
	s.RegisterService(&_Secret_serviceDesc, srv)
}

func _Secret_CreateSecretService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SecretService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretServer).CreateSecretService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Secret/CreateSecretService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretServer).CreateSecretService(ctx, req.(*SecretService))
	}
	return interceptor(ctx, in, info, handler)
}

func _Secret_GetSecretService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SecretService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretServer).GetSecretService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Secret/GetSecretService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretServer).GetSecretService(ctx, req.(*SecretService))
	}
	return interceptor(ctx, in, info, handler)
}

func _Secret_PutSecretService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SecretService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretServer).PutSecretService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Secret/PutSecretService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretServer).PutSecretService(ctx, req.(*SecretService))
	}
	return interceptor(ctx, in, info, handler)
}

func _Secret_PatchSecretService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SecretService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretServer).PatchSecretService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Secret/PatchSecretService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretServer).PatchSecretService(ctx, req.(*SecretService))
	}
	return interceptor(ctx, in, info, handler)
}

func _Secret_DeleteSecretService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SecretService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretServer).DeleteSecretService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Secret/DeleteSecretService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretServer).DeleteSecretService(ctx, req.(*SecretService))
	}
	return interceptor(ctx, in, info, handler)
}

var _Secret_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Secret",
	HandlerType: (*SecretServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSecretService",
			Handler:    _Secret_CreateSecretService_Handler,
		},
		{
			MethodName: "GetSecretService",
			Handler:    _Secret_GetSecretService_Handler,
		},
		{
			MethodName: "PutSecretService",
			Handler:    _Secret_PutSecretService_Handler,
		},
		{
			MethodName: "PatchSecretService",
			Handler:    _Secret_PatchSecretService_Handler,
		},
		{
			MethodName: "DeleteSecretService",
			Handler:    _Secret_DeleteSecretService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "secret.proto",
}
